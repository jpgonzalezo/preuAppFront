/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/**
 * Concrete implementation for http interceptor matchers.
 * This implementation uses regex to check mapping paths vs request url.
 */
export class TdURLRegExpInterceptorMatcher {
    /**
     * @param {?} options
     * @param {?} mapping
     * @return {?}
     */
    matches(options, mapping) {
        return mapping.paths.filter((path) => {
            path = path.replace(/\*\*/gi, '<>')
                .replace(/\*/gi, '[a-zA-Z0-9\\-_]+')
                .replace(/<>/gi, '[a-zA-Z0-9\\-_\/]*');
            if (path) {
                path += '(\\?{1}.*)?$';
                return new RegExp(path).test(options.url);
            }
            return false;
        }).length > 0;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXJsLXJlZ2V4cC1pbnRlcmNlcHRvci1tYXRjaGVyLmNsYXNzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNvdmFsZW50L2h0dHAvIiwic291cmNlcyI6WyJpbnRlcmNlcHRvcnMvdXJsLXJlZ2V4cC1pbnRlcmNlcHRvci1tYXRjaGVyLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBT0EsTUFBTSxPQUFPLDZCQUE2Qjs7Ozs7O0lBRXhDLE9BQU8sQ0FBQyxPQUFzQixFQUFFLE9BQWtDO1FBQ2hFLE9BQU8sT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFZLEVBQUUsRUFBRTtZQUMzQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDO2lCQUN4QixPQUFPLENBQUMsTUFBTSxFQUFFLGtCQUFrQixDQUFDO2lCQUNuQyxPQUFPLENBQUMsTUFBTSxFQUFFLG9CQUFvQixDQUFDLENBQUM7WUFDakQsSUFBSSxJQUFJLEVBQUU7Z0JBQ1IsSUFBSSxJQUFJLGNBQWMsQ0FBQztnQkFDdkIsT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzNDO1lBQ0QsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2hCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElUZEh0dHBJbnRlcmNlcHRvck1hcHBpbmcgfSBmcm9tICcuL2h0dHAtaW50ZXJjZXB0b3ItbWFwcGluZy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgSVRkSHR0cEludGVyY2VwdG9yTWF0Y2hlciB9IGZyb20gJy4vaHR0cC1pbnRlcmNlcHRvci1tYXRjaGVyLmludGVyZmFjZSc7XG5cbi8qKlxuICogQ29uY3JldGUgaW1wbGVtZW50YXRpb24gZm9yIGh0dHAgaW50ZXJjZXB0b3IgbWF0Y2hlcnMuXG4gKiBUaGlzIGltcGxlbWVudGF0aW9uIHVzZXMgcmVnZXggdG8gY2hlY2sgbWFwcGluZyBwYXRocyB2cyByZXF1ZXN0IHVybC5cbiAqL1xuZXhwb3J0IGNsYXNzIFRkVVJMUmVnRXhwSW50ZXJjZXB0b3JNYXRjaGVyIGltcGxlbWVudHMgSVRkSHR0cEludGVyY2VwdG9yTWF0Y2hlciB7XG5cbiAgbWF0Y2hlcyhvcHRpb25zOiB7dXJsOiBzdHJpbmd9LCBtYXBwaW5nOiBJVGRIdHRwSW50ZXJjZXB0b3JNYXBwaW5nKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIG1hcHBpbmcucGF0aHMuZmlsdGVyKChwYXRoOiBzdHJpbmcpID0+IHtcbiAgICAgIHBhdGggPSBwYXRoLnJlcGxhY2UoL1xcKlxcKi9naSwgJzw+JylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFwqL2dpLCAnW2EtekEtWjAtOVxcXFwtX10rJylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvPD4vZ2ksICdbYS16QS1aMC05XFxcXC1fXFwvXSonKTtcbiAgICAgIGlmIChwYXRoKSB7XG4gICAgICAgIHBhdGggKz0gJyhcXFxcP3sxfS4qKT8kJztcbiAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAocGF0aCkudGVzdChvcHRpb25zLnVybCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSkubGVuZ3RoID4gMDtcbiAgfVxuXG59XG4iXX0=