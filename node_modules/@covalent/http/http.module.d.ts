import { ModuleWithProviders, Injector, InjectionToken, Provider } from '@angular/core';
import { HttpHandler } from '@angular/common/http';
import { InternalHttpService } from './actions/http.mixin';
import { TdHttpService, ITdHttpInterceptorConfig } from './interceptors/http.service';
export declare const HTTP_CONFIG: InjectionToken<HttpConfig>;
export declare type HttpConfig = {
    interceptors: ITdHttpInterceptorConfig[];
};
export declare function httpFactory(handler: HttpHandler, injector: Injector, config: HttpConfig): TdHttpService;
export declare const HTTP_INTERCEPTOR_PROVIDER: Provider;
export declare class CovalentHttpModule {
    private _internalHttpService;
    constructor(_internalHttpService: InternalHttpService);
    static forRoot(config?: HttpConfig): ModuleWithProviders;
}
