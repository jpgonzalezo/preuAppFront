{"version":3,"file":"covalent-http.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@covalent/http/interceptors/http.service.ts","ng://@covalent/http/actions/http.mixin.ts","ng://@covalent/http/interceptors/url-regexp-interceptor-matcher.class.ts","ng://@covalent/http/http.module.ts","ng://@covalent/http/actions/params/abstract-param.decorator.ts","ng://@covalent/http/actions/methods/abstract-method.decorator.ts","ng://@covalent/http/actions/methods/get.decorator.ts","ng://@covalent/http/actions/methods/post.decorator.ts","ng://@covalent/http/actions/methods/patch.decorator.ts","ng://@covalent/http/actions/methods/put.decorator.ts","ng://@covalent/http/actions/methods/delete.decorator.ts","ng://@covalent/http/actions/class/http.decorator.ts","ng://@covalent/http/actions/params/param.decorator.ts","ng://@covalent/http/actions/params/body.decorator.ts","ng://@covalent/http/actions/params/response.decorator.ts","ng://@covalent/http/actions/params/query-params.decorator.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Type, Injector } from '@angular/core';\nimport { HttpClient, HttpHandler, HttpResponse, HttpRequest, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable, Subscriber } from 'rxjs';\n\nimport { ITdHttpInterceptor } from './http-interceptor.interface';\nimport { ITdHttpInterceptorMatcher } from './http-interceptor-matcher.interface';\nimport { ITdHttpInterceptorMapping } from './http-interceptor-mapping.interface';\n\nimport { ITdHttpRESTOptionsWithBody } from '../http.interfaces';\n\nexport interface ITdHttpInterceptorConfig {\n  interceptor: Type<any>;\n  paths: string[];\n}\n\nexport class TdInterceptorBehaviorService {\n  private _requestInterceptors: ITdHttpInterceptorMapping[] = [];\n\n  get requestInterceptors(): ITdHttpInterceptorMapping[] {\n    return this._requestInterceptors;\n  }\n\n  get httpInterceptorMatcher(): ITdHttpInterceptorMatcher {\n    return this._httpInterceptorMatcher;\n  }\n\n  constructor(private _injector: Injector,\n              private _httpInterceptorMatcher: ITdHttpInterceptorMatcher,\n              requestInterceptorConfigs: ITdHttpInterceptorConfig[]) {\n    requestInterceptorConfigs.forEach((config: ITdHttpInterceptorConfig) => {\n      this._requestInterceptors.push({\n        interceptor: <ITdHttpInterceptor>_injector.get(config.interceptor),\n        paths: config.paths,\n      });\n    });\n  }\n}\n\nexport class TdHttpService extends HttpClient {\n\n  constructor(private _handler: HttpHandler,\n              private _interceptorBehavior: TdInterceptorBehaviorService) {\n    super(_handler);\n  }\n\n  request(first: string|HttpRequest<any>, url?: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe?: 'body' | 'events' | 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  } = {}): Observable<any> {\n    let interceptors: ITdHttpInterceptor[] = this._interceptorBehavior.requestInterceptors.filter((mapping: ITdHttpInterceptorMapping) => {\n      return this._interceptorBehavior.httpInterceptorMatcher.matches({url: url}, mapping);\n    }).map((mapping: ITdHttpInterceptorMapping) => {\n      return mapping.interceptor;\n    });\n    return this._setupRequest(first, url, options, interceptors);\n  }\n\n  private _setupRequest(method: string|HttpRequest<any>,\n                        url: string,\n                        options: ITdHttpRESTOptionsWithBody,\n                        interceptors: ITdHttpInterceptor[]): Observable<HttpResponse<any>> {\n    try {\n      options = this._requestResolve(options, interceptors);\n    } catch (e) {\n      return new Observable<any>((subscriber: Subscriber<any>) => {\n        subscriber.error(e);\n      });\n    }\n    return this._handleResponseResolve(super.request(<any>method, url, options), interceptors);\n  }\n\n  private _requestResolve(options: ITdHttpRESTOptionsWithBody, interceptors: ITdHttpInterceptor[]): ITdHttpRESTOptionsWithBody {\n    interceptors.forEach((interceptor: ITdHttpInterceptor) => {\n      if (interceptor.handleOptions) {\n        options = interceptor.handleOptions(options);\n      }\n    });\n    return options;\n  }\n\n  private _handleResponseResolve(obs: Observable<any>, interceptors: ITdHttpInterceptor[]): Observable<any> {\n    interceptors.reverse().forEach((interceptor: ITdHttpInterceptor) => {\n      if (interceptor.handleResponse) {\n        obs = interceptor.handleResponse(obs);\n      }\n    });\n    return obs;\n  }\n}\n","import { Type, Injectable, Injector, ÉµReflectionCapabilities, InjectFlags, Optional,\n  SkipSelf, Self, Inject, InjectionToken, inject, INJECTOR } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TdHttpService } from '../interceptors/http.service';\n\nimport { Observable } from 'rxjs';\n\nimport { ITdHttpRESTOptions, ITdHttpRESTOptionsWithBody, TdHttpRESTResponseType, TdHttpRESTObserve, TdHttpMethod } from '../http.interfaces';\n\nexport interface ITdHttpRESTConfig {\n  baseHeaders?: HttpHeaders;\n  baseUrl: string;\n  defaultObserve?: TdHttpRESTObserve;\n  defaultResponseType?: TdHttpRESTResponseType;\n}\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/**\n * DO NOT MODIFY\n * Taken from angular since they dont expose this function\n * This is used internally to inject services from the constructor of the base service using the mixinHttp\n * @internal\n */\nfunction injectArgs(types: (Type<any>| InjectionToken<any>| any[])[], injector: Injector): any[] {\n  const args: any[] = [];\n  for (let i: number = 0; i < types.length; i++) {\n    const arg: any = types[i];\n    if (arg) {\n      if (Array.isArray(arg)) {\n        if (arg.length === 0) {\n          throw new Error('Arguments array must have arguments.');\n        }\n        let type: Type<any>|undefined = undefined;\n        let flags: InjectFlags = InjectFlags.Default;\n\n        for (let j: number = 0; j < arg.length; j++) {\n          const meta: any = arg[j];\n          if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n            /* tslint:disable */\n            flags |= InjectFlags.Optional;\n          } else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n            flags |= InjectFlags.SkipSelf;\n          } else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n            flags |= InjectFlags.Self;\n          } else if (meta instanceof Inject) {\n            type = meta.token;\n          } else {\n            type = meta;\n          }\n          /* tslint:enable */\n        }\n\n        args.push(injector.get(type !, flags));\n      } else {\n        args.push(injector.get(arg));\n      }\n    }\n  }\n  return args;\n}\n\nexport function getInjector(): Injector {\n  try {\n    return inject(INJECTOR);\n  } catch (e) {\n    if (!InternalHttpService._injector) {\n      throw new Error('Please add CovalentHttpModule into your imports.');\n    }\n    return InternalHttpService._injector;\n  }\n}\n\n/** \n * Mixin to augment a service with http helpers.\n * @internal\n */\nexport function mixinHttp(base: any,\n                          config: ITdHttpRESTConfig,\n                          httpInject: Type<HttpClient | TdHttpService> = TdHttpService): Constructor<any> {\n  /**\n   * Internal class used to get an instance of Injector for internal usage plus also\n   * a way to inject services from the constructor of the underlying service\n   * @internal\n   */\n  abstract class HttpInternalClass extends base {\n    constructor(...args: any[]) {\n      super(...(args && args.length ? args : injectArgs(new ÉµReflectionCapabilities().parameters(base), getInjector())));\n      this._injector = getInjector();\n      this.buildConfig();\n    }\n    abstract buildConfig(): void;\n  }\n  /**\n   * Actuall class being returned with all the hooks for http usage\n   * @internal\n   */\n  return class extends HttpInternalClass {\n    private _baseUrl: string;\n    get baseUrl(): string {\n      return (typeof(this.basePath) === 'string' ?\n        this.basePath.replace(/\\/$/, '') : '') + this._baseUrl;\n    }\n    private _baseHeaders: HttpHeaders;\n    private _defaultObserve?: TdHttpRESTObserve;\n    private _defaultResponseType?: TdHttpRESTResponseType;\n\n    http: HttpClient | TdHttpService;\n\n    /**\n     * Method used to setup the configuration parameters and get an instance of the http service\n     */\n    buildConfig(): void {\n      this.http = this._injector.get(httpInject);\n      this._baseUrl = config && config.baseUrl ? config.baseUrl.replace(/\\/$/, '') : '';\n      this._baseHeaders = config && config.baseHeaders ? config.baseHeaders : new HttpHeaders();\n      this._defaultObserve = config && config.defaultObserve ? config.defaultObserve : 'body';\n      this._defaultResponseType = config && config.defaultResponseType ? config.defaultResponseType : 'json';\n    }\n\n    /**\n     * Method used to build the default headers using the base headers\n     */\n    buildHeaders(): HttpHeaders {\n      let headersObj: {[key: string]: any} = {};\n      this._baseHeaders.keys().forEach((key: any) => {\n        headersObj[key] = this._baseHeaders.get(key);\n      });\n      return new HttpHeaders(headersObj);\n    }\n    /* tslint:disable-next-line */\n    buildRequest<HttpResponse>(method: 'POST' | 'PUT' | 'PATCH', url: string, options?: ITdHttpRESTOptionsWithBody): Observable<HttpResponse>;\n    /* tslint:disable-next-line */\n    buildRequest<HttpResponse>(method: 'GET' | 'DELETE', url: string, options?: ITdHttpRESTOptions): Observable<HttpResponse>;\n    /* tslint:disable-next-line */\n    buildRequest<HttpResponse>(method: TdHttpMethod, url: string, options?: ITdHttpRESTOptionsWithBody): Observable<HttpResponse> {\n      return this._buildRequest(method, url, options);\n    }\n\n    /**\n     * Method used to build the request depending on the `http` service and TdHttpMethod\n     */\n    private _buildRequest(method: TdHttpMethod, url: string, options: ITdHttpRESTOptionsWithBody = {}): Observable<any> {\n      if (!options.responseType) {\n        options.responseType = this._defaultResponseType;\n      }\n      if (!options.observe) {\n        options.observe = this._defaultObserve;\n      }\n      if (!options.headers) {\n        options.headers = this.buildHeaders();\n      } else {\n        let headers: HttpHeaders = this.buildHeaders();\n        if (options.headers instanceof HttpHeaders) {\n          (<HttpHeaders>options.headers).keys().forEach((key: any) => {\n            headers = headers.set(key, (<HttpHeaders>options.headers).get(key));\n          });\n        } else {\n          for (let key in options.headers) {\n            headers = headers.set(key, <any>options.headers[key]);\n          }\n        }\n        options.headers = headers;\n      }\n      return (<TdHttpService>this.http).request(method, url, options);\n    }\n  };\n}\n\n/** \n * @internal\n * WORKAROUND until Ivy Renderer is ready\n */\n@Injectable({providedIn: 'root'})\nexport class InternalHttpService {\n\n  static _injector: Injector = undefined;\n\n  constructor(_injector: Injector) {\n    InternalHttpService._injector = _injector;\n  }\n}\n","import { ITdHttpInterceptorMapping } from './http-interceptor-mapping.interface';\nimport { ITdHttpInterceptorMatcher } from './http-interceptor-matcher.interface';\n\n/**\n * Concrete implementation for http interceptor matchers.\n * This implementation uses regex to check mapping paths vs request url.\n */\nexport class TdURLRegExpInterceptorMatcher implements ITdHttpInterceptorMatcher {\n\n  matches(options: {url: string}, mapping: ITdHttpInterceptorMapping): boolean {\n    return mapping.paths.filter((path: string) => {\n      path = path.replace(/\\*\\*/gi, '<>')\n                .replace(/\\*/gi, '[a-zA-Z0-9\\\\-_]+')\n                .replace(/<>/gi, '[a-zA-Z0-9\\\\-_\\/]*');\n      if (path) {\n        path += '(\\\\?{1}.*)?$';\n        return new RegExp(path).test(options.url);\n      }\n      return false;\n    }).length > 0;\n  }\n\n}\n","import { NgModule, ModuleWithProviders, Injector, InjectionToken, Provider } from '@angular/core';\nimport { HttpClientModule, HttpHandler } from '@angular/common/http';\n\nimport { InternalHttpService } from './actions/http.mixin';\n\nimport { TdHttpService, TdInterceptorBehaviorService, ITdHttpInterceptorConfig } from './interceptors/http.service';\nimport { TdURLRegExpInterceptorMatcher } from './interceptors/url-regexp-interceptor-matcher.class';\n\nexport const HTTP_CONFIG: InjectionToken<HttpConfig> = new InjectionToken<HttpConfig>('HTTP_CONFIG');\n\nexport type HttpConfig = {interceptors: ITdHttpInterceptorConfig[]};\n\nexport function httpFactory(handler: HttpHandler, injector: Injector, config: HttpConfig): TdHttpService {\n  return new TdHttpService(\n              handler,\n              new TdInterceptorBehaviorService(injector, new TdURLRegExpInterceptorMatcher(), config.interceptors),\n            );\n}\n\nexport const HTTP_INTERCEPTOR_PROVIDER: Provider = {\n  provide: TdHttpService,\n  useFactory: httpFactory,\n  deps: [HttpHandler, Injector, HTTP_CONFIG],\n};\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n  ],\n  providers: [\n    InternalHttpService,\n  ],\n})\nexport class CovalentHttpModule {\n\n  constructor(private _internalHttpService: InternalHttpService) {}\n\n  static forRoot(config: HttpConfig = {interceptors: []}): ModuleWithProviders {\n    return {\n      ngModule: CovalentHttpModule,\n      providers: [{\n          provide: HTTP_CONFIG,\n          useValue: config,\n        },\n        HTTP_INTERCEPTOR_PROVIDER,\n      ],\n    };\n  }\n}\n","declare const Reflect: any;\nexport type TdParamType = 'param' | 'response' | 'body' | 'queryParams';\n\nexport const tdHttpRESTParam: Symbol = Symbol('TdHttpRESTParam');\n\n/**\n * Abstract implementation of the http param decorator\n * @internal\n */\nexport function TdAbstractParam(type: TdParamType, param?: string): Function {\n  return function (target: Object, propertyKey: string | symbol, parameterIndex: number): void {\n    let parameters: { index: number, param: string, type: TdParamType }[] = Reflect.getOwnMetadata(tdHttpRESTParam, target, propertyKey) || [];\n    parameters.push({\n      index: parameterIndex,\n      param: param,\n      type: type,\n    });\n    Reflect.defineMetadata(tdHttpRESTParam, parameters, target, propertyKey);\n  };\n}\n","import { HttpParams } from '@angular/common/http';\n\nimport { TdHttpMethod, ITdHttpRESTOptions, ITdHttpRESTOptionsWithBody } from '../../http.interfaces';\nimport { TdParamType, tdHttpRESTParam } from '../params/abstract-param.decorator';\n\nimport { Observable, of } from 'rxjs';\n\ndeclare const Reflect: any;\n\nexport const NOOP_HTTP: Observable<any> = of(undefined);\n\n/**\n * Method used to copy parameters from an array or HttpParams object\n * into a centrilized HttpParams object\n * @internal\n */\nexport function parseParams(target: HttpParams, source: HttpParams | {[key: string]: string | string[]}): HttpParams {\n  let queryParams: HttpParams = target;\n  if (source instanceof HttpParams) {\n    source.keys().forEach((key: string) => {\n      // skip if value is undefined\n      if ((<HttpParams>source).get(key) !== undefined) {\n        queryParams = queryParams.set(key, (<HttpParams>source).get(key));\n      }\n    });\n  } else {\n    for (let key in source) {\n      // skip if value is undefined\n      if (<any>source[key] !== undefined) {\n        queryParams = queryParams.set(key, <any>source[key]);\n      }\n    }\n  }\n  return queryParams;\n}\n\n/**\n * Abstract implementation of the http method decorator\n * @internal\n */\nexport function TdAbstractMethod(config: {\n  method: TdHttpMethod,\n  path: string,\n  options?: ITdHttpRESTOptions,\n}): Function {\n  return function (target: any, propertyName: string, descriptor: TypedPropertyDescriptor<Function>): any {\n    let wrappedFunction: Function = descriptor.value;\n    // replace method call with our own and proxy it\n    descriptor.value = function (): any {\n      try {\n        let replacedPath: string = config.path;\n        let parameters: { index: number, param: string, type: TdParamType }[] = Reflect.getOwnMetadata(tdHttpRESTParam, target, propertyName);\n        let newArgs: any[] = [];\n        let body: any;\n        let queryParams: HttpParams = new HttpParams();\n        if (parameters) {\n          // map parameters and see which type they are to act on them\n          for (let parameter of parameters) {\n            if (parameter.type === 'param') {\n              newArgs[parameter.index] = arguments[parameter.index];\n              replacedPath = replacedPath.replace(':' + parameter.param, arguments[parameter.index]);\n            } else if (parameter.type === 'body') {\n              newArgs[parameter.index] = arguments[parameter.index];\n              body = arguments[parameter.index];\n            } else if (parameter.type === 'queryParams') {\n              newArgs[parameter.index] = arguments[parameter.index];\n              let qParams: HttpParams | {[key: string]: string | string[]} = arguments[parameter.index];\n              if (config.options && config.options.params) {\n                queryParams = parseParams(queryParams, config.options.params);\n              }\n              if (qParams) {\n                queryParams = parseParams(queryParams, qParams);\n              }\n            }\n          }\n        }\n        // tslint:disable-next-line\n        let url: string = this.baseUrl + replacedPath;\n        let options: ITdHttpRESTOptionsWithBody = Object.assign({}, config.options, {\n          body: body,\n          params: queryParams,\n        });\n        // tslint:disable-next-line\n        let request: any = this.buildRequest(config.method, url, options);\n        if (parameters) {\n          // see which one was the response parameter so we can set the request observable\n          for (let parameter of parameters) {\n            if (parameter.type === 'response') {\n              newArgs[parameter.index] = request;\n            }\n          }\n        }\n        // tslint:disable-next-line\n        let response: any = wrappedFunction.apply(this, newArgs);\n        // if the response is NOOP_HTTP or undefined, then we return the request as it is\n        // else we return the response from the inner function\n        if (response === NOOP_HTTP || response === undefined) {\n          return request;\n        } else {\n          return response;\n        }\n      } catch (error) {\n        // tslint:disable-next-line\n        console.error(error);\n      }\n    };\n  };\n}\n","import { ITdHttpRESTOptions } from '../../';\nimport { TdAbstractMethod } from './abstract-method.decorator';\n\n/**\n * Decorator that adds GET request capabilities to a method\n */\nexport function TdGET(config: {\n  path: string,\n  options?: ITdHttpRESTOptions,\n}): Function {\n  return TdAbstractMethod(<any>Object.assign({\n    method: 'GET',\n  }, config));\n}\n","import { ITdHttpRESTOptions } from '../../';\nimport { TdAbstractMethod } from './abstract-method.decorator';\n\n/**\n * Decorator that adds POST request capabilities to a method\n */\nexport function TdPOST(config: {\n  path: string,\n  options?: ITdHttpRESTOptions,\n}): Function {\n  return TdAbstractMethod(<any>Object.assign({\n    method: 'POST',\n  }, config));\n}\n","import { ITdHttpRESTOptions } from '../../';\nimport { TdAbstractMethod } from './abstract-method.decorator';\n\n/**\n * Decorator that adds PATCH request capabilities to a method\n */\nexport function TdPATCH(config: {\n  path: string,\n  options?: ITdHttpRESTOptions,\n}): Function {\n  return TdAbstractMethod(<any>Object.assign({\n    method: 'PATCH',\n  }, config));\n}\n","import { ITdHttpRESTOptions } from '../../';\nimport { TdAbstractMethod } from './abstract-method.decorator';\n\n/**\n * Decorator that adds PUT request capabilities to a method\n */\nexport function TdPUT(config: {\n  path: string,\n  options?: ITdHttpRESTOptions,\n}): Function {\n  return TdAbstractMethod(<any>Object.assign({\n    method: 'PUT',\n  }, config));\n}\n","import { ITdHttpRESTOptions } from '../../';\nimport { TdAbstractMethod } from './abstract-method.decorator';\n\n/**\n * Decorator that adds DELETE request capabilities to a method\n */\nexport function TdDELETE(config: {\n  path: string,\n  options?: ITdHttpRESTOptions,\n}): Function {\n  return TdAbstractMethod(<any>Object.assign({\n    method: 'DELETE',\n  }, config));\n}\n","import { HttpClient } from '@angular/common/http';\n\nimport { mixinHttp, ITdHttpRESTConfig } from '../http.mixin';\n\nimport { TdHttpService } from '../../interceptors/http.service';\n\n/**\n * Decorator used to give a service http capabilities using TdHttpService\n */\nexport function TdHttp(config: ITdHttpRESTConfig): Function {\n  return function <T extends { new(...args: any[]): {} }>(constructor: any): any {\n    return class extends mixinHttp(constructor, config, TdHttpService) {\n     \n    };\n  };\n}\n\n/**\n * Decorator used to give a service http capabilities using HttpClient\n */\nexport function TdHttpClient(config: ITdHttpRESTConfig): Function {\n  return function <T extends { new(...args: any[]): {} }>(constructor: any): any {\n    return class extends mixinHttp(constructor, config, HttpClient) {\n     \n    };\n  };\n}\n","import { TdAbstractParam } from './abstract-param.decorator';\n\n/**\n * Decorator that is used to define which parameter is an http parameter in a method\n */\nexport function TdParam(param: string): Function {\n  return TdAbstractParam('param', param);\n}\n","import { TdAbstractParam } from './abstract-param.decorator';\n\n/**\n * Decorator that is used to define which parameter is the http body in a method\n */\nexport function TdBody(): Function {\n  return TdAbstractParam('body');\n}\n","import { TdAbstractParam } from './abstract-param.decorator';\n\n/**\n * Decorator that is used to define which parameter is the http response in a method\n */\nexport function TdResponse(): Function {\n  return TdAbstractParam('response');\n}\n","import { TdAbstractParam } from './abstract-param.decorator';\n\n/**\n * Decorator that is used to define which parameter is the http query parameters in a method\n */\nexport function TdQueryParams(): Function {\n  return TdAbstractParam('queryParams');\n}\n"],"names":["tslib_1.__extends","Observable","HttpClient","Optional","SkipSelf","Self","Inject","inject","INJECTOR","ɵReflectionCapabilities","HttpHeaders","Injectable","Injector","InjectionToken","HttpHandler","NgModule","HttpClientModule","of","HttpParams","tslib_1.__values"],"mappings":"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"}
