{"version":3,"sources":["ng://@covalent/dynamic-forms/dynamic-elements/dynamic-input/dynamic-input.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-file-input/dynamic-file-input.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-textarea/dynamic-textarea.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-checkbox/dynamic-checkbox.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-slider/dynamic-slider.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-select/dynamic-select.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-datepicker/dynamic-datepicker.component.ts","ng://@covalent/dynamic-forms/services/dynamic-forms.service.ts","node_modules/tslib/tslib.es6.js","ng://@covalent/dynamic-forms/dynamic-element.component.ts","ng://@covalent/dynamic-forms/dynamic-forms.component.ts","ng://@covalent/dynamic-forms/dynamic-forms.module.ts"],"names":["TdDynamicInputComponent","this","label","hint","type","undefined","required","name","min","max","minLength","maxLength","errorMessageTemplate","Component","args","selector","template","TdDynamicFileInputComponent","prototype","_handlefileDrop","value","control","setValue","TdDynamicTextareaComponent","TdDynamicSlideToggleComponent","TdDynamicCheckboxComponent","TdDynamicSliderComponent","_changeDetectorRef","_handleBlur","_this","setTimeout","markForCheck","ChangeDetectorRef","TdDynamicSelectComponent","selections","multiple","TdDynamicDatepickerComponent","Text","Boolean","Number","Array","Date","Input","Datepicker","Password","Textarea","Slider","SlideToggle","Checkbox","Select","FileInput","DYNAMIC_ELEMENT_NAME_REGEX","TdDynamicFormsService","validateDynamicElementName","test","Error","getDynamicElement","element","TdDynamicType","TdDynamicElement","createFormControl","config","validator","createValidators","FormControl","default","disabled","Validators","compose","parseFloat","validators","forEach","validatorConfig","Injectable","DYNAMIC_FORMS_PROVIDER_FACTORY","parent","DYNAMIC_FORMS_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","TdDynamicElementBase","_TdDynamicElementMixinBase","mixinControlValueAccessor","TdDynamicFormsErrorTemplate","_super","templateRef","viewContainerRef","call","tslib_1.__extends","Directive","TemplateRef","ViewContainerRef","TemplatePortalDirective","TdDynamicElementDirective","viewContainer","TdDynamicElementComponent","_componentFactoryResolver","_dynamicFormsService","defineProperty","ngOnInit","component","Type","ref","resolveComponentFactory","childElement","injector","insert","hostView","_instance","instance","dynamicControl","ngOnChanges","changes","prop","currentValue","providers","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ComponentFactoryResolver","ViewChild","HostBinding","TdDynamicFormsComponent","_formBuilder","_renderedElements","_templateMap","Map","_destroy$","Subject","_destroyControl$","dynamicForm","group","elements","_elements","_rerenderElements","valid","errors","name_1","controls","ngAfterContentInit","_updateErrorTemplates","ngOnDestroy","next","complete","refresh","getErrorTemplateRef","get","i","_errorTemplates","toArray","length","set","tdDynamicFormsError","_clearRemovedElements","duplicates","elem","indexOf","push","dynamicElement","markAsPristine","markAsUntouched","disable","enable","setValidators","addControl","_subscribeToControlStatusChanges","assign","detectChanges","timer","toPromise","then","j","removeControl","elementName","controlDestroyed$","pipe","filter","destroyedElementName","statusChanges","takeUntil","subscribe","changeDetection","ChangeDetectionStrategy","OnPush","FormBuilder","ContentChildren","TD_DYNAMIC_FORMS","TD_DYNAMIC_FORMS_ENTRY_COMPONENTS","CovalentDynamicFormsModule","NgModule","declarations","imports","CommonModule","ReactiveFormsModule","MatInputModule","MatSelectModule","MatCheckboxModule","MatSliderModule","MatSlideToggleModule","MatIconModule","MatButtonModule","MatDatepickerModule","CovalentCommonModule","CovalentFileModule","exports","entryComponents"],"mappings":"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","sourcesContent":["import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-input',\n  styleUrls: [ './dynamic-input.component.scss' ],\n  templateUrl: './dynamic-input.component.html',\n})\nexport class TdDynamicInputComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  hint: string = '';\n\n  type: string = undefined;\n\n  required: boolean = undefined;\n\n  name: string = '';\n\n  min: number = undefined;\n\n  max: number = undefined;\n\n  minLength: number = undefined;\n\n  maxLength: number = undefined;\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n}\n","import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-file-input',\n  styleUrls: [ './dynamic-file-input.component.scss' ],\n  templateUrl: './dynamic-file-input.component.html',\n})\nexport class TdDynamicFileInputComponent {\n\n  control: FormControl;\n\n  required: boolean = undefined;\n\n  label: string = '';\n\n  name: string = '';\n\n  hint: string = '';\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n  _handlefileDrop(value: File): void {\n    this.control.setValue(value);\n  }\n\n}\n","import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-textarea',\n  styleUrls: [ './dynamic-textarea.component.scss' ],\n  templateUrl: './dynamic-textarea.component.html',\n})\nexport class TdDynamicTextareaComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  hint: string = '';\n\n  name: string = '';\n\n  required: boolean = undefined;\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n}\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-slide-toggle',\n  styleUrls: [ './dynamic-slide-toggle.component.scss' ],\n  templateUrl: './dynamic-slide-toggle.component.html',\n})\nexport class TdDynamicSlideToggleComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  name: string = '';\n\n  hint: string = '';\n\n  required: boolean = false;\n\n}\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-checkbox',\n  styleUrls: [ './dynamic-checkbox.component.scss' ],\n  templateUrl: './dynamic-checkbox.component.html',\n})\nexport class TdDynamicCheckboxComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  name: string = '';\n\n  hint: string = '';\n\n  required: boolean = false;\n\n}\n","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-slider',\n  styleUrls: [ './dynamic-slider.component.scss' ],\n  templateUrl: './dynamic-slider.component.html',\n})\nexport class TdDynamicSliderComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  required: boolean = undefined;\n\n  name: string = '';\n\n  hint: string = '';\n\n  min: number = undefined;\n\n  max: number = undefined;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  _handleBlur(): void {\n    setTimeout(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-select',\n  styleUrls: [ './dynamic-select.component.scss' ],\n  templateUrl: './dynamic-select.component.html',\n})\nexport class TdDynamicSelectComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  hint: string = '';\n\n  name: string = '';\n\n  required: boolean = undefined;\n\n  selections: any[] = undefined;\n\n  multiple: boolean = undefined;\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n}\n","import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-datepicker',\n  styleUrls: ['./dynamic-datepicker.component.scss'],\n  templateUrl: './dynamic-datepicker.component.html',\n})\nexport class TdDynamicDatepickerComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  hint: string = '';\n\n  name: string = '';\n\n  type: string = undefined;\n\n  required: boolean = undefined;\n\n  min: number = undefined;\n\n  max: number = undefined;\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n}\n","import { Injectable, Provider, SkipSelf, Optional, Type } from '@angular/core';\nimport { Validators, ValidatorFn, FormControl, AbstractControl } from '@angular/forms';\n\nimport { TdDynamicInputComponent } from '../dynamic-elements/dynamic-input/dynamic-input.component';\nimport { TdDynamicFileInputComponent } from '../dynamic-elements/dynamic-file-input/dynamic-file-input.component';\nimport { TdDynamicTextareaComponent } from '../dynamic-elements/dynamic-textarea/dynamic-textarea.component';\nimport { TdDynamicSlideToggleComponent } from '../dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component';\nimport { TdDynamicCheckboxComponent } from '../dynamic-elements/dynamic-checkbox/dynamic-checkbox.component';\nimport { TdDynamicSliderComponent } from '../dynamic-elements/dynamic-slider/dynamic-slider.component';\nimport { TdDynamicSelectComponent } from '../dynamic-elements/dynamic-select/dynamic-select.component';\nimport { TdDynamicDatepickerComponent } from '../dynamic-elements/dynamic-datepicker/dynamic-datepicker.component';\n\nexport enum TdDynamicType {\n  Text = 'text',\n  Boolean = 'boolean',\n  Number = 'number',\n  Array = 'array',\n  Date = 'date',\n}\n\nexport enum TdDynamicElement {\n  Input = 'input',\n  Datepicker = 'datepicker',\n  Password = 'password',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  SlideToggle = 'slide-toggle',\n  Checkbox = 'checkbox',\n  Select = 'select',\n  FileInput = 'file-input',\n}\n\nexport interface ITdDynamicElementValidator {\n  validator: ValidatorFn;\n}\n\nexport interface ITdDynamicElementConfig {\n  label?: string;\n  name: string;\n  hint?: string;\n  type: TdDynamicType | TdDynamicElement | Type<any>;\n  required?: boolean;\n  disabled?: boolean;\n  min?: any;\n  max?: any;\n  minLength?: any;\n  maxLength?: any;\n  selections?: string[] | { value: any, label: string }[];\n  multiple?: boolean;\n  default?: any;\n  flex?: number;\n  validators?: ITdDynamicElementValidator[];\n}\n\nexport const DYNAMIC_ELEMENT_NAME_REGEX: RegExp = /^[^0-9][^\\@]*$/;\n\n@Injectable()\nexport class TdDynamicFormsService {\n\n  /**\n   * Method to validate if the [name] is a proper element name.\n   * Throws error if name is not valid.\n   */\n  validateDynamicElementName(name: string): void {\n    if (!DYNAMIC_ELEMENT_NAME_REGEX.test(name)) {\n      throw new Error('Dynamic element name: \"${name}\" is not valid.');\n    }\n  }\n\n  /**\n   * Gets component to be rendered depending on [TdDynamicElement | TdDynamicType]\n   * Throws error if it does not exists or not supported.\n   */\n  getDynamicElement(element: TdDynamicElement | TdDynamicType): any {\n    switch (element) {\n      case TdDynamicType.Text:\n      case TdDynamicType.Number:\n      case TdDynamicElement.Input:\n      case TdDynamicElement.Password:\n        return TdDynamicInputComponent;\n      case TdDynamicElement.Textarea:\n        return TdDynamicTextareaComponent;\n      case TdDynamicType.Boolean:\n      case TdDynamicElement.SlideToggle:\n        return TdDynamicSlideToggleComponent;\n      case TdDynamicElement.Checkbox:\n        return TdDynamicCheckboxComponent;\n      case TdDynamicElement.Slider:\n        return TdDynamicSliderComponent;\n      case TdDynamicType.Array:\n      case TdDynamicElement.Select:\n        return TdDynamicSelectComponent;\n      case TdDynamicElement.FileInput:\n        return TdDynamicFileInputComponent;\n      case TdDynamicElement.Datepicker:\n      case TdDynamicType.Date:\n        return TdDynamicDatepickerComponent;\n      default:\n        throw new Error(`Error: type ${element} does not exist or not supported.`);\n    }\n  }\n\n  /**\n   * Creates form control for element depending [ITdDynamicElementConfig] properties.\n   */\n  createFormControl(config: ITdDynamicElementConfig): FormControl {\n    let validator: ValidatorFn = this.createValidators(config);\n    return new FormControl({ value: config.default, disabled: config.disabled }, validator);\n  }\n\n  /**\n   * Creates form validationdepending [ITdDynamicElementConfig] properties.\n   */\n  createValidators(config: ITdDynamicElementConfig): ValidatorFn {\n    let validator: ValidatorFn;\n    if (config.required) {\n      validator = Validators.required;\n    }\n    if (config.max || config.max === 0) {\n      validator = Validators.compose([validator, Validators.max(parseFloat(config.max))]);\n    }\n    if (config.min || config.min === 0) {\n      validator = Validators.compose([validator, Validators.min(parseFloat(config.min))]);\n    }\n    if (config.maxLength || config.maxLength === 0) {\n      validator = Validators.compose([validator, Validators.maxLength(parseFloat(config.maxLength))]);\n    }\n    if (config.minLength || config.minLength === 0) {\n      validator = Validators.compose([validator, Validators.minLength(parseFloat(config.minLength))]);\n    }\n    // Add provided custom validators to the validator function\n    if (config.validators) {\n      config.validators.forEach((validatorConfig: ITdDynamicElementValidator) => {\n        validator = Validators.compose([validator, validatorConfig.validator]);\n      });\n    }\n    return validator;\n  }\n}\n\nexport function DYNAMIC_FORMS_PROVIDER_FACTORY(\n  parent: TdDynamicFormsService): TdDynamicFormsService {\n  return parent || new TdDynamicFormsService();\n}\n\nexport const DYNAMIC_FORMS_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdDynamicFormsService,\n  deps: [[new Optional(), new SkipSelf(), TdDynamicFormsService]],\n  useFactory: DYNAMIC_FORMS_PROVIDER_FACTORY,\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, Directive, Input, HostBinding, OnInit, SimpleChanges, OnChanges, TemplateRef, ChangeDetectorRef, Type } from '@angular/core';\nimport { ViewChild, ViewContainerRef } from '@angular/core';\nimport { ComponentFactoryResolver, ComponentRef, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\nimport { mixinControlValueAccessor, IControlValueAccessor } from '@covalent/core/common';\n\nimport { TdDynamicElement, TdDynamicType, TdDynamicFormsService } from './services/dynamic-forms.service';\n\nexport class TdDynamicElementBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDynamicElementMixinBase = mixinControlValueAccessor(TdDynamicElementBase);\n\n@Directive({selector: '[tdDynamicFormsError]ng-template'})\nexport class TdDynamicFormsErrorTemplate extends TemplatePortalDirective {\n\n  @Input() tdDynamicFormsError: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[tdDynamicContainer]',\n})\nexport class TdDynamicElementDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  providers: [TdDynamicFormsService, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdDynamicElementComponent),\n    multi: true,\n  }],\n  selector: 'td-dynamic-element',\n  template: '<div tdDynamicContainer></div>',\n})\nexport class TdDynamicElementComponent extends _TdDynamicElementMixinBase\n                                       implements IControlValueAccessor, OnInit, OnChanges {\n\n  private _instance: any;\n\n  /**\n   * Sets form control of the element.\n   */\n  @Input() dynamicControl: FormControl;\n\n  /**\n   * Sets label to be displayed.\n   */\n  @Input() label: string = '';\n\n  /**\n   * Sets hint to be displayed.\n   */\n  @Input() hint: string = '';\n\n  /**\n   * Sets name to be displayed as attribute.\n   */\n  @Input() name: string = '';\n\n  /**\n   * Sets type or element of element to be rendered.\n   * Throws error if does not exist or no supported.\n   */\n  @Input() type: TdDynamicElement | TdDynamicType = undefined;\n\n  /**\n   * Sets required validation checkup (if supported by element).\n   */\n  @Input() required: boolean = undefined;\n\n  /**\n   * Sets min validation checkup (if supported by element).\n   */\n  @Input() min: number = undefined;\n\n  /**\n   * Sets max validation checkup (if supported by element).\n   */\n  @Input() max: number = undefined;\n\n  /**\n   * Sets minLength validation checkup (if supported by element).\n   */\n  @Input() minLength: number = undefined;\n\n  /**\n   * Sets maxLength validation checkup (if supported by element).\n   */\n  @Input() maxLength: number = undefined;\n\n  /**\n   * Sets selections for array elements (if supported by element).\n   */\n  @Input() selections: any[] = undefined;\n\n  /**\n   * Sets multiple property for array elements (if supported by element).\n   */\n  @Input() multiple: boolean = undefined;\n\n  /**\n   * Sets error message template so it can be injected into dynamic components.\n   */\n  @Input() errorMessageTemplate: TemplateRef<any> = undefined;\n\n  @ViewChild(TdDynamicElementDirective) childElement: TdDynamicElementDirective;\n\n  @HostBinding('attr.max')\n  get maxAttr(): any {\n    return this.max;\n  }\n\n  @HostBinding('attr.min')\n  get minAttr(): any {\n    return this.min;\n  }\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _dynamicFormsService: TdDynamicFormsService,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    let component: any = <any>this.type instanceof Type ? this.type : this._dynamicFormsService.getDynamicElement(this.type);\n    let ref: ComponentRef<any> = this._componentFactoryResolver.\n      resolveComponentFactory(component)\n      .create(this.childElement.viewContainer.injector);\n    this.childElement.viewContainer.insert(ref.hostView);\n    this._instance = ref.instance;\n    this._instance.control = this.dynamicControl;\n    this._instance.label = this.label;\n    this._instance.hint = this.hint;\n    this._instance.name = this.name;\n    this._instance.type = this.type;\n    this._instance.value = this.value;\n    this._instance.required = this.required;\n    this._instance.min = this.min;\n    this._instance.max = this.max;\n    this._instance.minLength = this.minLength;\n    this._instance.maxLength = this.maxLength;\n    this._instance.selections = this.selections;\n    this._instance.multiple = this.multiple;\n    this._instance.errorMessageTemplate = this.errorMessageTemplate;\n  }\n\n  /**\n   * Reassign any inputs that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._instance) {\n      for (let prop in changes) {\n        this._instance[prop] = changes[prop].currentValue;\n      }\n    }\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, ContentChildren,\n         TemplateRef, QueryList, AfterContentInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\n\nimport { TdDynamicFormsService, ITdDynamicElementConfig } from './services/dynamic-forms.service';\nimport { TdDynamicFormsErrorTemplate } from './dynamic-element.component';\n\nimport { timer, Subject, Observable } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'td-dynamic-forms',\n  templateUrl: './dynamic-forms.component.html',\n  styleUrls: ['./dynamic-forms.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDynamicFormsComponent implements AfterContentInit, OnDestroy {\n\n  private _renderedElements: ITdDynamicElementConfig[] = [];\n  private _elements: ITdDynamicElementConfig[];\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  private _destroy$: Subject<any> = new Subject();\n  private _destroyControl$: Subject<string> = new Subject();\n\n  @ContentChildren(TdDynamicFormsErrorTemplate) _errorTemplates: QueryList<TdDynamicFormsErrorTemplate>;\n  dynamicForm: FormGroup;\n\n  /**\n   * elements: ITdDynamicElementConfig[]\n   * JS Object that will render the elements depending on its config.\n   * [name] property is required.\n   */\n  @Input('elements')\n  set elements(elements: ITdDynamicElementConfig[]) {\n    if (elements) {\n      this._elements = elements;\n    } else {\n      this._elements = [];\n    }\n    this._rerenderElements();\n  }\n  get elements(): ITdDynamicElementConfig[] {\n    return this._renderedElements;\n  }\n\n  /**\n   * Getter property for dynamic [FormGroup].\n   */\n  get form(): FormGroup {\n    return this.dynamicForm;\n  }\n\n  /**\n   * Getter property for [valid] of dynamic [FormGroup].\n   */\n  get valid(): boolean {\n    if (this.dynamicForm) {\n      return this.dynamicForm.valid;\n    }\n    return false;\n  }\n\n  /**\n   * Getter property for [value] of dynamic [FormGroup].\n   */\n  get value(): any {\n    if (this.dynamicForm) {\n      return this.dynamicForm.value;\n    }\n    return {};\n  }\n\n  /**\n   * Getter property for [errors] of dynamic [FormGroup].\n   */\n  get errors(): { [name: string]: any } {\n    if (this.dynamicForm) {\n      let errors: {[name: string]: any} = {};\n      for (let name in this.dynamicForm.controls) {\n        errors[name] = this.dynamicForm.controls[name].errors;\n      }\n      return errors;\n    }\n    return {};\n  }\n\n  /**\n   * Getter property for [controls] of dynamic [FormGroup].\n   */\n  get controls(): {[key: string]: AbstractControl} {\n    if (this.dynamicForm) {\n      return this.dynamicForm.controls;\n    }\n    return {};\n  }\n\n  constructor(private _formBuilder: FormBuilder,\n              private _dynamicFormsService: TdDynamicFormsService,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    this.dynamicForm = this._formBuilder.group({});\n  }\n\n  ngAfterContentInit(): void {\n    this._updateErrorTemplates();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n    this._destroyControl$.complete();\n  }\n\n  /**\n   * Refreshes the form and rerenders all validator/element modifications.\n   */\n  refresh(): void {\n    this._rerenderElements();\n    this._updateErrorTemplates();\n  }\n\n  /**\n   * Getter method for error template references\n   */\n  getErrorTemplateRef(name: string): TemplateRef<any> {\n    return this._templateMap.get(name);\n  }\n\n  /**\n   * Loads error templates and sets them in a map for faster access.\n   */\n  private _updateErrorTemplates(): void {\n    this._templateMap = new Map<string, TemplateRef<any>>();\n    for (let i: number = 0; i < this._errorTemplates.toArray().length; i++) {\n      this._templateMap.set(\n        this._errorTemplates.toArray()[i].tdDynamicFormsError,\n        this._errorTemplates.toArray()[i].templateRef,\n      );\n    }\n  }\n\n  private _rerenderElements(): void {\n    this._clearRemovedElements();\n    this._renderedElements = [];\n    let duplicates: string[] = [];\n    this._elements.forEach((elem: ITdDynamicElementConfig) => {\n      this._dynamicFormsService.validateDynamicElementName(elem.name);\n      if (duplicates.indexOf(elem.name) > -1) {\n        throw new Error(`Dynamic element name: \"${elem.name}\" is duplicated`);\n      }\n      duplicates.push(elem.name);\n      let dynamicElement: AbstractControl = this.dynamicForm.get(elem.name);\n      if (!dynamicElement) {\n        this.dynamicForm.addControl(elem.name, this._dynamicFormsService.createFormControl(elem));\n        this._subscribeToControlStatusChanges(elem.name);\n      } else {\n        dynamicElement.setValue(elem.default);\n        dynamicElement.markAsPristine();\n        dynamicElement.markAsUntouched();\n        if (elem.disabled) {\n          dynamicElement.disable();\n        } else {\n          dynamicElement.enable();\n        }\n        dynamicElement.setValidators(this._dynamicFormsService.createValidators(elem));\n      }\n      // copy objects so they are only changes when calling this method\n      this._renderedElements.push(Object.assign({}, elem));\n    });\n    // call a change detection since the whole form might change\n    this._changeDetectorRef.detectChanges();\n    timer().toPromise().then(() => {\n      // call a markForCheck so elements are rendered correctly in OnPush\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  private _clearRemovedElements(): void {\n    for (let i: number = 0; i < this._renderedElements.length; i++) {\n      for (let j: number = 0; j < this._elements.length; j++) {\n        // check if the name of the element is still there removed\n        if (this._renderedElements[i].name === this._elements[j].name) {\n          delete this._renderedElements[i];\n          break;\n        }\n      }\n    }\n    // remove elements that were removed from the array\n    this._renderedElements.forEach((elem: ITdDynamicElementConfig) => {\n      this._destroyControl$.next(elem.name);\n      this.dynamicForm.removeControl(elem.name);\n    });\n  }\n\n  // Updates component when manually adding errors to controls\n  private _subscribeToControlStatusChanges(elementName: string): void {\n    const control: AbstractControl = this.controls[elementName];\n\n    const controlDestroyed$: Observable<any> = this._destroyControl$\n      .pipe(\n        filter((destroyedElementName: string) => destroyedElementName === elementName),\n      );\n\n    control.statusChanges\n      .pipe(\n        takeUntil(this._destroy$),\n        takeUntil(controlDestroyed$),\n      ).subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\nimport { CovalentFileModule } from '@covalent/core/file';\n\nimport { TdDynamicFormsComponent } from './dynamic-forms.component';\nimport { TdDynamicElementComponent, TdDynamicElementDirective, TdDynamicFormsErrorTemplate } from './dynamic-element.component';\nimport {  DYNAMIC_FORMS_PROVIDER } from './services/dynamic-forms.service';\n\nimport { TdDynamicInputComponent } from './dynamic-elements/dynamic-input/dynamic-input.component';\nimport { TdDynamicFileInputComponent } from './dynamic-elements/dynamic-file-input/dynamic-file-input.component';\nimport { TdDynamicTextareaComponent } from './dynamic-elements/dynamic-textarea/dynamic-textarea.component';\nimport {\n  TdDynamicSlideToggleComponent,\n} from './dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component';\nimport {\n  TdDynamicCheckboxComponent,\n} from './dynamic-elements/dynamic-checkbox/dynamic-checkbox.component';\nimport { TdDynamicSliderComponent } from './dynamic-elements/dynamic-slider/dynamic-slider.component';\nimport { TdDynamicSelectComponent } from './dynamic-elements/dynamic-select/dynamic-select.component';\nimport { TdDynamicDatepickerComponent } from './dynamic-elements/dynamic-datepicker/dynamic-datepicker.component';\n\nconst TD_DYNAMIC_FORMS: Type<any>[] = [\n  TdDynamicFormsComponent,\n  TdDynamicElementComponent,\n  TdDynamicElementDirective,\n  TdDynamicFormsErrorTemplate,\n];\n\nconst TD_DYNAMIC_FORMS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdDynamicInputComponent,\n  TdDynamicFileInputComponent,\n  TdDynamicTextareaComponent,\n  TdDynamicSlideToggleComponent,\n  TdDynamicCheckboxComponent,\n  TdDynamicSliderComponent,\n  TdDynamicSelectComponent,\n  TdDynamicDatepickerComponent,\n];\n\n@NgModule({\n  declarations: [\n    TD_DYNAMIC_FORMS,\n    TD_DYNAMIC_FORMS_ENTRY_COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    CovalentCommonModule,\n    CovalentFileModule,\n  ],\n  exports: [\n    TD_DYNAMIC_FORMS,\n    TD_DYNAMIC_FORMS_ENTRY_COMPONENTS,\n  ],\n  providers: [\n    DYNAMIC_FORMS_PROVIDER,\n  ],\n  entryComponents: [ TD_DYNAMIC_FORMS_ENTRY_COMPONENTS ],\n})\nexport class CovalentDynamicFormsModule {\n\n}\n"]}