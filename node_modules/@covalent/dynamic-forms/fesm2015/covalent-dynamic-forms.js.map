{"version":3,"file":"covalent-dynamic-forms.js.map","sources":["ng://@covalent/dynamic-forms/dynamic-elements/dynamic-input/dynamic-input.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-file-input/dynamic-file-input.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-textarea/dynamic-textarea.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-checkbox/dynamic-checkbox.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-slider/dynamic-slider.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-select/dynamic-select.component.ts","ng://@covalent/dynamic-forms/dynamic-elements/dynamic-datepicker/dynamic-datepicker.component.ts","ng://@covalent/dynamic-forms/services/dynamic-forms.service.ts","ng://@covalent/dynamic-forms/dynamic-element.component.ts","ng://@covalent/dynamic-forms/dynamic-forms.component.ts","ng://@covalent/dynamic-forms/dynamic-forms.module.ts"],"sourcesContent":["import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-input',\n  styleUrls: [ './dynamic-input.component.scss' ],\n  templateUrl: './dynamic-input.component.html',\n})\nexport class TdDynamicInputComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  hint: string = '';\n\n  type: string = undefined;\n\n  required: boolean = undefined;\n\n  name: string = '';\n\n  min: number = undefined;\n\n  max: number = undefined;\n\n  minLength: number = undefined;\n\n  maxLength: number = undefined;\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n}\n","import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-file-input',\n  styleUrls: [ './dynamic-file-input.component.scss' ],\n  templateUrl: './dynamic-file-input.component.html',\n})\nexport class TdDynamicFileInputComponent {\n\n  control: FormControl;\n\n  required: boolean = undefined;\n\n  label: string = '';\n\n  name: string = '';\n\n  hint: string = '';\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n  _handlefileDrop(value: File): void {\n    this.control.setValue(value);\n  }\n\n}\n","import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-textarea',\n  styleUrls: [ './dynamic-textarea.component.scss' ],\n  templateUrl: './dynamic-textarea.component.html',\n})\nexport class TdDynamicTextareaComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  hint: string = '';\n\n  name: string = '';\n\n  required: boolean = undefined;\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n}\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-slide-toggle',\n  styleUrls: [ './dynamic-slide-toggle.component.scss' ],\n  templateUrl: './dynamic-slide-toggle.component.html',\n})\nexport class TdDynamicSlideToggleComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  name: string = '';\n\n  hint: string = '';\n\n  required: boolean = false;\n\n}\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-checkbox',\n  styleUrls: [ './dynamic-checkbox.component.scss' ],\n  templateUrl: './dynamic-checkbox.component.html',\n})\nexport class TdDynamicCheckboxComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  name: string = '';\n\n  hint: string = '';\n\n  required: boolean = false;\n\n}\n","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-slider',\n  styleUrls: [ './dynamic-slider.component.scss' ],\n  templateUrl: './dynamic-slider.component.html',\n})\nexport class TdDynamicSliderComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  required: boolean = undefined;\n\n  name: string = '';\n\n  hint: string = '';\n\n  min: number = undefined;\n\n  max: number = undefined;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  _handleBlur(): void {\n    setTimeout(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-select',\n  styleUrls: [ './dynamic-select.component.scss' ],\n  templateUrl: './dynamic-select.component.html',\n})\nexport class TdDynamicSelectComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  hint: string = '';\n\n  name: string = '';\n\n  required: boolean = undefined;\n\n  selections: any[] = undefined;\n\n  multiple: boolean = undefined;\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n}\n","import { Component, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'td-dynamic-datepicker',\n  styleUrls: ['./dynamic-datepicker.component.scss'],\n  templateUrl: './dynamic-datepicker.component.html',\n})\nexport class TdDynamicDatepickerComponent {\n\n  control: FormControl;\n\n  label: string = '';\n\n  hint: string = '';\n\n  name: string = '';\n\n  type: string = undefined;\n\n  required: boolean = undefined;\n\n  min: number = undefined;\n\n  max: number = undefined;\n\n  errorMessageTemplate: TemplateRef<any> = undefined;\n\n}\n","import { Injectable, Provider, SkipSelf, Optional, Type } from '@angular/core';\nimport { Validators, ValidatorFn, FormControl, AbstractControl } from '@angular/forms';\n\nimport { TdDynamicInputComponent } from '../dynamic-elements/dynamic-input/dynamic-input.component';\nimport { TdDynamicFileInputComponent } from '../dynamic-elements/dynamic-file-input/dynamic-file-input.component';\nimport { TdDynamicTextareaComponent } from '../dynamic-elements/dynamic-textarea/dynamic-textarea.component';\nimport { TdDynamicSlideToggleComponent } from '../dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component';\nimport { TdDynamicCheckboxComponent } from '../dynamic-elements/dynamic-checkbox/dynamic-checkbox.component';\nimport { TdDynamicSliderComponent } from '../dynamic-elements/dynamic-slider/dynamic-slider.component';\nimport { TdDynamicSelectComponent } from '../dynamic-elements/dynamic-select/dynamic-select.component';\nimport { TdDynamicDatepickerComponent } from '../dynamic-elements/dynamic-datepicker/dynamic-datepicker.component';\n\nexport enum TdDynamicType {\n  Text = 'text',\n  Boolean = 'boolean',\n  Number = 'number',\n  Array = 'array',\n  Date = 'date',\n}\n\nexport enum TdDynamicElement {\n  Input = 'input',\n  Datepicker = 'datepicker',\n  Password = 'password',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  SlideToggle = 'slide-toggle',\n  Checkbox = 'checkbox',\n  Select = 'select',\n  FileInput = 'file-input',\n}\n\nexport interface ITdDynamicElementValidator {\n  validator: ValidatorFn;\n}\n\nexport interface ITdDynamicElementConfig {\n  label?: string;\n  name: string;\n  hint?: string;\n  type: TdDynamicType | TdDynamicElement | Type<any>;\n  required?: boolean;\n  disabled?: boolean;\n  min?: any;\n  max?: any;\n  minLength?: any;\n  maxLength?: any;\n  selections?: string[] | { value: any, label: string }[];\n  multiple?: boolean;\n  default?: any;\n  flex?: number;\n  validators?: ITdDynamicElementValidator[];\n}\n\nexport const DYNAMIC_ELEMENT_NAME_REGEX: RegExp = /^[^0-9][^\\@]*$/;\n\n@Injectable()\nexport class TdDynamicFormsService {\n\n  /**\n   * Method to validate if the [name] is a proper element name.\n   * Throws error if name is not valid.\n   */\n  validateDynamicElementName(name: string): void {\n    if (!DYNAMIC_ELEMENT_NAME_REGEX.test(name)) {\n      throw new Error('Dynamic element name: \"${name}\" is not valid.');\n    }\n  }\n\n  /**\n   * Gets component to be rendered depending on [TdDynamicElement | TdDynamicType]\n   * Throws error if it does not exists or not supported.\n   */\n  getDynamicElement(element: TdDynamicElement | TdDynamicType): any {\n    switch (element) {\n      case TdDynamicType.Text:\n      case TdDynamicType.Number:\n      case TdDynamicElement.Input:\n      case TdDynamicElement.Password:\n        return TdDynamicInputComponent;\n      case TdDynamicElement.Textarea:\n        return TdDynamicTextareaComponent;\n      case TdDynamicType.Boolean:\n      case TdDynamicElement.SlideToggle:\n        return TdDynamicSlideToggleComponent;\n      case TdDynamicElement.Checkbox:\n        return TdDynamicCheckboxComponent;\n      case TdDynamicElement.Slider:\n        return TdDynamicSliderComponent;\n      case TdDynamicType.Array:\n      case TdDynamicElement.Select:\n        return TdDynamicSelectComponent;\n      case TdDynamicElement.FileInput:\n        return TdDynamicFileInputComponent;\n      case TdDynamicElement.Datepicker:\n      case TdDynamicType.Date:\n        return TdDynamicDatepickerComponent;\n      default:\n        throw new Error(`Error: type ${element} does not exist or not supported.`);\n    }\n  }\n\n  /**\n   * Creates form control for element depending [ITdDynamicElementConfig] properties.\n   */\n  createFormControl(config: ITdDynamicElementConfig): FormControl {\n    let validator: ValidatorFn = this.createValidators(config);\n    return new FormControl({ value: config.default, disabled: config.disabled }, validator);\n  }\n\n  /**\n   * Creates form validationdepending [ITdDynamicElementConfig] properties.\n   */\n  createValidators(config: ITdDynamicElementConfig): ValidatorFn {\n    let validator: ValidatorFn;\n    if (config.required) {\n      validator = Validators.required;\n    }\n    if (config.max || config.max === 0) {\n      validator = Validators.compose([validator, Validators.max(parseFloat(config.max))]);\n    }\n    if (config.min || config.min === 0) {\n      validator = Validators.compose([validator, Validators.min(parseFloat(config.min))]);\n    }\n    if (config.maxLength || config.maxLength === 0) {\n      validator = Validators.compose([validator, Validators.maxLength(parseFloat(config.maxLength))]);\n    }\n    if (config.minLength || config.minLength === 0) {\n      validator = Validators.compose([validator, Validators.minLength(parseFloat(config.minLength))]);\n    }\n    // Add provided custom validators to the validator function\n    if (config.validators) {\n      config.validators.forEach((validatorConfig: ITdDynamicElementValidator) => {\n        validator = Validators.compose([validator, validatorConfig.validator]);\n      });\n    }\n    return validator;\n  }\n}\n\nexport function DYNAMIC_FORMS_PROVIDER_FACTORY(\n  parent: TdDynamicFormsService): TdDynamicFormsService {\n  return parent || new TdDynamicFormsService();\n}\n\nexport const DYNAMIC_FORMS_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdDynamicFormsService,\n  deps: [[new Optional(), new SkipSelf(), TdDynamicFormsService]],\n  useFactory: DYNAMIC_FORMS_PROVIDER_FACTORY,\n};\n","import { Component, Directive, Input, HostBinding, OnInit, SimpleChanges, OnChanges, TemplateRef, ChangeDetectorRef, Type } from '@angular/core';\nimport { ViewChild, ViewContainerRef } from '@angular/core';\nimport { ComponentFactoryResolver, ComponentRef, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\nimport { mixinControlValueAccessor, IControlValueAccessor } from '@covalent/core/common';\n\nimport { TdDynamicElement, TdDynamicType, TdDynamicFormsService } from './services/dynamic-forms.service';\n\nexport class TdDynamicElementBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDynamicElementMixinBase = mixinControlValueAccessor(TdDynamicElementBase);\n\n@Directive({selector: '[tdDynamicFormsError]ng-template'})\nexport class TdDynamicFormsErrorTemplate extends TemplatePortalDirective {\n\n  @Input() tdDynamicFormsError: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[tdDynamicContainer]',\n})\nexport class TdDynamicElementDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  providers: [TdDynamicFormsService, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdDynamicElementComponent),\n    multi: true,\n  }],\n  selector: 'td-dynamic-element',\n  template: '<div tdDynamicContainer></div>',\n})\nexport class TdDynamicElementComponent extends _TdDynamicElementMixinBase\n                                       implements IControlValueAccessor, OnInit, OnChanges {\n\n  private _instance: any;\n\n  /**\n   * Sets form control of the element.\n   */\n  @Input() dynamicControl: FormControl;\n\n  /**\n   * Sets label to be displayed.\n   */\n  @Input() label: string = '';\n\n  /**\n   * Sets hint to be displayed.\n   */\n  @Input() hint: string = '';\n\n  /**\n   * Sets name to be displayed as attribute.\n   */\n  @Input() name: string = '';\n\n  /**\n   * Sets type or element of element to be rendered.\n   * Throws error if does not exist or no supported.\n   */\n  @Input() type: TdDynamicElement | TdDynamicType = undefined;\n\n  /**\n   * Sets required validation checkup (if supported by element).\n   */\n  @Input() required: boolean = undefined;\n\n  /**\n   * Sets min validation checkup (if supported by element).\n   */\n  @Input() min: number = undefined;\n\n  /**\n   * Sets max validation checkup (if supported by element).\n   */\n  @Input() max: number = undefined;\n\n  /**\n   * Sets minLength validation checkup (if supported by element).\n   */\n  @Input() minLength: number = undefined;\n\n  /**\n   * Sets maxLength validation checkup (if supported by element).\n   */\n  @Input() maxLength: number = undefined;\n\n  /**\n   * Sets selections for array elements (if supported by element).\n   */\n  @Input() selections: any[] = undefined;\n\n  /**\n   * Sets multiple property for array elements (if supported by element).\n   */\n  @Input() multiple: boolean = undefined;\n\n  /**\n   * Sets error message template so it can be injected into dynamic components.\n   */\n  @Input() errorMessageTemplate: TemplateRef<any> = undefined;\n\n  @ViewChild(TdDynamicElementDirective) childElement: TdDynamicElementDirective;\n\n  @HostBinding('attr.max')\n  get maxAttr(): any {\n    return this.max;\n  }\n\n  @HostBinding('attr.min')\n  get minAttr(): any {\n    return this.min;\n  }\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _dynamicFormsService: TdDynamicFormsService,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    let component: any = <any>this.type instanceof Type ? this.type : this._dynamicFormsService.getDynamicElement(this.type);\n    let ref: ComponentRef<any> = this._componentFactoryResolver.\n      resolveComponentFactory(component)\n      .create(this.childElement.viewContainer.injector);\n    this.childElement.viewContainer.insert(ref.hostView);\n    this._instance = ref.instance;\n    this._instance.control = this.dynamicControl;\n    this._instance.label = this.label;\n    this._instance.hint = this.hint;\n    this._instance.name = this.name;\n    this._instance.type = this.type;\n    this._instance.value = this.value;\n    this._instance.required = this.required;\n    this._instance.min = this.min;\n    this._instance.max = this.max;\n    this._instance.minLength = this.minLength;\n    this._instance.maxLength = this.maxLength;\n    this._instance.selections = this.selections;\n    this._instance.multiple = this.multiple;\n    this._instance.errorMessageTemplate = this.errorMessageTemplate;\n  }\n\n  /**\n   * Reassign any inputs that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._instance) {\n      for (let prop in changes) {\n        this._instance[prop] = changes[prop].currentValue;\n      }\n    }\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, ContentChildren,\n         TemplateRef, QueryList, AfterContentInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\n\nimport { TdDynamicFormsService, ITdDynamicElementConfig } from './services/dynamic-forms.service';\nimport { TdDynamicFormsErrorTemplate } from './dynamic-element.component';\n\nimport { timer, Subject, Observable } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'td-dynamic-forms',\n  templateUrl: './dynamic-forms.component.html',\n  styleUrls: ['./dynamic-forms.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDynamicFormsComponent implements AfterContentInit, OnDestroy {\n\n  private _renderedElements: ITdDynamicElementConfig[] = [];\n  private _elements: ITdDynamicElementConfig[];\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  private _destroy$: Subject<any> = new Subject();\n  private _destroyControl$: Subject<string> = new Subject();\n\n  @ContentChildren(TdDynamicFormsErrorTemplate) _errorTemplates: QueryList<TdDynamicFormsErrorTemplate>;\n  dynamicForm: FormGroup;\n\n  /**\n   * elements: ITdDynamicElementConfig[]\n   * JS Object that will render the elements depending on its config.\n   * [name] property is required.\n   */\n  @Input('elements')\n  set elements(elements: ITdDynamicElementConfig[]) {\n    if (elements) {\n      this._elements = elements;\n    } else {\n      this._elements = [];\n    }\n    this._rerenderElements();\n  }\n  get elements(): ITdDynamicElementConfig[] {\n    return this._renderedElements;\n  }\n\n  /**\n   * Getter property for dynamic [FormGroup].\n   */\n  get form(): FormGroup {\n    return this.dynamicForm;\n  }\n\n  /**\n   * Getter property for [valid] of dynamic [FormGroup].\n   */\n  get valid(): boolean {\n    if (this.dynamicForm) {\n      return this.dynamicForm.valid;\n    }\n    return false;\n  }\n\n  /**\n   * Getter property for [value] of dynamic [FormGroup].\n   */\n  get value(): any {\n    if (this.dynamicForm) {\n      return this.dynamicForm.value;\n    }\n    return {};\n  }\n\n  /**\n   * Getter property for [errors] of dynamic [FormGroup].\n   */\n  get errors(): { [name: string]: any } {\n    if (this.dynamicForm) {\n      let errors: {[name: string]: any} = {};\n      for (let name in this.dynamicForm.controls) {\n        errors[name] = this.dynamicForm.controls[name].errors;\n      }\n      return errors;\n    }\n    return {};\n  }\n\n  /**\n   * Getter property for [controls] of dynamic [FormGroup].\n   */\n  get controls(): {[key: string]: AbstractControl} {\n    if (this.dynamicForm) {\n      return this.dynamicForm.controls;\n    }\n    return {};\n  }\n\n  constructor(private _formBuilder: FormBuilder,\n              private _dynamicFormsService: TdDynamicFormsService,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    this.dynamicForm = this._formBuilder.group({});\n  }\n\n  ngAfterContentInit(): void {\n    this._updateErrorTemplates();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n    this._destroyControl$.complete();\n  }\n\n  /**\n   * Refreshes the form and rerenders all validator/element modifications.\n   */\n  refresh(): void {\n    this._rerenderElements();\n    this._updateErrorTemplates();\n  }\n\n  /**\n   * Getter method for error template references\n   */\n  getErrorTemplateRef(name: string): TemplateRef<any> {\n    return this._templateMap.get(name);\n  }\n\n  /**\n   * Loads error templates and sets them in a map for faster access.\n   */\n  private _updateErrorTemplates(): void {\n    this._templateMap = new Map<string, TemplateRef<any>>();\n    for (let i: number = 0; i < this._errorTemplates.toArray().length; i++) {\n      this._templateMap.set(\n        this._errorTemplates.toArray()[i].tdDynamicFormsError,\n        this._errorTemplates.toArray()[i].templateRef,\n      );\n    }\n  }\n\n  private _rerenderElements(): void {\n    this._clearRemovedElements();\n    this._renderedElements = [];\n    let duplicates: string[] = [];\n    this._elements.forEach((elem: ITdDynamicElementConfig) => {\n      this._dynamicFormsService.validateDynamicElementName(elem.name);\n      if (duplicates.indexOf(elem.name) > -1) {\n        throw new Error(`Dynamic element name: \"${elem.name}\" is duplicated`);\n      }\n      duplicates.push(elem.name);\n      let dynamicElement: AbstractControl = this.dynamicForm.get(elem.name);\n      if (!dynamicElement) {\n        this.dynamicForm.addControl(elem.name, this._dynamicFormsService.createFormControl(elem));\n        this._subscribeToControlStatusChanges(elem.name);\n      } else {\n        dynamicElement.setValue(elem.default);\n        dynamicElement.markAsPristine();\n        dynamicElement.markAsUntouched();\n        if (elem.disabled) {\n          dynamicElement.disable();\n        } else {\n          dynamicElement.enable();\n        }\n        dynamicElement.setValidators(this._dynamicFormsService.createValidators(elem));\n      }\n      // copy objects so they are only changes when calling this method\n      this._renderedElements.push(Object.assign({}, elem));\n    });\n    // call a change detection since the whole form might change\n    this._changeDetectorRef.detectChanges();\n    timer().toPromise().then(() => {\n      // call a markForCheck so elements are rendered correctly in OnPush\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  private _clearRemovedElements(): void {\n    for (let i: number = 0; i < this._renderedElements.length; i++) {\n      for (let j: number = 0; j < this._elements.length; j++) {\n        // check if the name of the element is still there removed\n        if (this._renderedElements[i].name === this._elements[j].name) {\n          delete this._renderedElements[i];\n          break;\n        }\n      }\n    }\n    // remove elements that were removed from the array\n    this._renderedElements.forEach((elem: ITdDynamicElementConfig) => {\n      this._destroyControl$.next(elem.name);\n      this.dynamicForm.removeControl(elem.name);\n    });\n  }\n\n  // Updates component when manually adding errors to controls\n  private _subscribeToControlStatusChanges(elementName: string): void {\n    const control: AbstractControl = this.controls[elementName];\n\n    const controlDestroyed$: Observable<any> = this._destroyControl$\n      .pipe(\n        filter((destroyedElementName: string) => destroyedElementName === elementName),\n      );\n\n    control.statusChanges\n      .pipe(\n        takeUntil(this._destroy$),\n        takeUntil(controlDestroyed$),\n      ).subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\nimport { CovalentFileModule } from '@covalent/core/file';\n\nimport { TdDynamicFormsComponent } from './dynamic-forms.component';\nimport { TdDynamicElementComponent, TdDynamicElementDirective, TdDynamicFormsErrorTemplate } from './dynamic-element.component';\nimport {  DYNAMIC_FORMS_PROVIDER } from './services/dynamic-forms.service';\n\nimport { TdDynamicInputComponent } from './dynamic-elements/dynamic-input/dynamic-input.component';\nimport { TdDynamicFileInputComponent } from './dynamic-elements/dynamic-file-input/dynamic-file-input.component';\nimport { TdDynamicTextareaComponent } from './dynamic-elements/dynamic-textarea/dynamic-textarea.component';\nimport {\n  TdDynamicSlideToggleComponent,\n} from './dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component';\nimport {\n  TdDynamicCheckboxComponent,\n} from './dynamic-elements/dynamic-checkbox/dynamic-checkbox.component';\nimport { TdDynamicSliderComponent } from './dynamic-elements/dynamic-slider/dynamic-slider.component';\nimport { TdDynamicSelectComponent } from './dynamic-elements/dynamic-select/dynamic-select.component';\nimport { TdDynamicDatepickerComponent } from './dynamic-elements/dynamic-datepicker/dynamic-datepicker.component';\n\nconst TD_DYNAMIC_FORMS: Type<any>[] = [\n  TdDynamicFormsComponent,\n  TdDynamicElementComponent,\n  TdDynamicElementDirective,\n  TdDynamicFormsErrorTemplate,\n];\n\nconst TD_DYNAMIC_FORMS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdDynamicInputComponent,\n  TdDynamicFileInputComponent,\n  TdDynamicTextareaComponent,\n  TdDynamicSlideToggleComponent,\n  TdDynamicCheckboxComponent,\n  TdDynamicSliderComponent,\n  TdDynamicSelectComponent,\n  TdDynamicDatepickerComponent,\n];\n\n@NgModule({\n  declarations: [\n    TD_DYNAMIC_FORMS,\n    TD_DYNAMIC_FORMS_ENTRY_COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    CovalentCommonModule,\n    CovalentFileModule,\n  ],\n  exports: [\n    TD_DYNAMIC_FORMS,\n    TD_DYNAMIC_FORMS_ENTRY_COMPONENTS,\n  ],\n  providers: [\n    DYNAMIC_FORMS_PROVIDER,\n  ],\n  entryComponents: [ TD_DYNAMIC_FORMS_ENTRY_COMPONENTS ],\n})\nexport class CovalentDynamicFormsModule {\n\n}\n"],"names":[],"mappings":"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"}
