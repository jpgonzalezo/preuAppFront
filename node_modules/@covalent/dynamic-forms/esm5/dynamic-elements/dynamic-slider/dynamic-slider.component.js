/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, ChangeDetectorRef } from '@angular/core';
var TdDynamicSliderComponent = /** @class */ (function () {
    function TdDynamicSliderComponent(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this.label = '';
        this.required = undefined;
        this.name = '';
        this.hint = '';
        this.min = undefined;
        this.max = undefined;
    }
    /**
     * @return {?}
     */
    TdDynamicSliderComponent.prototype._handleBlur = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout(function () {
            _this._changeDetectorRef.markForCheck();
        });
    };
    TdDynamicSliderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'td-dynamic-slider',
                    template: "<div class=\"td-dynamic-slider-wrapper mat-form-field mat-form-field-can-float mat-form-field-should-float\"\n      [class.mat-focused]=\"slider._isActive\">\n  <span class=\"mat-form-field-label-wrapper\">\n    <label class=\"mat-form-field-label mat-primary td-slider-label\">\n      {{label}}\n      <span *ngIf=\"required && !control?.disabled\" class=\"mat-form-field-required-marker\">*</span>\n    </label>\n  </span>\n  <div class=\"td-dynamic-slider-field\">\n    <mat-slider #slider\n                class=\"td-dynamic-slider\"\n                [formControl]=\"control\"\n                [attr.name]=\"name\"\n                [min]=\"min\"\n                [max]=\"max\"\n                thumbLabel\n                tickInterval=\"auto\"\n                [required]=\"required\"\n                (blur)=\"_handleBlur()\">\n    </mat-slider>\n  </div>  \n  <span class=\"mat-hint td-dynamic-element-hint\">{{hint}}</span>\n</div>",
                    styles: [":host .td-dynamic-slider-wrapper{display:block}.td-dynamic-slider-field{position:relative;-ms-flex-direction:row;flex-direction:row;display:-ms-flexbox;display:flex;box-sizing:border-box}.td-dynamic-slider-field .td-dynamic-slider{-ms-flex:1;flex:1}"]
                }] }
    ];
    /** @nocollapse */
    TdDynamicSliderComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    return TdDynamicSliderComponent;
}());
export { TdDynamicSliderComponent };
if (false) {
    /** @type {?} */
    TdDynamicSliderComponent.prototype.control;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.label;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.required;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.name;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.hint;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.min;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.max;
    /** @type {?} */
    TdDynamicSliderComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1zbGlkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNvdmFsZW50L2R5bmFtaWMtZm9ybXMvIiwic291cmNlcyI6WyJkeW5hbWljLWVsZW1lbnRzL2R5bmFtaWMtc2xpZGVyL2R5bmFtaWMtc2xpZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUc3RDtJQXFCRSxrQ0FBb0Isa0JBQXFDO1FBQXJDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBbUI7UUFaekQsVUFBSyxHQUFXLEVBQUUsQ0FBQztRQUVuQixhQUFRLEdBQVksU0FBUyxDQUFDO1FBRTlCLFNBQUksR0FBVyxFQUFFLENBQUM7UUFFbEIsU0FBSSxHQUFXLEVBQUUsQ0FBQztRQUVsQixRQUFHLEdBQVcsU0FBUyxDQUFDO1FBRXhCLFFBQUcsR0FBVyxTQUFTLENBQUM7SUFFb0MsQ0FBQzs7OztJQUU3RCw4Q0FBVzs7O0lBQVg7UUFBQSxpQkFJQztRQUhDLFVBQVUsQ0FBQztZQUNULEtBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN6QyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7O2dCQTNCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtvQkFFN0IsczdCQUE4Qzs7aUJBQy9DOzs7O2dCQVBtQixpQkFBaUI7O0lBK0JyQywrQkFBQztDQUFBLEFBNUJELElBNEJDO1NBdkJZLHdCQUF3Qjs7O0lBRW5DLDJDQUFxQjs7SUFFckIseUNBQW1COztJQUVuQiw0Q0FBOEI7O0lBRTlCLHdDQUFrQjs7SUFFbEIsd0NBQWtCOztJQUVsQix1Q0FBd0I7O0lBRXhCLHVDQUF3Qjs7SUFFWixzREFBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGQtZHluYW1pYy1zbGlkZXInLFxuICBzdHlsZVVybHM6IFsgJy4vZHluYW1pYy1zbGlkZXIuY29tcG9uZW50LnNjc3MnIF0sXG4gIHRlbXBsYXRlVXJsOiAnLi9keW5hbWljLXNsaWRlci5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFRkRHluYW1pY1NsaWRlckNvbXBvbmVudCB7XG5cbiAgY29udHJvbDogRm9ybUNvbnRyb2w7XG5cbiAgbGFiZWw6IHN0cmluZyA9ICcnO1xuXG4gIHJlcXVpcmVkOiBib29sZWFuID0gdW5kZWZpbmVkO1xuXG4gIG5hbWU6IHN0cmluZyA9ICcnO1xuXG4gIGhpbnQ6IHN0cmluZyA9ICcnO1xuXG4gIG1pbjogbnVtYmVyID0gdW5kZWZpbmVkO1xuXG4gIG1heDogbnVtYmVyID0gdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge31cblxuICBfaGFuZGxlQmx1cigpOiB2b2lkIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=