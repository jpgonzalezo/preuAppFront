/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, ChangeDetectorRef } from '@angular/core';
export class TdDynamicSliderComponent {
    /**
     * @param {?} _changeDetectorRef
     */
    constructor(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this.label = '';
        this.required = undefined;
        this.name = '';
        this.hint = '';
        this.min = undefined;
        this.max = undefined;
    }
    /**
     * @return {?}
     */
    _handleBlur() {
        setTimeout(() => {
            this._changeDetectorRef.markForCheck();
        });
    }
}
TdDynamicSliderComponent.decorators = [
    { type: Component, args: [{
                selector: 'td-dynamic-slider',
                template: "<div class=\"td-dynamic-slider-wrapper mat-form-field mat-form-field-can-float mat-form-field-should-float\"\n      [class.mat-focused]=\"slider._isActive\">\n  <span class=\"mat-form-field-label-wrapper\">\n    <label class=\"mat-form-field-label mat-primary td-slider-label\">\n      {{label}}\n      <span *ngIf=\"required && !control?.disabled\" class=\"mat-form-field-required-marker\">*</span>\n    </label>\n  </span>\n  <div class=\"td-dynamic-slider-field\">\n    <mat-slider #slider\n                class=\"td-dynamic-slider\"\n                [formControl]=\"control\"\n                [attr.name]=\"name\"\n                [min]=\"min\"\n                [max]=\"max\"\n                thumbLabel\n                tickInterval=\"auto\"\n                [required]=\"required\"\n                (blur)=\"_handleBlur()\">\n    </mat-slider>\n  </div>  \n  <span class=\"mat-hint td-dynamic-element-hint\">{{hint}}</span>\n</div>",
                styles: [":host .td-dynamic-slider-wrapper{display:block}.td-dynamic-slider-field{position:relative;-ms-flex-direction:row;flex-direction:row;display:-ms-flexbox;display:flex;box-sizing:border-box}.td-dynamic-slider-field .td-dynamic-slider{-ms-flex:1;flex:1}"]
            }] }
];
/** @nocollapse */
TdDynamicSliderComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
if (false) {
    /** @type {?} */
    TdDynamicSliderComponent.prototype.control;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.label;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.required;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.name;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.hint;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.min;
    /** @type {?} */
    TdDynamicSliderComponent.prototype.max;
    /** @type {?} */
    TdDynamicSliderComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1zbGlkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNvdmFsZW50L2R5bmFtaWMtZm9ybXMvIiwic291cmNlcyI6WyJkeW5hbWljLWVsZW1lbnRzL2R5bmFtaWMtc2xpZGVyL2R5bmFtaWMtc2xpZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVE3RCxNQUFNLE9BQU8sd0JBQXdCOzs7O0lBZ0JuQyxZQUFvQixrQkFBcUM7UUFBckMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFtQjtRQVp6RCxVQUFLLEdBQVcsRUFBRSxDQUFDO1FBRW5CLGFBQVEsR0FBWSxTQUFTLENBQUM7UUFFOUIsU0FBSSxHQUFXLEVBQUUsQ0FBQztRQUVsQixTQUFJLEdBQVcsRUFBRSxDQUFDO1FBRWxCLFFBQUcsR0FBVyxTQUFTLENBQUM7UUFFeEIsUUFBRyxHQUFXLFNBQVMsQ0FBQztJQUVvQyxDQUFDOzs7O0lBRTdELFdBQVc7UUFDVCxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3pDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBM0JGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUU3QixzN0JBQThDOzthQUMvQzs7OztZQVBtQixpQkFBaUI7Ozs7SUFVbkMsMkNBQXFCOztJQUVyQix5Q0FBbUI7O0lBRW5CLDRDQUE4Qjs7SUFFOUIsd0NBQWtCOztJQUVsQix3Q0FBa0I7O0lBRWxCLHVDQUF3Qjs7SUFFeEIsdUNBQXdCOztJQUVaLHNEQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0ZC1keW5hbWljLXNsaWRlcicsXG4gIHN0eWxlVXJsczogWyAnLi9keW5hbWljLXNsaWRlci5jb21wb25lbnQuc2NzcycgXSxcbiAgdGVtcGxhdGVVcmw6ICcuL2R5bmFtaWMtc2xpZGVyLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgVGREeW5hbWljU2xpZGVyQ29tcG9uZW50IHtcblxuICBjb250cm9sOiBGb3JtQ29udHJvbDtcblxuICBsYWJlbDogc3RyaW5nID0gJyc7XG5cbiAgcmVxdWlyZWQ6IGJvb2xlYW4gPSB1bmRlZmluZWQ7XG5cbiAgbmFtZTogc3RyaW5nID0gJyc7XG5cbiAgaGludDogc3RyaW5nID0gJyc7XG5cbiAgbWluOiBudW1iZXIgPSB1bmRlZmluZWQ7XG5cbiAgbWF4OiBudW1iZXIgPSB1bmRlZmluZWQ7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gIF9oYW5kbGVCbHVyKCk6IHZvaWQge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==