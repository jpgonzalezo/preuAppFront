{"version":3,"sources":["ng://@covalent/core/paging/paging-bar.component.ts","ng://@covalent/core/paging/paging.module.ts","node_modules/tslib/tslib.es6.js","ng://@covalent/core/virtual-scroll/virtual-scroll-row.directive.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-container.component.ts","ng://@covalent/core/virtual-scroll/virtual-scroll.module.ts","ng://@covalent/core/notifications/notification-count.component.ts","ng://@covalent/core/notifications/notifications.module.ts","ng://@covalent/core/common/forms/auto-trim/auto-trim.directive.ts","ng://@covalent/core/common/pipes/time-ago/time-ago.pipe.ts","ng://@covalent/core/common/pipes/time-difference/time-difference.pipe.ts","ng://@covalent/core/common/pipes/time-until/time-until.pipe.ts","ng://@covalent/core/common/pipes/bytes/bytes.pipe.ts","ng://@covalent/core/common/pipes/decimal-bytes/decimal-bytes.pipe.ts","ng://@covalent/core/common/pipes/digits/digits.pipe.ts","ng://@covalent/core/common/pipes/truncate/truncate.pipe.ts","ng://@covalent/core/common/services/router-path.service.ts","ng://@covalent/core/common/services/icon.service.ts","ng://@covalent/core/common/common.module.ts","ng://@covalent/core/common/animations/rotate/rotate.animation.ts","ng://@covalent/core/common/animations/collapse/collapse.animation.ts","ng://@covalent/core/common/animations/fade/fadeInOut.animation.ts","ng://@covalent/core/common/animations/bounce/bounce.animation.ts","ng://@covalent/core/common/animations/flash/flash.animation.ts","ng://@covalent/core/common/animations/headshake/headshake.animation.ts","ng://@covalent/core/common/animations/jello/jello.animation.ts","ng://@covalent/core/common/animations/pulse/pulse.animation.ts","ng://@covalent/core/common/behaviors/control-value-accesor.mixin.ts","ng://@covalent/core/common/forms/validators/validators.ts","ng://@covalent/core/message/message.component.ts","ng://@covalent/core/message/message.module.ts","ng://@covalent/core/chips/chips.component.ts","ng://@covalent/core/chips/chips.module.ts","ng://@covalent/core/data-table/data-table-row/data-table-row.component.ts","ng://@covalent/core/data-table/directives/data-table-template.directive.ts","ng://@covalent/core/data-table/data-table.component.ts","ng://@covalent/core/data-table/data-table-column/data-table-column.component.ts","ng://@covalent/core/data-table/data-table-cell/data-table-cell.component.ts","ng://@covalent/core/data-table/data-table-table/data-table-table.component.ts","ng://@covalent/core/data-table/services/data-table.service.ts","ng://@covalent/core/data-table/data-table.module.ts","ng://@covalent/core/dialogs/dialog.component.ts","ng://@covalent/core/dialogs/alert-dialog/alert-dialog.component.ts","ng://@covalent/core/dialogs/confirm-dialog/confirm-dialog.component.ts","ng://@covalent/core/dialogs/prompt-dialog/prompt-dialog.component.ts","ng://@covalent/core/dialogs/services/dialog.service.ts","ng://@covalent/core/dialogs/dialogs.module.ts","ng://@covalent/core/expansion-panel/expansion-panel.component.ts","ng://@covalent/core/expansion-panel/expansion-panel-group.component.ts","ng://@covalent/core/expansion-panel/expansion-panel.module.ts","ng://@covalent/core/file/directives/file-select.directive.ts","ng://@covalent/core/file/directives/file-drop.directive.ts","ng://@covalent/core/file/file-input/file-input.component.ts","ng://@covalent/core/file/file-upload/file-upload.component.ts","ng://@covalent/core/file/services/file.service.ts","ng://@covalent/core/file/file.module.ts","ng://@covalent/core/json-formatter/json-formatter.component.ts","ng://@covalent/core/json-formatter/json-formatter.module.ts","ng://@covalent/core/layout/layout.component.ts","ng://@covalent/core/layout/layout-toggle.class.ts","ng://@covalent/core/layout/layout.directives.ts","ng://@covalent/core/layout/layout-nav/layout-nav.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts","ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts","ng://@covalent/core/layout/layout-footer/layout-footer.component.ts","ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts","ng://@covalent/core/layout/layout.module.ts","ng://@covalent/core/loading/loading.component.ts","ng://@covalent/core/loading/services/loading.factory.ts","ng://@covalent/core/loading/services/loading.service.ts","ng://@covalent/core/loading/directives/loading.directive.ts","ng://@covalent/core/loading/loading.module.ts","ng://@covalent/core/media/services/media.service.ts","ng://@covalent/core/media/directives/media-toggle.directive.ts","ng://@covalent/core/media/media.module.ts","ng://@covalent/core/menu/menu.component.ts","ng://@covalent/core/menu/menu.module.ts","ng://@covalent/core/search/search-input/search-input.component.ts","ng://@covalent/core/search/search-box/search-box.component.ts","ng://@covalent/core/search/search.module.ts","ng://@covalent/core/breadcrumbs/breadcrumb/breadcrumb.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.module.ts","ng://@covalent/core/steps/step.component.ts","ng://@covalent/core/steps/steps.component.ts","ng://@covalent/core/steps/step-header/step-header.component.ts","ng://@covalent/core/steps/step-body/step-body.component.ts","ng://@covalent/core/steps/nav/nav-step-link/nav-step-link.component.ts","ng://@covalent/core/steps/nav/nav-steps-horizontal/nav-steps-horizontal.component.ts","ng://@covalent/core/steps/nav/nav-steps-vertical/nav-steps-vertical.component.ts","ng://@covalent/core/steps/steps.module.ts","ng://@covalent/core/tab-select/tab-option.component.ts","ng://@covalent/core/tab-select/tab-select.component.ts","ng://@covalent/core/tab-select/tab-select.module.ts","ng://@covalent/core/common/behaviors/disabled.mixin.ts","ng://@covalent/core/common/behaviors/disable-ripple.mixin.ts"],"names":["TdPagingBarComponent","_dir","_changeDetectorRef","this","_pageSize","_total","_page","_fromRow","_toRow","_initialized","_pageLinks","_pageLinkCount","_hitEnd","_hitStart","firstLast","initialPage","onChange","EventEmitter","Object","defineProperty","prototype","pageLinkCount","coerceNumberProperty","_calculatePageLinks","markForCheck","pageSize","_handleOnChange","total","_calculateRows","Math","ceil","dir","ngOnInit","navigateToPage","page","maxPage","floor","firstPage","prevPage","nextPage","lastPage","isMinPage","isMaxPage","top","actualPageLinkCount","middlePageLinks","x","event","fromRow","toRow","emit","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","Dir","decorators","type","Optional","ChangeDetectorRef","Input","Output","CovalentPagingModule","NgModule","imports","CommonModule","MatIconModule","MatButtonModule","declarations","exports","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","TdVirtualScrollRowDirective","templateRef","viewContainerRef","_super","tslib_1.__extends","Directive","TemplateRef","ViewContainerRef","TemplatePortalDirective","TdVirtualScrollContainerComponent","_elementRef","_domSanitizer","_renderer","_subs","_bottom","Subject","_totalHeight","_hostHeight","_scrollVerticalOffset","bottom","trackBy","index","item","_data","data","_calculateVirtualRows","_virtualData","_rows","toArray","nativeElement","getBoundingClientRect","height","_offsetTransform","ngAfterViewInit","_this","changes","subscribe","pipe","debounceTime","lastRow","lastIndex","ngAfterViewChecked","newHostHeight","ngOnDestroy","forEach","sub","unsubscribe","handleScroll","element","verticalScroll","scrollTop","rowHeight","refresh","scrollTo","row","scrollToStart","scrollToEnd","totalHeight","isFinite","offset","bypassSecurityTrustStyle","slice","Promise","resolve","then","ElementRef","DomSanitizer","Renderer2","ViewChildren","ContentChild","HostListener","TD_VIRTUAL_SCROLL","CovalentVirtualScrollModule","Top","Bottom","Center","Before","After","TdNotificationCountComponent","_notifications","_limit","color","_positionX","positionX","_positionY","positionY","notifications","limit","show","_hasContent","toString","isNaN","ngAfterContentInit","TdNotificationCountPositionX","TdNotificationCountPositionY","content","contentElement","children","textContent","trim","ViewChild","HostBinding","TD_NOTIFICATIONS","CovalentNotificationsModule","TdAutoTrimDirective","_model","onBlur","update","NgModel","Host","TdTimeAgoPipe","transform","time","reference","Date","ref","getTime","startTime","now","diff","Pipe","name","TdTimeDifferencePipe","start","end","endTime","undefined","days","hours","minutes","seconds","pad","daysFormatted","substring","TdTimeUntilPipe","TdBytesPipe","bytes","precision","parseInt","log","parseFloat","pow","toFixed","TdDecimalBytesPipe","TdDigitsPipe","_locale","_decimalPipe","DecimalPipe","digits","size","Inject","LOCALE_ID","TdTruncatePipe","text","truncated","substr","lastIndexOf","RouterPathService","_router","events","filter","RoutesRecognized","pairwise","_previousRoute","urlAfterRedirects","getPreviousRoute","Injectable","Router","IconService","_icons","query","icons","el","toLowerCase","indexOf","TD_FORMS","TD_VALIDATORS","TD_PIPES","CovalentCommonModule","FormsModule","providers","tdRotateAnimation","trigger","state","style","params","degressStart","degreesEnd","transition","group","animateChild","optional","animate","duration","delay","ease","tdCollapseAnimation","overflow","AUTO_STYLE","tdFadeInOutAnimation","opacity","visibility","easeOnIn","easeOnOut","tdBounceAnimation","keyframes","animationTimingFunction","tdFlashAnimation","tdHeadshakeAnimation","tdJelloAnimation","tdPulseAnimation","noop","CovalentValidators","min","minValue","c","Validators","required","v","actualValue","max","maxValue","numberRequired","Number","TdMessageContainerDirective","viewContainer","TdMessageComponent","_opened","_hidden","_animating","icon","addClass","_color","removeClass","opened","open","close","animationDoneListener","_detach","_attach","_startAnimationState","toggle","_childElement","createEmbeddedView","_template","clear","animations","TD_MESSAGE","CovalentMessageModule","TdChipDirective","TdAutocompleteOptionDirective","TdChipsBase","_TdChipsMixinBase","mixinControlValueAccessor","mixinDisabled","TdChipsComponent","_document","_outsideClickSubs","Subscription","EMPTY","_inputValueChangesSubs","_isMousedown","_length","_stacked","_requireMatch","_inputPosition","_chipAddition","_chipRemoval","_focused","_required","_tabIndex","_touchendDebounce","_internalClick","_internalActivateOption","inputControl","FormControl","debounce","onAdd","onRemove","onInputChange","onChipFocus","onChipBlur","compareWith","o1","o2","_items","items","_setFirstOptionActive","stacked","coerceBooleanProperty","inputPosition","requireMatch","chipAddition","_toggleInput","disabled","chipRemoval","canAddChip","placeholder","focusListener","focus","preventDefault","mousedownListener","timer","toPromise","clickListener","clickTarget","className","stopPropagation","keydownListener","keyCode","TAB","removeFocusedState","ESCAPE","_inputChild","focused","_nativeInput","blur","_closeAutocomplete","valueChanges","_watchOutsideClick","ngDoCheck","_setInternalClick","onDisabledChange","_handleAddChip","selectedOptions","_options","option","active","setInactiveStyles","_autocompleteTrigger","activeOption","addChip","setFocusedState","_openAutocomplete","setValue","findIndex","removeChip","removedValues","splice","_totalChips","_focusChip","_handleChipBlur","_handleChipFocus","_handleFocus","_focusFirstChip","_inputKeydown","UP_ARROW","LEFT_ARROW","DELETE","BACKSPACE","_focusLastChip","RIGHT_ARROW","_chipKeydown","canRemoveChip","DOWN_ARROW","_removeInputDisplay","panelOpen","openPanel","closePanel","_chipsChildren","enable","disable","setActiveStyles","merge","fromEvent","setTimeout","contains","onTouched","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","DOCUMENT","MatInput","MatAutocompleteTrigger","MatChip","MatOption","CovalentChipsModule","ReactiveFormsModule","MatInputModule","MatChipsModule","MatAutocompleteModule","TdDataTableColumnRowComponent","TdDataTableRowComponent","_selected","selected","TdDataTableTemplateDirective","Ascending","Descending","TdDataTableBase","_TdDataTableMixinBase","TdDataTableComponent","_hostWidth","_resizableColumns","_columnClientX","_onColumnResize","_widths","_onResize","_scrollHorizontalOffset","_onHorizontalScroll","_onVerticalScroll","_rowHeightCache","_selectable","_clickable","_multiple","_allSelected","_indeterminate","_sortable","_sortOrder","TdDataTableSortingOrder","_shiftPreviouslyPressed","_lastSelectedIndex","_firstSelectedIndex","_firstCheckboxValue","_templateMap","Map","onSortChange","onRowSelect","onRowClick","onSelectAll","model","_resizingColumn","selectable","_scrollableDiv","_columns","hasData","keys","k","find","label","cols","resizableColumns","clickable","multiple","sortable","columnName","column","columns","Error","_sortBy","order","sortOrder","toUpperCase","_resizeSubs","asObservable","_calculateWidths","_columnResizeSubs","clientX","_horizontalScrollSubs","horizontalScroll","_verticalScrollSubs","_valueChangesSubs","_templates","set","tdDataTableTemplate","ngAfterContentChecked","newHostWidth_1","width","_rowsChangedSubs","scrollLeft","getColumnWidth","getCellValue","nested","_getNestedValue","getTemplateRef","get","clearModel","_calculateCheckboxState","selectAll","checked","toggledRows","isRowSelected","modelRow","val","rows","select","currentSelected","blockEvent","mouseEvent","shiftKey","firstIndex","_doSelection","rowSelected","disableTextSelection","onselectstart","enableTextSelection","handleRowClick","srcElement","currentTarget","getAttribute","tagName","handleSort","_rowKeyup","ENTER","SPACE","_handleStartColumnDrag","_handleColumnDrag","xPosition","proposedManualWidth","_colElements","projectedWidth","_handleEndColumnDrag","splitName","split","rowIndex","wasSelected","_b","__values","tslib_1.__values","_c","col","_adjustColumnWidth","_calculateWidth","_adjustColumnWidhts","fixedTotalWidth","flexibleWidths","hidden","recalculateHostWidth","hostWidth","newValue_1","adjustedNumber_1","colWidth","newFlexibleWidths","skipMinWidthProjection","widthOpts","renderedColumns","scrolledRows","rowHeightSum_1","hostHeight","ContentChildren","TdDataTableColumnComponent","numeric","_columnContent","handleClick","isAscending","isDescending","read","TdDataTableCellComponent","_align","align","TdDataTableTableComponent","TdDataTableService","filterData","searchTerm","ignoreCase","excludedColumns","key","preItemValue","sortData","sortBy","from","sort","a","compA","compB","direction","pageData","DATA_TABLE_PROVIDER_FACTORY","parent","DATA_TABLE_PROVIDER","deps","SkipSelf","useFactory","TD_DATA_TABLE","CovalentDataTableModule","MatCheckboxModule","MatTooltipModule","MatPseudoCheckboxModule","TdDialogTitleDirective","TdDialogContentDirective","TdDialogActionsDirective","TdDialogComponent","dialogTitle","dialogContent","dialogActions","TdAlertDialogComponent","_dialogRef","closeButton","MatDialogRef","TdConfirmDialogComponent","cancelButton","acceptButton","cancel","accept","TdPromptDialogComponent","_input","handleInputFocus","TdDialogService","_dialogService","component","config","closeAll","openAlert","dialogConfig","_createConfig","dialogRef","alertDialogComponent","componentInstance","title","message","openConfirm","confirmDialogComponent","openPrompt","promptDialogComponent","MatDialogConfig","assign","MatDialog","TD_DIALOGS","TD_DIALOGS_ENTRY_COMPONENTS","CovalentDialogsModule","MatDialogModule","entryComponents","TdExpansionPanelHeaderDirective","TdExpansionPanelLabelDirective","TdExpansionPanelSublabelDirective","TdExpansionPanelSummaryComponent","TdExpansionPanelBase","_TdExpansionPanelMixinBase","mixinDisableRipple","TdExpansionPanelComponent","_expand","expanded","collapsed","expand","_setExpand","clickEvent","_onCollapsed","newExpand","_onExpanded","TdExpansionPanelGroupComponent","_multi","_lastOpenedPanels","_destroyed","_stopWatchingPanels","_closeAllExcept","openedPanels","expansionPanels","expansionPanel","numOpenedPanels","_attachListeners","takeUntil","openAll","indexOfPanel","panel","TD_EXPANSION_PANEL","CovalentExpansionPanelModule","MatRippleModule","PortalModule","TdFileSelectDirective","onFileSelect","target","HTMLInputElement","files","TdFileDropBase","_TdFileDropMixinBase","TdFileDropDirective","_element","onFileDrop","onDrop","dataTransfer","_stopEvent","onDragOver","transfer","dropEffect","_typeCheck","types","mozItemCount","onDragEnter","onDragLeave","TdFileInputLabelDirective","TdFileInputBase","_TdFileInputMixinBase","TdFileInputComponent","onSelect","_inputElement","handleSelect","writeValue","setProperty","inputElement","setDisabledState","isDisabled","TdFileUploadBase","_TdFileUploadMixinBase","TdFileUploadComponent","defaultColor","activeColor","cancelColor","onUpload","onCancel","uploadPressed","fileInput","TdFileService","_progressSubject","_progressObservable","upload","options","Observable","subscriber","xhr","XMLHttpRequest","formData","FormData","file","append","onprogress","progress","lengthComputable","round","loaded","onreadystatechange","readyState","status","response","complete","method","url","setRequestHeader","headers","send","TD_FILE","CovalentFileModule","TdJsonFormatterComponent","_open","_levelsOpen","levelsOpen","isInteger","elipsis","_key","KEY_MAX_LENGTH","parseChildren","_children","isObject","getType","isArray","hasChildren","getValue","replace","getObjectName","object","date","results","exec","getPreview","previewData","startChar","endChar","PREVIEW_LIMIT","map","obj","previewString","join","ellipsis","PREVIEW_STRING_MAX_LENGTH","CovalentJsonFormatterModule","TdLayoutComponent","mode","sidenavWidth","containerAutosize","sidenav","MatSidenav","LayoutToggleBase","_TdLayoutToggleMixinBase","LayoutToggle","_layout","_hideWhenOpened","_noLayoutMessage","hideWhenOpened","_toggleVisibility","_toggleSubs","_animationStarted","onClick","setStyle","console","warn","TdLayoutToggleDirective","layout","renderer","elementRef","tdLayoutToggle","TdLayoutCloseDirective","tdLayoutClose","TdLayoutOpenDirective","tdLayoutOpen","TdLayoutNavComponent","navigationRoute","handleNavigationClick","routerEnabled","navigateByUrl","TdLayoutNavListComponent","TdLayoutNavListToggleDirective","tdLayoutNavListToggle","TdLayoutNavListCloseDirective","tdLayoutNavListClose","TdLayoutNavListOpenDirective","tdLayoutNavListOpen","TdLayoutCardOverComponent","cardWidth","TdLayoutManageListComponent","TdLayoutManageListToggleDirective","tdLayoutManageListToggle","TdLayoutManageListCloseDirective","tdLayoutManageListClose","TdLayoutManageListOpenDirective","tdLayoutManageListOpen","TdLayoutFooterComponent","TdNavigationDrawerMenuDirective","TdNavigationDrawerToolbarDirective","TdNavigationDrawerComponent","_sanitize","_menuToggled","_drawerMenu","_toolbar","_backgroundImage","backgroundUrl","sanitizedUrl","sanitize","SecurityContext","RESOURCE_URL","STYLE","_closeSubscription","openedChange","toggleMenu","isMenuAvailable","TD_LAYOUTS","CovalentLayoutModule","ScrollDispatchModule","MatSidenavModule","MatToolbarModule","MatCardModule","MatDividerModule","Circular","Linear","Determinate","Indeterminate","Overlay","Replace","FullScreen","None","TdLoadingComponent","_animationIn","_animationOut","_mode","LoadingMode","_defaultMode","_value","_circleDiameter","animation","LoadingStyle","LoadingType","isOverlay","_setCircleDiameter","getHeight","isFullScreen","getCircleDiameter","getCircleStrokeWidth","strokeWidth","abs","isCircular","isLinear","animationComplete","fromState","outAnimationCompleted","inAnimationCompleted","startInAnimation","startOutAnimation","diameter","TdLoadingFactory","_componentFactoryResolver","_overlay","_injector","createFullScreenComponent","overlayRef","loadingRef","_initializeContext","loading","observable","distinctUntilChanged","registered","_createOverlay","componentRef","attach","ComponentPortal","_mapOptions","instance","changeDetectorRef","detectChanges","subs_1","destroy","detach","dispose","createOverlayComponent","_createComponent","TemplatePortal","insert","hostView","createReplaceComponent","context","nextElementSibling","scrollHeight","contentRef","subs_2","OverlayConfig","hasBackdrop","positionStrategy","position","global","centerHorizontally","centerVertically","compRef","resolveComponentFactory","subject","times","ComponentFactoryResolver","Injector","LOADING_FACTORY_PROVIDER_FACTORY","componentFactoryResolver","overlay","injector","LOADING_FACTORY_PROVIDER","TdLoadingConfig","TdLoadingDirectiveConfig","strategy","LoadingStrategy","TdLoadingService","_loadingFactory","_context","_timeouts","createComponent","directiveConfig","fullscreenConfig","removeComponent","register","registers","_clearTimeout","resolves","resolveAll","clearTimeout","LOADING_PROVIDER_FACTORY","loadingFactory","LOADING_PROVIDER","TdLoadingContext","$implicit","tdLoading","TD_LOADING_NEXT_ID","TdLoadingDirective","_viewContainerRef","_templateRef","_loadingService","_name","until","_type","stategy","_strategy","_registerComponent","_loadingRef","TD_LOADING","TD_LOADING_ENTRY_COMPONENTS","CovalentLoadingModule","MatProgressBarModule","MatProgressSpinnerModule","OverlayModule","TdMediaService","_ngZone","_resizing","_queryMap","_querySources","_queryObservables","_globalSubscription","runOutsideAngular","window","deregisterQuery","run","matchMedia","matches","registerQuery","BehaviorSubject","broadcast","this_1","_matchMediaTrigger","NgZone","MEDIA_PROVIDER_FACTORY","ngZone","MEDIA_PROVIDER","TdMediaToggleDirective","_mediaService","_matches","_attributes","_styles","_classes","_query","attributes","classes","styles","_mediaChange","_subscription","_changeAttributes","_changeClasses","_changeStyles","attr","setAttribute","removeAttribute","removeStyle","TD_MEDIA","CovalentMediaModule","TdMenuComponent","TD_MENU","CovalentMenuModule","MatMenuModule","TdSearchInputBase","_TdSearchInputMixinBase","TdSearchInputComponent","showUnderline","clearIcon","onSearchDebounce","onSearch","onClear","ngControl","skip","_searchTermChanged","handleBlur","handleSearch","clearSearch","display","TdSearchBoxBase","_TdSearchBoxMixinBase","TdSearchBoxComponent","_searchVisible","backIcon","searchIcon","alwaysVisible","searchClicked","handleClear","_searchInput","toggleVisibility","handleSearchDebounce","margin","CovalentSearchModule","TdBreadcrumbComponent","_displayCrumb","_width","separatorIcon","_displayIcon","shouldDisplay","_handleIconClick","host","class","TdBreadcrumbsComponent","_resizeSubscription","_widthSubject","hiddenBreadcrumbs","_calculateVisibility","nativeElementWidth","setCrumbIcons","getComputedStyle","borderLeft","borderRight","marginLeft","marginRight","paddingLeft","paddingRight","_breadcrumbs","breadcrumbArray","breadcrumb","crumbsArray","crumbWidthSum","hiddenCrumbs","displayCrumb","CovalentBreadcrumbsModule","Required","Complete","TdStepLabelDirective","TdStepActionsDirective","TdStepSummaryDirective","TdStepBase","_TdStepMixinBase","TdStepComponent","_active","_state","StepState","onActivated","onDeactivated","_contentPortal","_setActive","_content","isComplete","_onDeactivated","newActive","_onActivated","Vertical","Horizontal","TdStepsComponent","StepMode","onStepChange","steps","_steps","_registerSteps","_deregisterSteps","isHorizontal","isVertical","areStepsActive","step","_onStepSelection","prevStep","event_1","newStep","_deactivateAllBut","activeStep","_subcriptions","subscription","subs","TdStepHeaderBase","_TdStepHeaderMixinBase","TdStepHeaderComponent","apply","isRequired","TdStepBodyComponent","actionsRef","summaryRef","TdNavStepLinkComponent","_handleClick","click","stopImmediatePropagation","[class.td-step-link]","[attr.tabindex]","[attr.disabled]","[class.mat-disabled]","(click)","TdNavStepsHorizontalComponent","_viewportRuler","_separators","_scrollDistance","_scrollDistanceChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","change","of","_configureSteps","updatePagination","_updateStepScrollPosition","_handleKeydown","_scrollHeader","_checkPaginationEnabled","_checkScrollingControls","_getLayoutDirection","translateX","scrollDistance","_stepList","_stepListContainer","_getMaxScrollDistance","scrollDir","offsetWidth","isEnabled","scrollWidth","separator","removeChild","stepsArray","createElement","insertBefore","number","[class.td-step-header-pagination-controls-enabled]","[class.td-step-header-rtl]","ViewportRuler","Directionality","TdNavStepsVerticalComponent","separatorChild","appendChild","TD_STEPS","CovalentStepsModule","TdTabOptionBase","_TdTabOptionMixinBase","TdTabOptionComponent","TdTabSelectBase","_TdTabSelectMixinBase","TdTabSelectComponent","_values","_selectedIndex","_stretchTabs","valueChange","_tabOptions","stretchTabs","_setValue","_refreshValues","selectedIndexChange","selectedIndex","tabOptions","tabOption","CovalentTabSelectModule","MatTabsModule","base","initialValue","class_1","_i","_","_subjectValueChanges","registerOnChange","fn","registerOnTouched","_disabled","newValue","_disableRipple","onDisableRippleChange"],"mappings":"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A,WAEA,SAAAA,KAuBA,OAlBEA,EAAA7O,UAAAoM,UAAA,SAAU0C,EAAW3J,GACnB,GAAoB,iBAAT2J,EACT,MAAO,OAILC,EAAoBD,EAAKE,OAAO,EAAG7J,GAUvC,OARI2J,EAAK3J,OAASA,IACiB,EAA7B4J,EAAUE,YAAY,OACxBF,EAAYA,EAAUvD,QAGxBuD,GAAa,KAGRA,uBArBVlC,EAAAA,KAAI7K,KAAA,CAAC,CACJ8K,KAAM,eAsBR+B,EAzBA,GCAAK,GAAA,WAQE,SAAAA,EAAoBC,GAAApQ,KAAAoQ,QAAAA,EAClBpQ,KAAKoQ,QAAQC,OAAO1H,KAClB2H,EAAAA,OAAO,SAAC7K,GAAW,OAAAA,aAAa8K,EAAAA,mBAChCC,EAAAA,YACA9H,UAAU,SAACjD,GACX0K,EAAkBM,eAAiBhL,EAAE,GAAGiL,oBAW9C,OAHEP,EAAAlP,UAAA0P,iBAAA,WACE,OAAOR,EAAkBM,gBAfdN,EAAAM,eAAyB,wBAFvCG,EAAAA,sDAJQC,EAAAA,UAuBTV,EAxBA,iBCOA,SAAAW,IAGU9Q,KAAA+Q,OAAmB,CACzB,eACA,gBACA,cACA,gBACA,kBACA,yBACA,cACA,iBACA,MACA,YACA,UACA,aACA,qBACA,oBACA,gBACA,SACA,QACA,YACA,YACA,WACA,QACA,UACA,eACA,OACA,UACA,aACA,kBACA,yBACA,gBACA,gBACA,eACA,aACA,aACA,iBACA,kBACA,oBACA,sBACA,uBACA,kBACA,cACA,eACA,aACA,aACA,YACA,WACA,YACA,SACA,gBACA,wBACA,eACA,cACA,kBACA,WACA,QACA,YACA,kBACA,sBACA,qBACA,sBACA,gBACA,cACA,WACA,UACA,OACA,WACA,kBACA,aACA,gBACA,eACA,eACA,oBACA,eACA,cACA,eACA,eACA,eACA,aACA,kBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,kBACA,iBACA,oBACA,eACA,QACA,aACA,QACA,WACA,SACA,OACA,OACA,WACA,YACA,aACA,cACA,gBACA,aACA,SACA,aACA,eACA,cACA,cACA,SACA,OACA,iBACA,sBACA,oBACA,OACA,QACA,YACA,0BACA,eACA,eACA,gBACA,QACA,QACA,YACA,QACA,iBACA,QACA,eACA,aACA,iBACA,YACA,cACA,eACA,cACA,uBACA,aACA,WACA,UACA,UACA,WACA,sBACA,gBACA,WACA,eACA,cACA,gBACA,gBACA,0BACA,SACA,cACA,OACA,YACA,WACA,WACA,WACA,WACA,YACA,iBACA,gBACA,gBACA,cACA,YACA,aACA,SACA,SACA,cACA,cACA,kBACA,UACA,kBACA,iBACA,aACA,UACA,aACA,UACA,aACA,kBACA,kBACA,iBACA,iBACA,qBACA,iBACA,oBACA,qBACA,kBACA,YACA,MACA,iBACA,qBACA,OACA,SACA,OACA,WACA,SACA,YACA,MACA,OACA,QACA,QACA,YACA,QACA,gBACA,QACA,kBACA,aACA,aACA,aACA,cACA,cACA,cACA,WACA,UACA,WACA,iBACA,iBACA,kBACA,kBACA,gBACA,YACA,OACA,eACA,cACA,WACA,kBACA,WACA,gBACA,cACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,gBACA,iBACA,sBACA,eACA,gBACA,aACA,cACA,cACA,oBACA,iBACA,eACA,eACA,OACA,QACA,aACA,YACA,WACA,SACA,cACA,iBACA,OACA,eACA,gBACA,SACA,cACA,gBACA,iBACA,gBACA,sBACA,uBACA,oBACA,qBACA,cACA,eACA,oBACA,qBACA,oBACA,yBACA,yBACA,gBACA,sBACA,uBACA,uBACA,eACA,eACA,cACA,uBACA,8BACA,8BACA,oBACA,QACA,UACA,aACA,aACA,YACA,aACA,kBACA,YACA,UACA,QACA,UACA,UACA,MACA,YACA,gBACA,UACA,QACA,WACA,QACA,aACA,WACA,UACA,QACA,YACA,aACA,KACA,UACA,SACA,aACA,WACA,UACA,cACA,UACA,UACA,OACA,eACA,eACA,gBACA,UACA,OACA,QACA,kBACA,iBACA,OACA,QACA,QACA,qBACA,gBACA,QACA,0BACA,OACA,eACA,QACA,eACA,iBACA,oBACA,kBACA,oBACA,cACA,eACA,gBACA,oBACA,MACA,WACA,sBACA,sBACA,uBACA,oBACA,qBACA,oBACA,gBACA,kBACA,eACA,iBACA,QACA,gBACA,YACA,WACA,SACA,oBACA,aACA,iBACA,SACA,SACA,eACA,WACA,cACA,OACA,cACA,gBACA,gBACA,OACA,OACA,YACA,UACA,iBACA,gBACA,YACA,YACA,aACA,iBACA,0BACA,eACA,cACA,gBACA,oBACA,sBACA,iBACA,cACA,wBACA,gBACA,aACA,eACA,cACA,gBACA,iBACA,cACA,cACA,aACA,oBACA,kBACA,YACA,iBACA,aACA,gBACA,oBACA,eACA,cACA,qBACA,OACA,YACA,eACA,QACA,UACA,UACA,UACA,UACA,YACA,YACA,OACA,QACA,UACA,OACA,MACA,aACA,qBACA,SACA,OACA,aACA,UACA,MACA,WACA,UACA,MACA,eACA,YACA,YACA,oBACA,OACA,WACA,OACA,aACA,YACA,QACA,QACA,iBACA,aACA,iBACA,mBACA,mBACA,cACA,SACA,gBACA,kBACA,gBACA,aACA,eACA,iBACA,eACA,eACA,MACA,SACA,iBACA,WACA,gBACA,uBACA,qBACA,oBACA,uBACA,cACA,iBACA,kBACA,cACA,YACA,QACA,WACA,UACA,WACA,oBACA,sBACA,oBACA,sBACA,aACA,QACA,sBACA,uBACA,UACA,SACA,iBACA,kBACA,wBACA,oBACA,0BACA,gBACA,aACA,iBACA,iBACA,SACA,aACA,iBACA,aACA,iBACA,QACA,gBACA,0BACA,kBACA,gBACA,eACA,eACA,eACA,eACA,YACA,kBACA,iBACA,gBACA,iBACA,kBACA,QACA,cACA,eACA,gBACA,2BACA,0BACA,0BACA,iBACA,qBACA,WACA,QACA,aACA,qBACA,sBACA,gBACA,oBACA,eACA,WACA,OACA,UACA,oBACA,WACA,QACA,cACA,qBACA,iBACA,QACA,SACA,UACA,gBACA,kBACA,QACA,cACA,QACA,uBACA,yBACA,cACA,UACA,gBACA,SACA,OACA,UACA,SACA,gBACA,wBACA,iBACA,UACA,SACA,aACA,SACA,YACA,YACA,WACA,QACA,YACA,SACA,iBACA,kBACA,UACA,cACA,OACA,wBACA,cACA,eACA,SACA,YACA,OACA,UACA,WACA,SACA,wBACA,uBACA,uBACA,kBACA,UACA,aACA,SACA,WACA,aACA,OACA,WACA,wBACA,0BACA,qBACA,sBACA,gBACA,oBACA,yBACA,2BACA,2BACA,sBACA,wBACA,oBACA,iBACA,iBACA,kBACA,2BACA,iBACA,QACA,OACA,WACA,kBACA,gBACA,UACA,wBACA,8CACA,yBACA,uBACA,sBACA,oBACA,yBACA,kBACA,WACA,iBACA,YACA,gBACA,YACA,aACA,MACA,aACA,SACA,OACA,gBACA,YACA,UACA,gBACA,gBACA,gBACA,aACA,OACA,cACA,YACA,QACA,yBACA,wBACA,yBACA,wBACA,OACA,UACA,QACA,uBACA,aACA,kBACA,QACA,UACA,YACA,qBACA,iBACA,aACA,aACA,YACA,uBACA,gBACA,eACA,OACA,gBACA,eACA,gBACA,oBACA,MACA,iBACA,SACA,iBACA,aACA,YACA,eACA,UACA,cACA,UACA,UACA,WACA,aACA,WACA,iBACA,gBACA,YACA,QACA,WACA,UACA,YACA,MACA,QACA,OACA,WACA,OACA,gBACA,UACA,YACA,YACA,gBACA,gBACA,cACA,OACA,YACA,gBACA,KACA,OACA,cACA,cACA,MACA,gBACA,wBACA,wBACA,qBACA,YACA,gBACA,WACA,eACA,cACA,aACA,gBACA,cACA,aACA,eACA,WACA,gBACA,YACA,cACA,aACA,cACA,YACA,WACA,aACA,iBACA,aACA,YACA,cACA,cACA,aACA,YACA,UACA,WACA,YACA,UACA,QACA,UACA,YACA,kBACA,gBACA,WACA,KACA,MACA,WACA,UACA,OACA,YACA,iBACA,OACA,YACA,uBACA,UACA,YAYJ,OATEhQ,OAAAC,eAAI8P,EAAA7P,UAA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","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, Optional, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Dir } from '@angular/cdk/bidi';\n\nexport interface IPageChangeEvent {\n  page: number;\n  maxPage: number;\n  pageSize: number;\n  total: number;\n  fromRow: number;\n  toRow: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-paging-bar',\n  templateUrl: './paging-bar.component.html',\n  styleUrls: ['./paging-bar.component.scss' ],\n})\nexport class TdPagingBarComponent implements OnInit {\n\n  private _pageSize: number = 50;\n  private _total: number = 0;\n  private _page: number = 1;\n  private _fromRow: number = 1;\n  private _toRow: number = 1;\n  private _initialized: boolean = false;\n  private _pageLinks: number[] = [];\n  private _pageLinkCount: number = 0;\n  // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n  private _hitEnd: boolean = false;\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n  private _hitStart: boolean = false;\n\n  /**\n   * firstLast?: boolean\n   * Shows or hides the first and last page buttons of the paging bar. Defaults to 'false'\n   */\n  @Input('firstLast') firstLast: boolean = true;\n\n  /**\n   * initialPage?: number\n   * Sets starting page for the paging bar. Defaults to '1'\n   */\n  @Input('initialPage') initialPage: number = 1;\n\n  /**\n   * pageLinkCount?: number\n   * Amount of page navigation links for the paging bar. Defaults to '0'\n   */\n  @Input('pageLinkCount')\n  set pageLinkCount(pageLinkCount: number) {\n    this._pageLinkCount = coerceNumberProperty(pageLinkCount);\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageLinkCount(): number {\n    return this._pageLinkCount;\n  }\n\n  /**\n   * pageSize?: number\n   * Selected page size for the pagination. Defaults 50.\n   */\n  @Input('pageSize')\n  set pageSize(pageSize: number) {\n    this._pageSize = coerceNumberProperty(pageSize);\n    this._page = 1;\n    if (this._initialized) {\n      this._handleOnChange();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  /**\n   * total: number\n   * Total rows for the pagination.\n   */\n  @Input('total')\n  set total(total: number) {\n    this._total = coerceNumberProperty(total);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get total(): number {\n    return this._total;\n  }\n\n  /**\n   * pageLinks: number[]\n   * Returns the pageLinks in an array\n   */\n  get pageLinks(): number[] {\n    return this._pageLinks;\n  }\n\n  /**\n   * range: string\n   * Returns the range of the rows.\n   */\n  get range(): string {\n    return `${!this._toRow ? 0 : this._fromRow}-${this._toRow}`;\n  }\n\n  /**\n   * page: number\n   * Returns the current page.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * page: number\n   * Returns the max page for the current pageSize and total.\n   */\n  get maxPage(): number {\n    return Math.ceil(this._total / this._pageSize);\n  }\n\n  /**\n   * change?: function\n   * Method to be executed when page size changes or any button is clicked in the paging bar.\n   * Emits an [IPageChangeEvent] implemented object.\n   */\n  @Output('change') onChange: EventEmitter<IPageChangeEvent> = new EventEmitter<IPageChangeEvent>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._page = coerceNumberProperty(this.initialPage);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._initialized = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * navigateToPage?: function\n   * Navigates to a specific valid page. Returns 'true' if page is valid, else 'false'.\n   */\n  navigateToPage(page: number): boolean {\n    if (page === 1 || (page >= 1 && page <= this.maxPage)) {\n      this._page = coerceNumberProperty(Math.floor(page));\n      this._handleOnChange();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * firstPage?: function\n   * Navigates to the first page. Returns 'true' if page is valid, else 'false'.\n   */\n  firstPage(): boolean {\n    return this.navigateToPage(1);\n  }\n\n  /**\n   * prevPage?: function\n   * Navigates to the previous page. Returns 'true' if page is valid, else 'false'.\n   */\n  prevPage(): boolean {\n    return this.navigateToPage(this._page - 1);\n  }\n\n  /**\n   * nextPage?: function\n   * Navigates to the next page. Returns 'true' if page is valid, else 'false'.\n   */\n  nextPage(): boolean {\n    return this.navigateToPage(this._page + 1);\n  }\n\n  /**\n   * lastPage?: function\n   * Navigates to the last page. Returns 'true' if page is valid, else 'false'.\n   */\n  lastPage(): boolean {\n    return this.navigateToPage(this.maxPage);\n  }\n\n  isMinPage(): boolean {\n    return this._page <= 1;\n  }\n\n  isMaxPage(): boolean {\n    return this._page >= this.maxPage;\n  }\n\n  private _calculateRows(): void {\n    let top: number = (this._pageSize * this._page);\n    this._fromRow = (this._pageSize * (this._page - 1)) + 1;\n    this._toRow = this._total > top ? top : this._total;\n  }\n\n  /**\n   * _calculatePageLinks?: function\n   * Calculates the page links that should be shown to the user based on the current state of the paginator\n   */\n  private _calculatePageLinks(): void {\n    // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n    if (this.isMaxPage()) {\n      this._hitEnd = true;\n      this._hitStart = false;\n    }\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n    if (this.isMinPage()) {\n      this._hitEnd = false;\n      this._hitStart = true;\n    }\n    // If the pageLinkCount goes above max possible pages based on perpage setting then reset it to maxPage\n    let actualPageLinkCount: number = this.pageLinkCount;\n    if (this.pageLinkCount > this.maxPage) {\n      actualPageLinkCount = this.maxPage;\n    }\n    // reset the pageLinks array\n    this._pageLinks = [];\n    // fill in the array with the pageLinks based on the current selected page\n    let middlePageLinks: number = Math.floor(actualPageLinkCount / 2);\n    for (let x: number = 0; x < actualPageLinkCount; x++) {\n      // don't go past the maxPage in the pageLinks\n      // have to handle even and odd pageLinkCounts differently so can still lead to the next numbers\n      if ((actualPageLinkCount % 2 === 0 && (this.page + middlePageLinks > this.maxPage)) ||\n          (actualPageLinkCount % 2 !== 0 && (this.page + middlePageLinks >= this.maxPage))) {\n        this._pageLinks[x] = this.maxPage - (actualPageLinkCount - (x + 1));\n      // if the selected page is after the middle then set that page as middle and get the correct balance on left and right\n      // special handling when there are only 2 pageLinks to just drop to next if block so can lead to next numbers when moving to right\n      // when moving to the left then go into this block\n      } else if ((actualPageLinkCount > 2 || actualPageLinkCount <= 2 && this._hitEnd) && (this.page - middlePageLinks) > 0) {\n        this._pageLinks[x] = (this.page - middlePageLinks) + x;\n      // if the selected page is before the middle then set the pages based on the x index leading up to and after selected page\n      } else if ((this.page - middlePageLinks) <= 0) {\n        this._pageLinks[x] = x + 1;\n      // other wise just set the array in order starting from the selected page\n      } else {\n        this._pageLinks[x] = this.page + x;\n      }\n    }\n  }\n\n  private _handleOnChange(): void {\n    this._calculateRows();\n    this._calculatePageLinks();\n    let event: IPageChangeEvent = {\n      page: this._page,\n      maxPage: this.maxPage,\n      pageSize: this._pageSize,\n      total: this._total,\n      fromRow: this._fromRow,\n      toRow: this._toRow,\n    };\n    this._changeDetectorRef.markForCheck();\n    this.onChange.emit(event);\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdPagingBarComponent } from './paging-bar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TdPagingBarComponent,\n  ],\n  exports: [\n    TdPagingBarComponent,\n  ],\n})\nexport class CovalentPagingModule {\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({selector: '[tdVirtualScrollRow]'})\nexport class TdVirtualScrollRowDirective extends TemplatePortalDirective {\n\n  constructor(templateRef: TemplateRef<any>,\n              viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n  \n}\n","import { Component, Directive, Input, Output, EventEmitter, ContentChild, AfterViewInit, ViewChild,\n         ChangeDetectionStrategy, ChangeDetectorRef, QueryList, ViewChildren, ElementRef, HostListener,\n         Renderer2, AfterViewChecked, OnDestroy, TrackByFunction } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\n\nconst TD_VIRTUAL_OFFSET: number = 2;\nconst SCROLL_DEBOUNCE: number = 200;\n\nexport interface ITdVirtualScrollBottomEvent {\n  lastRow: any;\n  lastIndex: number;\n}\n\n@Component({\n  selector: 'td-virtual-scroll-container',\n  styleUrls: ['./virtual-scroll-container.component.scss' ],\n  templateUrl: './virtual-scroll-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdVirtualScrollContainerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n\n  private _subs: Subscription[] = [];\n  private _bottom: Subject<any> = new Subject();\n  private _initialized: boolean = false;\n\n  private _totalHeight: number = 0;\n  private _hostHeight: number = 0;\n  private _scrollVerticalOffset: number = 0;\n  private _offsetTransform: SafeStyle;\n\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  private _data: any[];\n  private _virtualData: any[];\n\n  /**\n   * data: any[]\n   * List of items to virtually iterate on.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    if (this._initialized) {\n      this._calculateVirtualRows();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * bottom: function\n   * Method to be executed when user scrolled to the last item of the list.\n   * An [ITdVirtualScrollBottomEvent] event is emitted\n   */\n  @Output() bottom: EventEmitter<ITdVirtualScrollBottomEvent> = new EventEmitter<ITdVirtualScrollBottomEvent>();\n\n  @ViewChildren('rowElement') _rows: QueryList<ElementRef>;\n\n  @ContentChild(TdVirtualScrollRowDirective) _rowTemplate: TdVirtualScrollRowDirective;\n\n  get rowHeight(): number {\n    if (this._rows && this._rows.toArray()[0]) {\n      return this._rows.toArray()[0].nativeElement.getBoundingClientRect().height;\n    }\n    return 0;\n  }\n\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _domSanitizer: DomSanitizer,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this._subs.push(this._rows.changes.subscribe(() => {\n      this._calculateVirtualRows();\n    }));\n    this._initialized = true;\n    this._calculateVirtualRows();\n\n    this._subs.push(this._bottom.pipe(\n      debounceTime(SCROLL_DEBOUNCE),\n    ).subscribe(() => {\n      this.bottom.emit({\n        lastRow: this._data[this._data.length - 1],\n        lastIndex: this.toRow,\n      });\n    }));\n  }\n\n  ngAfterViewChecked(): void {\n    let newHostHeight: number = this._elementRef.nativeElement.getBoundingClientRect().height;\n    if (this._hostHeight !== newHostHeight) {\n      this._hostHeight = newHostHeight;\n      if (this._initialized) {\n        this._calculateVirtualRows();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * trackBy?: TrackByFunction\n   * This accepts the same trackBy function [ngFor] does.\n   * https://angular.io/api/core/TrackByFunction\n   */\n  @Input('trackBy') trackBy: TrackByFunction<any> =  (index: number, item: any) => {\n    return item;\n  }\n\n  @HostListener('scroll', ['$event'])\n  handleScroll(event: Event): void {\n    let element: HTMLElement = (<HTMLElement>event.target);\n    if (element) {\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._scrollVerticalOffset = verticalScroll;\n        if (this._initialized) {\n          this._calculateVirtualRows();\n        }\n      }\n      if (this._initialized) {\n        // check to see if bottom was hit to throw the bottom event\n        if ((this._data.length * this.rowHeight) - (verticalScroll + this._hostHeight) === 0) {\n          this._bottom.next();\n        }\n      }\n    }\n  }\n\n  /**\n   * Method to refresh and recalculate the virtual rows\n   * e.g. after changing the [data] content\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Method to scroll to a specific row of the list.\n   */\n  scrollTo(row: number): void {\n    this._elementRef.nativeElement.scrollTop = row * this.rowHeight;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the start of the list.\n   */\n  scrollToStart(): void {\n    this.scrollTo(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the end of the list.\n   */\n  scrollToEnd(): void {\n    this.scrollTo(this.totalHeight / this.rowHeight);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _calculateVirtualRows(): void {\n    if (this._data) {\n      this._totalHeight = this._data.length * this.rowHeight;\n      let fromRow: number = Math.floor((this._scrollVerticalOffset / this.rowHeight)) - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n      let range: number = Math.floor((this._hostHeight / this.rowHeight)) + (TD_VIRTUAL_OFFSET * 2);\n      let toRow: number = range + this.fromRow;\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    if (this._scrollVerticalOffset > (TD_VIRTUAL_OFFSET * this.rowHeight)) {\n      offset = this.fromRow * this.rowHeight;\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\nimport { TdVirtualScrollContainerComponent } from './virtual-scroll-container.component';\n\nconst TD_VIRTUAL_SCROLL: Type<any>[] = [\n  TdVirtualScrollRowDirective,\n  TdVirtualScrollContainerComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_VIRTUAL_SCROLL,\n  ],\n  exports: [\n    TD_VIRTUAL_SCROLL,\n  ],\n})\nexport class CovalentVirtualScrollModule {\n\n}\n","import { Component, Input, HostBinding, ChangeDetectionStrategy,\n         ViewChild, ElementRef, AfterContentInit } from '@angular/core';\n\nexport enum TdNotificationCountPositionY {\n  Top = 'top',\n  Bottom = 'bottom',\n  Center = 'center',\n}\n\nexport enum TdNotificationCountPositionX {\n  Before = 'before',\n  After = 'after',\n  Center = 'center',\n}\n\nexport const DEFAULT_NOTIFICATION_LIMIT: number = 99;\n\n@Component({\n  selector: 'td-notification-count',\n  styleUrls: ['./notification-count.component.scss' ],\n  templateUrl: './notification-count.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNotificationCountComponent implements AfterContentInit {\n\n  private _notifications: number | boolean = 0;\n  private _positionY: TdNotificationCountPositionY;\n  private _positionX: TdNotificationCountPositionX;\n  private _limit: number = DEFAULT_NOTIFICATION_LIMIT;\n\n  /**\n   * Div content wrapper of `ng-content`.\n   */\n  @ViewChild('content') content: ElementRef;\n\n  /**\n   * color?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\n   */\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\n\n  /**\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\n   * Sets the X position of the notification tip.\n   * Defaults to \"after\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionX(positionX: TdNotificationCountPositionX) {\n    this._positionX = positionX;\n  }\n  get positionX(): TdNotificationCountPositionX {\n    return this._positionX;\n  }\n\n  /**\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\n   * Sets the Y position of the notification tip.\n   * Defaults to \"top\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionY(positionY: TdNotificationCountPositionY) {\n    this._positionY = positionY;\n  }\n  get positionY(): TdNotificationCountPositionY {\n    return this._positionY;\n  }\n\n  /**\n   * notifications?: number | boolean\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\n   */\n  @Input()\n  set notifications(notifications: number | boolean) {\n    this._notifications = notifications;\n  }\n\n   /**\n    * limit?: number\n    * Limit for notification count. If the number of notifications is greater than limit, then + will be added. Defaults to 99.\n    */\n  @Input()\n  set limit(limit: number) {\n    this._limit = limit;\n  }\n\n  @HostBinding('class.td-notification-hidden')\n  get hideHost(): boolean {\n    return !this.show && !this._hasContent();\n  }\n\n  /**\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\n   * Makes the notification tip show without a count.\n   */\n  get noCount(): string | boolean {\n    return this._notifications === true;\n  }\n\n  /**\n   * Notification display string when a count is available.\n   * Anything over 99 gets set as 99+\n   */\n  get notificationsDisplay(): string {\n    if (this._notifications > this._limit) {\n      return `${this._limit}+`;\n    }\n    return this._notifications.toString();\n  }\n\n  /**\n   * Shows notification tip only when [notifications] is true or a positive integer.\n   */\n  get show(): boolean {\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\n  }\n\n  /**\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\n   */\n  ngAfterContentInit(): void {\n    if (!this._positionX) {\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\n    }\n    if (!this._positionY) {\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\n    }\n  }\n\n  /**\n   * Method to check if element has any kind of content (elements or text)\n   */\n  private _hasContent(): boolean {\n    if (this.content) {\n      let contentElement: HTMLElement = this.content.nativeElement;\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\n    }\n    return false;\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdNotificationCountComponent } from './notification-count.component';\n\nconst TD_NOTIFICATIONS: Type<any>[] = [\n  TdNotificationCountComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_NOTIFICATIONS,\n  ],\n  exports: [\n    TD_NOTIFICATIONS,\n  ],\n})\nexport class CovalentNotificationsModule {\n\n}\n","import { Directive } from '@angular/core';\nimport { HostListener, Host, Optional } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdAutoTrim]',\n})\nexport class TdAutoTrimDirective {\n\n  constructor(@Optional() @Host() private _model: NgModel) {}\n\n  /**\n   * Listens to host's (blur) event and trims value.\n   */\n  @HostListener('blur', ['$event'])\n  onBlur(event: Event): void {\n    if (this._model && this._model.value && typeof(this._model.value) === 'string') {\n      this._model.update.emit(this._model.value.trim());\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TdTimeAgoPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((startTime - time.getTime()) / 1000);\n\n    if (diff < 2) {\n      return '1 second ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' seconds ago';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 minute ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' minutes ago';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 hour ago';\n    }\n    if (diff < 24) {\n      return Math.floor(diff) + ' hours ago';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return '1 day ago';\n    }\n    if (diff < 30) {\n      return Math.floor(diff) + ' days ago';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return '1 month ago';\n    }\n    if (diff < 12) {\n      return Math.floor(diff) + ' months ago';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return '1 year ago';\n    } else {\n      return Math.floor(diff) + ' years ago';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeDifference',\n})\n\nexport class TdTimeDifferencePipe implements PipeTransform {\n  transform(start: any, end?: any): string {\n    let startTime: Date = new Date(start);\n    let endTime: Date;\n\n    if (end !== undefined) {\n      endTime = new Date(end);\n    } else {\n      endTime = new Date();\n    }\n\n    if (!startTime.getTime() || !endTime.getTime()) {\n      return 'Invalid Date';\n    }\n\n    let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\n\n    let days: number = Math.floor(diff / (60 * 60 * 24));\n    diff = diff - (days * (60 * 60 * 24));\n\n    let hours: number = Math.floor(diff / (60 * 60));\n    diff = diff - (hours * (60 * 60));\n\n    let minutes: number = Math.floor(diff / (60));\n    diff -= minutes * (60);\n\n    let seconds: number = diff;\n\n    let pad: string = '00';\n\n    let daysFormatted: string = '';\n\n    if (days > 0 && days < 2) {\n      daysFormatted = ' day - ';\n    } else if (days > 1) {\n      daysFormatted = ' days - ' ;\n    }\n\n    return (days > 0 ? days + daysFormatted : daysFormatted) +\n     pad.substring(0, pad.length - (hours + '').length) + hours + ':' +\n     pad.substring(0, pad.length - (minutes + '').length) + minutes + ':' +\n     pad.substring(0, pad.length - (seconds + '').length) + seconds;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeUntil',\n})\nexport class TdTimeUntilPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((time.getTime() - startTime) / 1000);\n\n    if (diff < 2) {\n      return 'in 1 second';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' seconds';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 minute';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' minutes';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 hour';\n    }\n    if (diff < 24) {\n      return 'in ' + Math.floor(diff) + ' hours';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return 'in 1 day';\n    }\n    if (diff < 30) {\n      return 'in ' + Math.floor(diff) + ' days';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return 'in 1 month';\n    }\n    if (diff < 12) {\n      return 'in ' + Math.floor(diff) + ' months';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return 'in 1 year';\n    } else {\n      return 'in ' + Math.floor(diff) + ' years';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes',\n})\n\nexport class TdBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1024;\n    let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimalBytes',\n})\n\nexport class TdDecimalBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Pipe({\n  name: 'digits',\n})\n\nexport class TdDigitsPipe implements PipeTransform {\n\n  private _decimalPipe: DecimalPipe;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {\n    this._decimalPipe = new DecimalPipe(this._locale);\n  }\n\n  /* `digits` needs to be type `digits: any` or TypeScript complains */\n  transform(digits: any, precision: number = 1): string {\n    if (digits === 0) {\n      return '0';\n    } else if (isNaN(parseInt(digits, 10))) {\n      /* If not a valid number, return the value */\n      return digits;\n    } else if (digits < 1) {\n      return this._decimalPipe.transform(digits.toFixed(precision));\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];\n    let i: number = Math.floor(Math.log(digits) / Math.log(k));\n    let size: string = sizes[i];\n    return this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\n\nexport class TdTruncatePipe implements PipeTransform {\n  transform(text: any, length: number): string {\n    if (typeof text !== 'string') {\n      return '';\n    }\n\n    // Truncate\n    let truncated: string = text.substr(0, length);\n\n    if (text.length > length) {\n      if (truncated.lastIndexOf(' ') > 0) {\n        truncated = truncated.trim();\n      }\n\n      truncated += 'â¦';\n    }\n\n    return truncated;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, RoutesRecognized } from '@angular/router';\n\nimport { filter, pairwise } from 'rxjs/operators';\n\n@Injectable()\nexport class RouterPathService {\nprivate static _previousRoute: string = '/';\n  constructor(private _router: Router) {\n    this._router.events.pipe(\n      filter((e: any) => e instanceof RoutesRecognized),\n      pairwise(),\n    ).subscribe((e: any[]) => {\n      RouterPathService._previousRoute = e[0].urlAfterRedirects;\n    });\n  }\n\n  /*\n  * Utility function to get the route the user previously went to\n  * good for use in a \"back button\"\n  */\n  getPreviousRoute(): string {\n    return RouterPathService._previousRoute;\n  }\n}\n","/*\n * Copyright (C) 2016-2017 by Teradata Corporation. All rights reserved.\n * TERADATA CORPORATION CONFIDENTIAL AND TRADE SECRET\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IconService {\n\n  private _icons: string[] = [\n    'access_alarm',\n    'access_alarms',\n    'access_time',\n    'accessibility',\n    'account_balance',\n    'account_balance_wallet',\n    'account_box',\n    'account_circle',\n    'add',\n    'add_alarm',\n    'add_box',\n    'add_circle',\n    'add_circle_outline',\n    'add_shopping_cart',\n    'add_to_photos',\n    'adjust',\n    'alarm',\n    'alarm_add',\n    'alarm_off',\n    'alarm_on',\n    'album',\n    'android',\n    'announcement',\n    'apps',\n    'archive',\n    'arrow_back',\n    'arrow_drop_down',\n    'arrow_drop_down_circle',\n    'arrow_drop_up',\n    'arrow_forward',\n    'aspect_ratio',\n    'assessment',\n    'assignment',\n    'assignment_ind',\n    'assignment_late',\n    'assignment_return',\n    'assignment_returned',\n    'assignment_turned_in',\n    'assistant_photo',\n    'attach_file',\n    'attach_money',\n    'attachment',\n    'audiotrack',\n    'autorenew',\n    'av_timer',\n    'backspace',\n    'backup',\n    'battery_alert',\n    'battery_charging_full',\n    'battery_full',\n    'battery_std',\n    'battery_unknown',\n    'beenhere',\n    'block',\n    'bluetooth',\n    'bluetooth_audio',\n    'bluetooth_connected',\n    'bluetooth_disabled',\n    'bluetooth_searching',\n    'blur_circular',\n    'blur_linear',\n    'blur_off',\n    'blur_on',\n    'book',\n    'bookmark',\n    'bookmark_border',\n    'border_all',\n    'border_bottom',\n    'border_clear',\n    'border_color',\n    'border_horizontal',\n    'border_inner',\n    'border_left',\n    'border_outer',\n    'border_right',\n    'border_style',\n    'border_top',\n    'border_vertical',\n    'brightness_1',\n    'brightness_2',\n    'brightness_3',\n    'brightness_4',\n    'brightness_5',\n    'brightness_6',\n    'brightness_7',\n    'brightness_auto',\n    'brightness_high',\n    'brightness_low',\n    'brightness_medium',\n    'broken_image',\n    'brush',\n    'bug_report',\n    'build',\n    'business',\n    'cached',\n    'cake',\n    'call',\n    'call_end',\n    'call_made',\n    'call_merge',\n    'call_missed',\n    'call_received',\n    'call_split',\n    'camera',\n    'camera_alt',\n    'camera_front',\n    'camera_rear',\n    'camera_roll',\n    'cancel',\n    'cast',\n    'cast_connected',\n    'center_focus_strong',\n    'center_focus_weak',\n    'chat',\n    'check',\n    'check_box',\n    'check_box_outline_blank',\n    'check_circle',\n    'chevron_left',\n    'chevron_right',\n    'class',\n    'clear',\n    'clear_all',\n    'close',\n    'closed_caption',\n    'cloud',\n    'cloud_circle',\n    'cloud_done',\n    'cloud_download',\n    'cloud_off',\n    'cloud_queue',\n    'cloud_upload',\n    'collections',\n    'collections_bookmark',\n    'color_lens',\n    'colorize',\n    'comment',\n    'compare',\n    'computer',\n    'confirmation_number',\n    'contact_phone',\n    'contacts',\n    'content_copy',\n    'content_cut',\n    'content_paste',\n    'control_point',\n    'control_point_duplicate',\n    'create',\n    'credit_card',\n    'crop',\n    'crop_16_9',\n    'crop_3_2',\n    'crop_5_4',\n    'crop_7_5',\n    'crop_din',\n    'crop_free',\n    'crop_landscape',\n    'crop_original',\n    'crop_portrait',\n    'crop_square',\n    'dashboard',\n    'data_usage',\n    'dehaze',\n    'delete',\n    'description',\n    'desktop_mac',\n    'desktop_windows',\n    'details',\n    'developer_board',\n    'developer_mode',\n    'device_hub',\n    'devices',\n    'dialer_sip',\n    'dialpad',\n    'directions',\n    'directions_bike',\n    'directions_boat',\n    'directions_bus',\n    'directions_car',\n    'directions_railway',\n    'directions_run',\n    'directions_subway',\n    'directions_transit',\n    'directions_walk',\n    'disc_full',\n    'dns',\n    'do_not_disturb',\n    'do_not_disturb_alt',\n    'dock',\n    'domain',\n    'done',\n    'done_all',\n    'drafts',\n    'drive_eta',\n    'dvr',\n    'edit',\n    'eject',\n    'email',\n    'equalizer',\n    'error',\n    'error_outline',\n    'event',\n    'event_available',\n    'event_busy',\n    'event_note',\n    'event_seat',\n    'exit_to_app',\n    'expand_less',\n    'expand_more',\n    'explicit',\n    'explore',\n    'exposure',\n    'exposure_neg_1',\n    'exposure_neg_2',\n    'exposure_plus_1',\n    'exposure_plus_2',\n    'exposure_zero',\n    'extension',\n    'face',\n    'fast_forward',\n    'fast_rewind',\n    'favorite',\n    'favorite_border',\n    'feedback',\n    'file_download',\n    'file_upload',\n    'filter',\n    'filter_1',\n    'filter_2',\n    'filter_3',\n    'filter_4',\n    'filter_5',\n    'filter_6',\n    'filter_7',\n    'filter_8',\n    'filter_9',\n    'filter_9_plus',\n    'filter_b_and_w',\n    'filter_center_focus',\n    'filter_drama',\n    'filter_frames',\n    'filter_hdr',\n    'filter_list',\n    'filter_none',\n    'filter_tilt_shift',\n    'filter_vintage',\n    'find_in_page',\n    'find_replace',\n    'flag',\n    'flare',\n    'flash_auto',\n    'flash_off',\n    'flash_on',\n    'flight',\n    'flight_land',\n    'flight_takeoff',\n    'flip',\n    'flip_to_back',\n    'flip_to_front',\n    'folder',\n    'folder_open',\n    'folder_shared',\n    'folder_special',\n    'font_download',\n    'format_align_center',\n    'format_align_justify',\n    'format_align_left',\n    'format_align_right',\n    'format_bold',\n    'format_clear',\n    'format_color_fill',\n    'format_color_reset',\n    'format_color_text',\n    'format_indent_decrease',\n    'format_indent_increase',\n    'format_italic',\n    'format_line_spacing',\n    'format_list_bulleted',\n    'format_list_numbered',\n    'format_paint',\n    'format_quote',\n    'format_size',\n    'format_strikethrough',\n    'format_textdirection_l_to_r',\n    'format_textdirection_r_to_l',\n    'format_underlined',\n    'forum',\n    'forward',\n    'forward_10',\n    'forward_30',\n    'forward_5',\n    'fullscreen',\n    'fullscreen_exit',\n    'functions',\n    'gamepad',\n    'games',\n    'gesture',\n    'get_app',\n    'gif',\n    'gps_fixed',\n    'gps_not_fixed',\n    'gps_off',\n    'grade',\n    'gradient',\n    'grain',\n    'graphic_eq',\n    'grid_off',\n    'grid_on',\n    'group',\n    'group_add',\n    'group_work',\n    'hd',\n    'hdr_off',\n    'hdr_on',\n    'hdr_strong',\n    'hdr_weak',\n    'headset',\n    'headset_mic',\n    'healing',\n    'hearing',\n    'help',\n    'help_outline',\n    'high_quality',\n    'highlight_off',\n    'history',\n    'home',\n    'hotel',\n    'hourglass_empty',\n    'hourglass_full',\n    'http',\n    'https',\n    'image',\n    'image_aspect_ratio',\n    'import_export',\n    'inbox',\n    'indeterminate_check_box',\n    'info',\n    'info_outline',\n    'input',\n    'insert_chart',\n    'insert_comment',\n    'insert_drive_file',\n    'insert_emoticon',\n    'insert_invitation',\n    'insert_link',\n    'insert_photo',\n    'invert_colors',\n    'invert_colors_off',\n    'iso',\n    'keyboard',\n    'keyboard_arrow_down',\n    'keyboard_arrow_left',\n    'keyboard_arrow_right',\n    'keyboard_arrow_up',\n    'keyboard_backspace',\n    'keyboard_capslock',\n    'keyboard_hide',\n    'keyboard_return',\n    'keyboard_tab',\n    'keyboard_voice',\n    'label',\n    'label_outline',\n    'landscape',\n    'language',\n    'laptop',\n    'laptop_chromebook',\n    'laptop_mac',\n    'laptop_windows',\n    'launch',\n    'layers',\n    'layers_clear',\n    'leak_add',\n    'leak_remove',\n    'lens',\n    'library_add',\n    'library_books',\n    'library_music',\n    'link',\n    'list',\n    'live_help',\n    'live_tv',\n    'local_activity',\n    'local_airport',\n    'local_atm',\n    'local_bar',\n    'local_cafe',\n    'local_car_wash',\n    'local_convenience_store',\n    'local_dining',\n    'local_drink',\n    'local_florist',\n    'local_gas_station',\n    'local_grocery_store',\n    'local_hospital',\n    'local_hotel',\n    'local_laundry_service',\n    'local_library',\n    'local_mall',\n    'local_movies',\n    'local_offer',\n    'local_parking',\n    'local_pharmacy',\n    'local_phone',\n    'local_pizza',\n    'local_play',\n    'local_post_office',\n    'local_printshop',\n    'local_see',\n    'local_shipping',\n    'local_taxi',\n    'location_city',\n    'location_disabled',\n    'location_off',\n    'location_on',\n    'location_searching',\n    'lock',\n    'lock_open',\n    'lock_outline',\n    'looks',\n    'looks_3',\n    'looks_4',\n    'looks_5',\n    'looks_6',\n    'looks_one',\n    'looks_two',\n    'loop',\n    'loupe',\n    'loyalty',\n    'mail',\n    'map',\n    'markunread',\n    'markunread_mailbox',\n    'memory',\n    'menu',\n    'merge_type',\n    'message',\n    'mic',\n    'mic_none',\n    'mic_off',\n    'mms',\n    'mode_comment',\n    'mode_edit',\n    'money_off',\n    'monochrome_photos',\n    'mood',\n    'mood_bad',\n    'more',\n    'more_horiz',\n    'more_vert',\n    'mouse',\n    'movie',\n    'movie_creation',\n    'music_note',\n    'my_library_add',\n    'my_library_books',\n    'my_library_music',\n    'my_location',\n    'nature',\n    'nature_people',\n    'navigate_before',\n    'navigate_next',\n    'navigation',\n    'network_cell',\n    'network_locked',\n    'network_wifi',\n    'new_releases',\n    'nfc',\n    'no_sim',\n    'not_interested',\n    'note_add',\n    'notifications',\n    'notifications_active',\n    'notifications_none',\n    'notifications_off',\n    'notifications_paused',\n    'offline_pin',\n    'ondemand_video',\n    'open_in_browser',\n    'open_in_new',\n    'open_with',\n    'pages',\n    'pageview',\n    'palette',\n    'panorama',\n    'panorama_fish_eye',\n    'panorama_horizontal',\n    'panorama_vertical',\n    'panorama_wide_angle',\n    'party_mode',\n    'pause',\n    'pause_circle_filled',\n    'pause_circle_outline',\n    'payment',\n    'people',\n    'people_outline',\n    'perm_camera_mic',\n    'perm_contact_calendar',\n    'perm_data_setting',\n    'perm_device_information',\n    'perm_identity',\n    'perm_media',\n    'perm_phone_msg',\n    'perm_scan_wifi',\n    'person',\n    'person_add',\n    'person_outline',\n    'person_pin',\n    'personal_video',\n    'phone',\n    'phone_android',\n    'phone_bluetooth_speaker',\n    'phone_forwarded',\n    'phone_in_talk',\n    'phone_iphone',\n    'phone_locked',\n    'phone_missed',\n    'phone_paused',\n    'phonelink',\n    'phonelink_erase',\n    'phonelink_lock',\n    'phonelink_off',\n    'phonelink_ring',\n    'phonelink_setup',\n    'photo',\n    'photo_album',\n    'photo_camera',\n    'photo_library',\n    'photo_size_select_actual',\n    'photo_size_select_large',\n    'photo_size_select_small',\n    'picture_as_pdf',\n    'picture_in_picture',\n    'pin_drop',\n    'place',\n    'play_arrow',\n    'play_circle_filled',\n    'play_circle_outline',\n    'play_for_work',\n    'play_shopping_bag',\n    'playlist_add',\n    'plus_one',\n    'poll',\n    'polymer',\n    'portable_wifi_off',\n    'portrait',\n    'power',\n    'power_input',\n    'power_settings_new',\n    'present_to_all',\n    'print',\n    'public',\n    'publish',\n    'query_builder',\n    'question_answer',\n    'queue',\n    'queue_music',\n    'radio',\n    'radio_button_checked',\n    'radio_button_unchecked',\n    'rate_review',\n    'receipt',\n    'recent_actors',\n    'redeem',\n    'redo',\n    'refresh',\n    'remove',\n    'remove_circle',\n    'remove_circle_outline',\n    'remove_red_eye',\n    'reorder',\n    'repeat',\n    'repeat_one',\n    'replay',\n    'replay_10',\n    'replay_30',\n    'replay_5',\n    'reply',\n    'reply_all',\n    'report',\n    'report_problem',\n    'restaurant_menu',\n    'restore',\n    'ring_volume',\n    'room',\n    'rotate_90_degrees_ccw',\n    'rotate_left',\n    'rotate_right',\n    'router',\n    'satellite',\n    'save',\n    'scanner',\n    'schedule',\n    'school',\n    'screen_lock_landscape',\n    'screen_lock_portrait',\n    'screen_lock_rotation',\n    'screen_rotation',\n    'sd_card',\n    'sd_storage',\n    'search',\n    'security',\n    'select_all',\n    'send',\n    'settings',\n    'settings_applications',\n    'settings_backup_restore',\n    'settings_bluetooth',\n    'settings_brightness',\n    'settings_cell',\n    'settings_ethernet',\n    'settings_input_antenna',\n    'settings_input_component',\n    'settings_input_composite',\n    'settings_input_hdmi',\n    'settings_input_svideo',\n    'settings_overscan',\n    'settings_phone',\n    'settings_power',\n    'settings_remote',\n    'settings_system_daydream',\n    'settings_voice',\n    'share',\n    'shop',\n    'shop_two',\n    'shopping_basket',\n    'shopping_cart',\n    'shuffle',\n    'signal_cellular_4_bar',\n    'signal_cellular_connected_no_internet_4_bar',\n    'signal_cellular_no_sim',\n    'signal_cellular_null',\n    'signal_cellular_off',\n    'signal_wifi_4_bar',\n    'signal_wifi_4_bar_lock',\n    'signal_wifi_off',\n    'sim_card',\n    'sim_card_alert',\n    'skip_next',\n    'skip_previous',\n    'slideshow',\n    'smartphone',\n    'sms',\n    'sms_failed',\n    'snooze',\n    'sort',\n    'sort_by_alpha',\n    'space_bar',\n    'speaker',\n    'speaker_group',\n    'speaker_notes',\n    'speaker_phone',\n    'spellcheck',\n    'star',\n    'star_border',\n    'star_half',\n    'stars',\n    'stay_current_landscape',\n    'stay_current_portrait',\n    'stay_primary_landscape',\n    'stay_primary_portrait',\n    'stop',\n    'storage',\n    'store',\n    'store_mall_directory',\n    'straighten',\n    'strikethrough_s',\n    'style',\n    'subject',\n    'subtitles',\n    'supervisor_account',\n    'surround_sound',\n    'swap_calls',\n    'swap_horiz',\n    'swap_vert',\n    'swap_vertical_circle',\n    'switch_camera',\n    'switch_video',\n    'sync',\n    'sync_disabled',\n    'sync_problem',\n    'system_update',\n    'system_update_alt',\n    'tab',\n    'tab_unselected',\n    'tablet',\n    'tablet_android',\n    'tablet_mac',\n    'tag_faces',\n    'tap_and_play',\n    'terrain',\n    'text_format',\n    'textsms',\n    'texture',\n    'theaters',\n    'thumb_down',\n    'thumb_up',\n    'thumbs_up_down',\n    'time_to_leave',\n    'timelapse',\n    'timer',\n    'timer_10',\n    'timer_3',\n    'timer_off',\n    'toc',\n    'today',\n    'toll',\n    'tonality',\n    'toys',\n    'track_changes',\n    'traffic',\n    'transform',\n    'translate',\n    'trending_down',\n    'trending_flat',\n    'trending_up',\n    'tune',\n    'turned_in',\n    'turned_in_not',\n    'tv',\n    'undo',\n    'unfold_less',\n    'unfold_more',\n    'usb',\n    'verified_user',\n    'vertical_align_bottom',\n    'vertical_align_center',\n    'vertical_align_top',\n    'vibration',\n    'video_library',\n    'videocam',\n    'videocam_off',\n    'view_agenda',\n    'view_array',\n    'view_carousel',\n    'view_column',\n    'view_comfy',\n    'view_compact',\n    'view_day',\n    'view_headline',\n    'view_list',\n    'view_module',\n    'view_quilt',\n    'view_stream',\n    'view_week',\n    'vignette',\n    'visibility',\n    'visibility_off',\n    'voice_chat',\n    'voicemail',\n    'volume_down',\n    'volume_mute',\n    'volume_off',\n    'volume_up',\n    'vpn_key',\n    'vpn_lock',\n    'wallpaper',\n    'warning',\n    'watch',\n    'wb_auto',\n    'wb_cloudy',\n    'wb_incandescent',\n    'wb_iridescent',\n    'wb_sunny',\n    'wc',\n    'web',\n    'whatshot',\n    'widgets',\n    'wifi',\n    'wifi_lock',\n    'wifi_tethering',\n    'work',\n    'wrap_text',\n    'youtube_searched_for',\n    'zoom_in',\n    'zoom_out',\n  ];\n\n  get icons(): string[] {\n    return this._icons;\n  }\n\n  filter(query: string): string[] {\n    return this.icons.filter((el: string) => {\n      return el.toLowerCase().indexOf(query ? query.toLowerCase() : '') > -1;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * FORMS\n */\n\n// Form Directives\nimport { TdAutoTrimDirective } from './forms/auto-trim/auto-trim.directive';\n\nconst TD_FORMS: Type<any>[] = [\n  TdAutoTrimDirective,\n];\n\n// Validators\nconst TD_VALIDATORS: Type<any>[] = [\n];\n\n/**\n * PIPES\n */\nimport { TdTimeAgoPipe } from './pipes/time-ago/time-ago.pipe';\nimport { TdTimeDifferencePipe } from './pipes/time-difference/time-difference.pipe';\nimport { TdTimeUntilPipe } from './pipes/time-until/time-until.pipe';\nimport { TdBytesPipe } from './pipes/bytes/bytes.pipe';\nimport { TdDecimalBytesPipe } from './pipes/decimal-bytes/decimal-bytes.pipe';\nimport { TdDigitsPipe } from './pipes/digits/digits.pipe';\nimport { TdTruncatePipe } from './pipes/truncate/truncate.pipe';\n\nconst TD_PIPES: Type<any>[] = [\n  TdTimeAgoPipe,\n  TdTimeDifferencePipe,\n  TdTimeUntilPipe,\n  TdBytesPipe,\n  TdDecimalBytesPipe,\n  TdDigitsPipe,\n  TdTruncatePipe,\n];\n\n/**\n * Services\n */\n\nimport { RouterPathService } from './services/router-path.service';\nimport { IconService } from './services/icon.service';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n  ],\n  declarations: [\n    TD_FORMS,\n    TD_PIPES,\n    TD_VALIDATORS,\n  ],\n  exports: [\n    FormsModule,\n    CommonModule,\n    TD_FORMS,\n    TD_PIPES,\n    TD_VALIDATORS,\n  ],\n  providers: [\n    RouterPathService,\n    IconService,\n  ],\n})\nexport class CovalentCommonModule {\n\n}\n","import {\n  trigger, state, style, transition, animate, AnimationTriggerMetadata,\n  query, animateChild, group,\n} from '@angular/animations';\n\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IRotateAnimation extends IAnimationOptions {\n  degrees?: number;\n  ease?: string;\n}\n\n/**\n * const tdRotateAnimation\n *\n * Parameter Options:\n * * degressStart: Degrees of rotation that the dom object will end up in during the \"false\" state\n * * degreesEnd: Degrees of rotation that the dom object will end up in during the \"true\" state\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerates and decelerates. Defaults to ease-in.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a rotation animation.\n *\n * usage: [@tdRotate]=\"{ value: true | false, params: { degreesEnd: 90 }}\"\n */\n\nexport const tdRotateAnimation: AnimationTriggerMetadata = trigger('tdRotate', [\n  state('0', style({\n    transform: 'rotate({{ degressStart }}deg)',\n  }), { params: { degressStart: 0 }}),\n  state('1',  style({\n    transform: 'rotate({{ degreesEnd }}deg)',\n  }), { params: { degreesEnd: 180 }}),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}'),\n    ]),\n  ], { params: { duration: 250, delay: '0', ease: 'ease-in' }}),\n]);\n","import { trigger, state, style, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface ICollapseAnimation extends IAnimationOptions {\n   easeOnClose?: string;\n   easeOnOpen?: string;\n}\n\n/**\n * const tdCollapseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnClose: Animation accelerates and decelerates when closing. Defaults to ease-in.\n * * easeOnOpen: Animation accelerates and decelerates when opening. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a collapse/expand animation.\n *\n * usage: [@tdCollapse]=\"{ value: true | false, params: { duration: 500 }}\"\n */\nexport const tdCollapseAnimation: AnimationTriggerMetadata = trigger('tdCollapse', [\n  state('1', style({\n    height: '0',\n    overflow: 'hidden',\n  })),\n  state('0',  style({\n    height: AUTO_STYLE,\n    overflow: AUTO_STYLE,\n  })),\n  transition('0 => 1', [\n    style({\n      overflow: 'hidden',\n      height: AUTO_STYLE,\n    }),\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}', style({\n        height: '0',\n        overflow: 'hidden',\n      })),\n    ]),\n  ], { params: { duration: 150, delay: '0', ease: 'ease-in' }}),\n  transition('1 => 0', [\n    style({\n      height: '0',\n      overflow: 'hidden',\n    }),\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}', style({\n        overflow: 'hidden',\n        height: AUTO_STYLE,\n      })),\n    ]),\n  ], { params: { duration: 150, delay: '0', ease: 'ease-out' }}),\n]);\n","import { trigger, state, style, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group  } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IFadeInOutAnimation extends IAnimationOptions {\n  easeOnIn?: string;\n  easeOnOut?: string;\n}\n\n/**\n * const tdFadeInOutAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnIn: Animation accelerates and decelerates when fading in. Defaults to ease-in.\n * * easeOnOut: Animation accelerates and decelerates when fading out. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a fade animation.\n *\n * usage: [@tdFadeInOut]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFadeInOutAnimation: AnimationTriggerMetadata = trigger('tdFadeInOut', [\n    state('0', style({\n      opacity: '0',\n      visibility: 'hidden',\n    })),\n    state('1',  style({\n      opacity: AUTO_STYLE,\n      visibility: AUTO_STYLE,\n    })),\n    transition('0 => 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnIn }}'),\n      ]),\n    ], { params: { duration: 150, delay: '0', easeOnIn: 'ease-in' }}),\n    transition('1 => 0', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnOut }}'),\n    ]),\n  ], { params: { duration: 150, delay: '0', easeOnOut: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdBounceAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a bounce animation.\n *\n * usage: [@tdBounce]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdBounceAnimation: AnimationTriggerMetadata = trigger('tdBounce', [\n  state('0', style({\n    transform: 'translate3d(0, 0, 0)',\n  })),\n  state('1',  style({\n    transform: 'translate3d(0, 0, 0)',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.2}),\n        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.4}),\n        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.43}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.53}),\n        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -15px, 0)', offset: .7}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.8}),\n        style({transform: 'translate3d(0, -4px, 0)', offset: .9}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 1.0}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdFlashAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a flash animation.\n *\n * usage: [@tdFlash]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFlashAnimation: AnimationTriggerMetadata = trigger('tdFlash', [\n  state('0', style({\n    opacity: 1,\n  })),\n  state('1',  style({\n    opacity: 1,\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({opacity: 1, offset: 0}),\n        style({opacity: 0, offset: 0.25}),\n        style({opacity: 1, offset: 0.5}),\n        style({opacity: 0, offset: 0.75}),\n        style({opacity: 1, offset: 1.0}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdHeadshakeAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a headshake animation.\n *\n * usage: [@tdHeadshake]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdHeadshakeAnimation: AnimationTriggerMetadata = trigger('tdHeadshake', [\n  state('0', style({\n    transform: 'translateX(0)',\n  })),\n  state('1',  style({\n    transform: 'translateX(0)',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({transform: 'translateX(0)', offset: 0}),\n        style({transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065}),\n        style({transform: 'translateX(5px) rotateY(7deg)', offset: 0.185}),\n        style({transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315}),\n        style({transform: 'translateX(2px) rotateY(3deg)', offset: 0.435}),\n        style({transform: 'translateX(0)', offset: 0.50}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdJelloAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a jello animation.\n *\n * usage: [@tdJello]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdJelloAnimation: AnimationTriggerMetadata = trigger('tdJello', [\n  state('0', style({\n    transform: 'none',\n  })),\n  state('1',  style({\n    transform: 'none',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({transform: 'none', offset: 0}),\n        style({transform: 'none', offset: 0.011}),\n        style({transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.222}),\n        style({transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.333}),\n        style({transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.444}),\n        style({transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.555}),\n        style({transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.666}),\n        style({transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777}),\n        style({transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.888}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdPulseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a pulse animation.\n *\n * usage: [@tdPulse]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdPulseAnimation: AnimationTriggerMetadata = trigger('tdPulse', [\n  state('0', style({\n    transform: 'scale3d(1, 1, 1)',\n  })),\n  state('1',  style({\n    transform: 'scale3d(1, 1, 1)',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n          style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),\n          style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),\n          style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),\n        ]),\n      ),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","import { ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nimport { Observable, Subject } from 'rxjs';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport interface IControlValueAccessor extends ControlValueAccessor {\n  value: any;\n  valueChanges: Observable<any>;\n  onChange: (_: any) => any;\n  onTouched: () => any;\n}\n\nexport interface IHasChangeDetectorRef {\n  _changeDetectorRef: ChangeDetectorRef;\n}\n\n/** Mixin to augment a component with ngModel support. */\nexport function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>\n                (base: T, initialValue?: any): Constructor<IControlValueAccessor> & T {\n  return class extends base {\n    private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;\n    private _subjectValueChanges: Subject<any>;\n    valueChanges: Observable<any>;\n\n    constructor(...args: any[]) {\n      super(...args); \n      this._subjectValueChanges = new Subject<any>();\n      this.valueChanges = this._subjectValueChanges.asObservable();\n    }\n\n    set value(v: any) {\n      if (v !== this._value) {\n        this._value = v;\n        this.onChange(v);\n        this._changeDetectorRef.markForCheck();\n        this._subjectValueChanges.next(v);\n      }\n    }\n    get value(): any {\n      return this._value;\n    }\n\n    writeValue(value: any): void {\n      this.value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n    }\n\n    onChange = (_: any) => noop;\n    onTouched = () => noop;\n\n  };\n}\n","import { Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CovalentValidators {\n  static min(minValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {\n      if (!!Validators.required(c) || (!minValue && minValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v < minValue ?\n        { min: {minValue: minValue, actualValue: v} } :\n        undefined;\n    };\n    return func;\n  }\n\n  static max(maxValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {\n      if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v > maxValue ?\n        { max: {maxValue: maxValue, actualValue: v} } :\n        undefined;\n    };\n    return func;\n  }\n\n  static numberRequired(c: AbstractControl): {[key: string]: any} {\n    return (Number.isNaN(c.value)) ?\n        { required: true } :\n        undefined;\n  }\n\n}\n","import { Component, Directive, Input, Renderer2, ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, ViewChild,\n         HostBinding, HostListener, ChangeDetectorRef } from '@angular/core';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'td-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdMessageComponent implements AfterViewInit {\n\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): any {\n    return { value: !this._opened, duration: 100 };\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\n\nconst TD_MESSAGE: Type<any>[] = [\n  TdMessageComponent,\n  TdMessageContainerDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TD_MESSAGE,\n  ],\n  exports: [\n    TD_MESSAGE,\n  ],\n})\nexport class CovalentMessageModule {\n\n}\n","import { Component, Input, Output, forwardRef, DoCheck, ViewChild, ViewChildren, QueryList, OnInit, HostListener,\n  ElementRef, Optional, Inject, Directive, TemplateRef, ViewContainerRef, ContentChild, ChangeDetectionStrategy,\n  ChangeDetectorRef, AfterViewInit, OnDestroy, HostBinding, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, LEFT_ARROW, RIGHT_ARROW, DELETE, BACKSPACE, ENTER, SPACE, TAB, HOME } from '@angular/cdk/keycodes';\nimport { MatChip } from '@angular/material/chips';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption } from '@angular/material/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\nimport { Observable, Subscription, timer, merge, fromEvent } from 'rxjs';\nimport { filter, debounceTime } from 'rxjs/operators';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-chip]ng-template',\n})\nexport class TdChipDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-autocomplete-option]ng-template',\n})\nexport class TdAutocompleteOptionDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdChipsBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdChipsMixinBase = mixinControlValueAccessor(mixinDisabled(TdChipsBase), []);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdChipsComponent),\n    multi: true,\n  }],\n  selector: 'td-chips',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./chips.component.scss' ],\n  templateUrl: './chips.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChipsComponent extends _TdChipsMixinBase implements IControlValueAccessor, DoCheck, OnInit, AfterViewInit, OnDestroy, ICanDisable {\n\n  private _outsideClickSubs: Subscription = Subscription.EMPTY;\n  private _inputValueChangesSubs: Subscription = Subscription.EMPTY;\n  private _isMousedown: boolean = false;\n\n  private _items: any[];\n  private _length: number = 0;\n  private _stacked: boolean = false;\n  private _requireMatch: boolean = false;\n  private _color: 'primary' | 'accent' | 'warn' = 'primary';\n  private _inputPosition: 'before' | 'after' = 'after';\n  private _chipAddition: boolean = true;\n  private _chipRemoval: boolean = true;\n  private _focused: boolean = false;\n  private _required: boolean = false;\n  private _tabIndex: number = 0;\n  private _touchendDebounce: number = 100;\n\n  _internalClick: boolean = false;\n  _internalActivateOption: boolean = false;\n\n  @ViewChild('input') _nativeInput: ElementRef;\n  @ViewChild(MatInput) _inputChild: MatInput;\n  @ViewChild(MatAutocompleteTrigger) _autocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChildren(MatChip) _chipsChildren: QueryList<MatChip>;\n\n  @ContentChild(TdChipDirective) _chipTemplate: TdChipDirective;\n  @ContentChild(TdAutocompleteOptionDirective) _autocompleteOptionTemplate: TdAutocompleteOptionDirective;\n\n  @ViewChildren(MatOption) _options: QueryList<MatOption>;\n\n  /**\n   * Flag that is true when autocomplete is focused.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * FormControl for the matInput element.\n   */\n  inputControl: FormControl = new FormControl();\n\n  /**\n   * items?: any[]\n   * Renders the `mat-autocomplete` with the provided list to display as options.\n   */\n  @Input('items')\n  set items(items: any[]) {\n    this._items = items;\n    this._setFirstOptionActive();\n    this._changeDetectorRef.markForCheck();\n  }\n  get items(): any[] {\n    return this._items;\n  }\n\n  /**\n   * stacked?: boolean\n   * Set stacked or horizontal chips depending on value.\n   * Defaults to false.\n   */\n  @Input('stacked')\n  set stacked(stacked: boolean) {\n    this._stacked = coerceBooleanProperty(stacked);\n  }\n  get stacked(): boolean {\n    return this._stacked;\n  }\n\n  /**\n   * inputPosition?: 'before' | 'after'\n   * Set input position before or after the chips.\n   * Defaults to 'after'.\n   */\n  @Input('inputPosition')\n  set inputPosition(inputPosition: 'before' | 'after') {\n    this._inputPosition = inputPosition;\n  }\n  get inputPosition(): 'before' | 'after' {\n    return this._inputPosition;\n  }\n\n  /**\n   * requireMatch?: boolean\n   * Blocks custom inputs and only allows selections from the autocomplete list.\n   */\n  @Input('requireMatch')\n  set requireMatch(requireMatch: boolean) {\n    this._requireMatch = coerceBooleanProperty(requireMatch);\n  }\n  get requireMatch(): boolean {\n    return this._requireMatch;\n  }\n\n  /**\n   * required?: boolean\n   * Value is set to true if at least one chip is needed\n   * Defaults to false\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * chipAddition?: boolean\n   * Disables the ability to add chips. When setting disabled as true, this will be overriden.\n   * Defaults to true.\n   */\n  @Input('chipAddition')\n  set chipAddition(chipAddition: boolean) {\n    this._chipAddition = chipAddition;\n    this._toggleInput();\n  }\n  get chipAddition(): boolean {\n    return this._chipAddition;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   * States if a chip can be added and if the input is available\n   */\n  get canAddChip(): boolean {\n    return this.chipAddition && !this.disabled;\n  }\n\n  /**\n   * chipRemoval?: boolean\n   * Disables the ability to remove chips. If it doesn't exist chip remmoval defaults to true.\n   * When setting disabled as true, this will be overriden to false.\n   */\n  @Input('chipRemoval')\n  set chipRemoval(chipRemoval: boolean) {\n    this._chipRemoval = chipRemoval;\n  }\n  get chipRemoval(): boolean {\n    return this._chipRemoval;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipRemoval is set to 'true'\n   * States if a chip can be removed\n   */\n  get canRemoveChip(): boolean {\n    return this.chipRemoval && !this.disabled;\n  }\n\n  /**\n   * returns the display placeholder\n   */\n  get displayPlaceHolder(): string {\n    if (!this.canAddChip) {\n      return '';\n    }\n    return (this._required) ? `${this.placeholder} *` :  this.placeholder;\n  }\n\n  /**\n   * placeholder?: string\n   * Placeholder for the autocomplete input.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 200.\n   */\n  @Input('debounce') debounce: number = 200;\n\n  /**\n   * color?: 'primary' | 'accent' | 'warn'\n   * Sets the color for the input and focus/selected state of the chips.\n   * Defaults to 'primary'\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  /**\n   * add?: function\n   * Method to be executed when a chip is added.\n   * Sends chip value as event.\n   */\n  @Output('add') onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * remove?: function\n   * Method to be executed when a chip is removed.\n   * Sends chip value as event.\n   */\n  @Output('remove') onRemove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * inputChange?: function\n   * Method to be executed when the value in the autocomplete input changes.\n   * Sends string value as event.\n   */\n  @Output('inputChange') onInputChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * chipFocus?: function\n   * Method to be executed when a chip is focused.\n   * Sends chip value as event.\n   */\n  @Output('chipFocus') onChipFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * blur?: function\n   * Method to be executed when a chip is blurred.\n   * Sends chip value as event.\n   */\n  @Output('chipBlur') onChipBlur: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Hostbinding to set the a11y of the TdChipsComponent depending on its state\n   */\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : this._tabIndex;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n  }\n\n  /**\n   * compareWith? function\n   * Function used to check whether a chip value already exists.\n   * Defaults to strict equality comparison ===\n   */\n  @Input('compareWith') compareWith: (o1: any, o2: any) => boolean = (o1: any, o2: any) => {\n    return o1 === o2;\n  }\n\n  /**\n   * Listens to host focus event to act on it\n   */\n  @HostListener('focus', ['$event'])\n  focusListener(event: FocusEvent): void {\n    // should only focus if its not via mousedown to prevent clashing with autocomplete\n    if (!this._isMousedown) {\n      this.focus();\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * Listens to host mousedown event to act on it\n   */\n  @HostListener('mousedown', ['$event'])\n  mousedownListener(event: FocusEvent): void {\n     // sets a flag to know if there was a mousedown and then it returns it back to false\n    this._isMousedown = true;\n    timer().toPromise().then(() => {\n      this._isMousedown = false;\n    });\n  }\n\n  /**\n   * If clicking on :host or `td-chips-wrapper`, then we stop the click propagation so the autocomplete\n   * doesnt close automatically.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    const clickTarget: HTMLElement = <HTMLElement>event.target;\n    if (clickTarget === this._elementRef.nativeElement ||\n        clickTarget.className.indexOf('td-chips-wrapper') > -1) {\n      this.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Listens to host keydown event to act on it depending on the keypress\n   */\n  @HostListener('keydown', ['$event'])\n  keydownListener(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case TAB:\n        // if tabing out, then unfocus the component\n        timer().toPromise().then(() => {\n          this.removeFocusedState();\n        });\n        break;\n      case ESCAPE:\n        if (this._inputChild.focused) {\n          this._nativeInput.nativeElement.blur();\n          this.removeFocusedState();\n          this._closeAutocomplete();\n        } else {\n          this.focus();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  ngOnInit(): void {\n    this._inputValueChangesSubs = this.inputControl.valueChanges.pipe(\n      debounceTime(this.debounce),\n    ).subscribe((value: string) => {\n      this.onInputChange.emit(value ? value : '');\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this._watchOutsideClick();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngDoCheck(): void {\n    // Throw onChange event only if array changes size.\n    if (this.value && this.value.length !== this._length) {\n      this._length = this.value.length;\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n      this._outsideClickSubs.unsubscribe();\n      this._inputValueChangesSubs.unsubscribe();\n  }\n\n  _setInternalClick(): void {\n    this._internalClick = true;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    this._toggleInput();\n  }\n\n  /**\n   * Method that is executed when trying to create a new chip from the autocomplete.\n   * It check if [requireMatch] is enabled, and tries to add the first active option\n   * else if just adds the value thats on the input\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  _handleAddChip(): boolean {\n    let value: any;\n    if (this.requireMatch) {\n      let selectedOptions: MatOption[] = this._options.toArray().filter((option: MatOption) => {\n        return option.active;\n      });\n      if (selectedOptions.length > 0) {\n        value = selectedOptions[0].value;\n        selectedOptions[0].setInactiveStyles();\n      }\n      if (!value) {\n        return false;\n      }\n    } else {\n      // if there is a selection, then use that\n      // else use the input value as chip\n      if (this._autocompleteTrigger.activeOption) {\n        value = this._autocompleteTrigger.activeOption.value;\n        this._autocompleteTrigger.activeOption.setInactiveStyles();\n      } else {\n        value = this._inputChild.value;\n        if (value.trim() === '') {\n          return false;\n        }\n      }\n    }\n    return this.addChip(value);\n  }\n\n  /**\n   * Method thats exectuted when trying to add a value as chip\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  addChip(value: any): boolean {\n    /**\n     * add a debounce ms delay when reopening the autocomplete to give it time\n     * to rerender the next list and at the correct spot\n     */\n\n    this._closeAutocomplete();\n    timer(this.debounce).toPromise().then(() => {\n      this.setFocusedState();\n      this._setFirstOptionActive();\n      this._openAutocomplete();\n    });\n\n    this.inputControl.setValue('');\n    // check if value is already part of the model\n    if (this.value.findIndex((item: any) => this.compareWith(item, value)) > -1) {\n      return false;\n    }\n\n    this.value.push(value);\n    this.onAdd.emit(value);\n    this.onChange(this.value);\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Method that is executed when trying to remove a chip.\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  removeChip(index: number): boolean {\n    let removedValues: any[] = this.value.splice(index, 1);\n    if (removedValues.length === 0) {\n      return false;\n    }\n\n    /**\n     * Checks if deleting last single chip, to focus input afterwards\n     * Else check if its not the last chip of the list to focus the next one.\n     */\n    if (index === (this._totalChips - 1) && index === 0) {\n      this._inputChild.focus();\n    } else if (index < (this._totalChips - 1)) {\n      this._focusChip(index + 1);\n    } else if (index > 0) {\n      this._focusChip(index - 1);\n    }\n\n    this.onRemove.emit(removedValues[0]);\n    this.onChange(this.value);\n    this.inputControl.setValue('');\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Sets blur of chip and sends out event\n   */\n  _handleChipBlur(event: FocusEvent, value: any): void {\n    this.onChipBlur.emit(value);\n  }\n\n  /**\n   * Sets focus of chip and sends out event\n   */\n  _handleChipFocus(event: FocusEvent, value: any): void {\n    this.setFocusedState();\n    this.onChipFocus.emit(value);\n  }\n\n  _handleFocus(): boolean {\n    this.setFocusedState();\n    this._setFirstOptionActive();\n    return true;\n  }\n\n  /**\n   * Sets focus state of the component\n   */\n  setFocusedState(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this._tabIndex = -1;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes focus state of the component\n   */\n  removeFocusedState(): void {\n    this._focused = false;\n    this._tabIndex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Programmatically focus the input or first chip. Since its the component entry point\n   * depending if a user can add or remove chips\n   */\n  focus(): void {\n    if (this.canAddChip) {\n      this._inputChild.focus();\n    } else if (!this.disabled) {\n      this._focusFirstChip();\n    }\n  }\n\n  /**\n   * Passes relevant input key presses.\n   */\n  _inputKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        /**\n         * Since the first item is highlighted on [requireMatch], we need to inactivate it\n         * when pressing the up key\n         */\n        if (this.requireMatch) {\n          let length: number = this._options.length;\n          if (length > 1 && this._options.toArray()[0].active && this._internalActivateOption) {\n            this._options.toArray()[0].setInactiveStyles();\n            this._internalActivateOption = false;\n            // prevent default window scrolling\n            event.preventDefault();\n          }\n        }\n        break;\n      case LEFT_ARROW:\n      case DELETE:\n      case BACKSPACE:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing left arrow to move to the last chip */\n        if (!this._inputChild.value) {\n          this._focusLastChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      case RIGHT_ARROW:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing right arrow to move to the first chip */\n        if (!this._inputChild.value) {\n          this._focusFirstChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Passes relevant chip key presses.\n   */\n  _chipKeydown(event: KeyboardEvent, index: number): void {\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        /** Check to see if we can delete a chip */\n        if (this.canRemoveChip) {\n         this.removeChip(index);\n        }\n        break;\n      case UP_ARROW:\n      case LEFT_ARROW:\n        /**\n         * Check to see if left/down arrow was pressed while focusing the first chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === 0) {\n          // only try to target input if pressing left\n          if (this.canAddChip && event.keyCode === LEFT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusLastChip();\n          }\n        } else if (index > 0) {\n          this._focusChip(index - 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n        /**\n         * Check to see if right/up arrow was pressed while focusing the last chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === (this._totalChips - 1)) {\n          // only try to target input if pressing right\n          if (this.canAddChip && event.keyCode === RIGHT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusFirstChip();\n          }\n        } else if (index < (this._totalChips - 1)) {\n          this._focusChip(index + 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Method to remove from display the value added from the autocomplete since it goes directly as chip.\n   */\n  _removeInputDisplay(): string {\n    return '';\n  }\n\n  /**\n   * Method to open the autocomplete manually if its not already opened\n   */\n  _openAutocomplete(): void {\n    if (!this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.openPanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Method to close the autocomplete manually if its not already closed\n   */\n  _closeAutocomplete(): void {\n    if (this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.closePanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Get total of chips\n   */\n  get _totalChips(): number {\n    let chips: MatChip[] = this._chipsChildren.toArray();\n    return chips.length;\n  }\n\n  /**\n   * Method to focus a desired chip by index\n   */\n  private _focusChip(index: number): void {\n    /** check to see if index exists in the array before focusing */\n    if (index > -1 && this._totalChips > index) {\n      this._chipsChildren.toArray()[index].focus();\n    }\n  }\n\n  /** Method to focus first chip */\n  private _focusFirstChip(): void {\n    this._focusChip(0);\n  }\n\n  /** Method to focus last chip */\n  private _focusLastChip(): void {\n    this._focusChip(this._totalChips - 1);\n  }\n\n  /**\n   * Method to toggle the disable state of input\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   */\n  private _toggleInput(): void {\n    if (this.canAddChip) {\n      this.inputControl.enable();\n    } else {\n      this.inputControl.disable();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Sets first option as active to let the user know which one will be added when pressing enter\n   * Only if [requireMatch] has been set\n   */\n  private _setFirstOptionActive(): void {\n    if (this.requireMatch) {\n      // need to use a timer here to wait until the autocomplete has been opened (end of queue)\n      timer().toPromise().then(() => {\n        if (this.focused && this._options && this._options.length > 0) {\n          // clean up of previously active options\n          this._options.toArray().forEach((option: MatOption) => {\n            option.setInactiveStyles();\n          });\n          // set the first one as active\n          this._options.toArray()[0].setActiveStyles();\n          this._internalActivateOption = true;\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n  }\n\n  /**\n   * Watches clicks outside of the component to remove the focus\n   * The autocomplete panel is considered inside the component so we\n   * need to use a flag to find out when its clicked.\n   */\n  private _watchOutsideClick(): void {\n    if (this._document) {\n      this._outsideClickSubs = merge(\n        fromEvent(this._document, 'click'),\n        fromEvent(this._document, 'touchend'),\n      ).pipe(\n        debounceTime(this._touchendDebounce),\n        filter(\n          (event: MouseEvent) => {\n            const clickTarget: HTMLElement = <HTMLElement>event.target;\n            setTimeout(() => {\n              this._internalClick = false;\n            });\n            return this.focused &&\n                  (clickTarget !== this._elementRef.nativeElement) &&\n                  !this._elementRef.nativeElement.contains(clickTarget) && !this._internalClick;\n          },\n        ),\n      ).subscribe(() => {\n        if (this.focused) {\n          this._autocompleteTrigger.closePanel();\n          this.removeFocusedState();\n          this.onTouched();\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n    return undefined;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective } from './chips.component';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n  ],\n  declarations: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n  exports: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n})\nexport class CovalentChipsModule {\n\n}\n","import { Component, Input, Output, Renderer2, ElementRef, ContentChildren, QueryList, HostListener } from '@angular/core';\n\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-column-row]',\n  styleUrls: ['./data-table-row.component.scss' ],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableColumnRowComponent {\n\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n  }\n\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-row]',\n  styleUrls: ['./data-table-row.component.scss' ],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableRowComponent {\n\n  private _selected: boolean = false;\n\n  @Input('selected')\n  set selected(selected: boolean) {\n    if (selected) {\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n    } else {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n    }\n    this._selected = selected;\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  get height(): number {\n    let height: number = 48;\n    if (this._elementRef.nativeElement) {\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return height;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n  }\n\n  /**\n   * Listening to click event to explicitly focus the row element.\n   */\n  @HostListener('click')\n  clickListener(): void {\n    this.focus();\n  }\n\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({selector: '[tdDataTableTemplate]ng-template'})\nexport class TdDataTableTemplateDirective extends TemplatePortalDirective {\n\n  @Input() tdDataTableTemplate: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import { Component, Input, Output, EventEmitter, forwardRef, ChangeDetectionStrategy,\n         ChangeDetectorRef, ViewChild, OnDestroy, AfterViewInit,\n         ContentChildren, TemplateRef, AfterContentInit, QueryList, Inject,\n         Optional, ViewChildren, ElementRef, OnInit, AfterContentChecked } from '@angular/core';\nimport { DOCUMENT, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\n\nimport { Observable, Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdDataTableRowComponent } from './data-table-row/data-table-row.component';\nimport { ITdDataTableSortChangeEvent, TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport enum TdDataTableSortingOrder {\n  Ascending = 'ASC',\n  Descending = 'DESC',\n}\n\nexport interface ITdDataTableColumnWidth {\n  min?: number;\n  max?: number;\n}\n\nexport interface ITdDataTableColumn {\n  name: string;\n  label: string;\n  tooltip?: string;\n  numeric?: boolean;\n  format?: (value: any) => any;\n  nested?: boolean;\n  sortable?: boolean;\n  hidden?: boolean;\n  filter?: boolean;\n  width?: ITdDataTableColumnWidth | number;\n}\n\nexport interface ITdDataTableSelectEvent {\n  row: any;\n  selected: boolean;\n  index: number;\n}\n\nexport interface ITdDataTableSelectAllEvent {\n  rows: any[];\n  selected: boolean;\n}\n\nexport interface ITdDataTableRowClickEvent {\n  row: any;\n  index: number;\n}\n\nexport interface IInternalColumnWidth {\n  value: number;\n  limit: boolean;\n  index: number;\n  min?: boolean;\n  max?: boolean;\n}\n\n/**\n * Constant to set the rows offset before and after the viewport\n */\nconst TD_VIRTUAL_OFFSET: number = 2;\n\n/**\n * Constant to set default row height if none is provided\n */\nconst TD_VIRTUAL_DEFAULT_ROW_HEIGHT: number = 48;\n\nexport class TdDataTableBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdDataTableComponent),\n    multi: true,\n  }],\n  selector: 'td-data-table',\n  styleUrls: ['./data-table.component.scss' ],\n  templateUrl: './data-table.component.html',\n  inputs: ['value'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDataTableComponent extends _TdDataTableMixinBase implements IControlValueAccessor, OnInit,\n                                          AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\n\n  /** responsive width calculations */\n  private _resizeSubs: Subscription;\n  private _rowsChangedSubs: Subscription;\n  private _hostWidth: number = 0;\n\n  /** manually resizable columns */\n  private _resizableColumns: boolean = false;\n  private _columnClientX: number = 0;\n  private _columnResizeSubs: Subscription;\n  private _resizingColumn: number;\n  private _onColumnResize: Subject<number> = new Subject<number>();\n\n  get resizingColumn(): number {\n    return this._resizingColumn;\n  }\n\n  get hostWidth(): number {\n    // if the checkboxes are rendered, we need to remove their width\n    // from the total width to calculate properly\n    if (this.selectable) {\n      return this._hostWidth - 42;\n    }\n    return this._hostWidth;\n  }\n\n  private _widths: IInternalColumnWidth[] = [];\n  private _onResize: Subject<void> = new Subject<void>();\n\n  /** column header reposition and viewpoort */\n  private _verticalScrollSubs: Subscription;\n  private _horizontalScrollSubs: Subscription;\n  private _scrollHorizontalOffset: number = 0;\n\n  private _onHorizontalScroll: Subject<number> = new Subject<number>();\n  private _onVerticalScroll: Subject<number> = new Subject<number>();\n\n  // Array of cached row heights to allow dynamic row heights\n  private _rowHeightCache: number[] = [];\n  // Total pseudo height of all the elements\n  private _totalHeight: number = 0;\n  // Total host height for the viewport\n  private _hostHeight: number = 0;\n  // Scrolled vertical pixels\n  private _scrollVerticalOffset: number = 0;\n  // Style to move the content a certain offset depending on scrolled offset\n  private _offsetTransform: SafeStyle;\n\n  // Variables that set from and to which rows will be rendered\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  /**\n   * Returns the offset style with a proper calculation on how much it should move\n   * over the y axis of the total height\n   */\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  /**\n   * Returns the assumed total height of the rows\n   */\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  /**\n   * Returns the initial row to render in the viewport\n   */\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  /**\n   * Returns the last row to render in the viewport\n   */\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  private _valueChangesSubs: Subscription;\n  /** internal attributes */\n  private _data: any[];\n  // data virtually iterated by component\n  private _virtualData: any[];\n  private _columns: ITdDataTableColumn[];\n  private _selectable: boolean = false;\n  private _clickable: boolean = false;\n  private _multiple: boolean = true;\n  private _allSelected: boolean = false;\n  private _indeterminate: boolean = false;\n\n  /** sorting */\n  private _sortable: boolean = false;\n  private _sortBy: ITdDataTableColumn;\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /** shift select */\n  private _shiftPreviouslyPressed: boolean = false;\n  private _lastSelectedIndex: number = -1;\n  private _firstSelectedIndex: number = -1;\n  private _firstCheckboxValue: boolean = false;\n\n  /** template fetching support */\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDataTableTemplateDirective) _templates: QueryList<TdDataTableTemplateDirective>;\n\n  @ViewChild('scrollableDiv') _scrollableDiv: ElementRef;\n\n  @ViewChildren('columnElement') _colElements: QueryList<TdDataTableColumnComponent>;\n\n  @ViewChildren(TdDataTableRowComponent) _rows: QueryList<TdDataTableRowComponent>;\n\n  /**\n   * Returns scroll position to reposition column headers\n   */\n  get columnsLeftScroll(): number {\n    return this._scrollHorizontalOffset * -1;\n  }\n\n  /**\n   * Returns true if all values are selected.\n   */\n  get allSelected(): boolean {\n    return this._allSelected;\n  }\n\n  /**\n   * Returns true if all values are not deselected\n   * and at least one is.\n   */\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * data?: {[key: string]: any}[]\n   * Sets the data to be rendered as rows.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    this._rowHeightCache = [];\n    Promise.resolve().then(() => {\n      this.refresh();\n      // scroll back to the top if the data has changed\n      this._scrollableDiv.nativeElement.scrollTop = 0;\n    });\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * columns?: ITdDataTableColumn[]\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n   * Defaults to [data] keys.\n   */\n  @Input('columns')\n  set columns(cols: ITdDataTableColumn[]) {\n    this._columns = cols;\n  }\n  get columns(): ITdDataTableColumn[] {\n    if (this._columns) {\n      return this._columns;\n    }\n\n    if (this.hasData) {\n      this._columns = [];\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\n      let row: any = this._data[0];\n      Object.keys(row).forEach((k: string) => {\n        if (!this._columns.find((c: any) => c.name === k)) {\n          this._columns.push({ name: k, label: k });\n        }\n      });\n      return this._columns;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * resizableColumns?: boolean\n   * Enables manual column resize.\n   * Defaults to 'false'\n   */\n  @Input('resizableColumns')\n  set resizableColumns(resizableColumns: boolean) {\n    this._resizableColumns = coerceBooleanProperty(resizableColumns);\n  }\n  get resizableColumns(): boolean {\n    return this._resizableColumns;\n  }\n\n  /**\n   * selectable?: boolean\n   * Enables row selection events, hover and selected row states.\n   * Defaults to 'false'\n   */\n  @Input('selectable')\n  set selectable(selectable: boolean) {\n    this._selectable = coerceBooleanProperty(selectable);\n  }\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  /**\n   * clickable?: boolean\n   * Enables row click events, hover.\n   * Defaults to 'false'\n   */\n  @Input('clickable')\n  set clickable(clickable: boolean) {\n    this._clickable = coerceBooleanProperty(clickable);\n  }\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  /**\n   * multiple?: boolean\n   * Enables multiple row selection. [selectable] needs to be enabled.\n   * Defaults to 'false'\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable')\n  set sortable(sortable: boolean) {\n    this._sortable = coerceBooleanProperty(sortable);\n  }\n  get sortable(): boolean {\n    return this._sortable;\n  }\n\n  /**\n   * sortBy?: string\n   * Sets the active sort column. [sortable] needs to be enabled.\n   */\n  @Input('sortBy')\n  set sortBy(columnName: string) {\n    if (!columnName) {\n      return;\n    }\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\n    if (!column) {\n      throw new Error('[sortBy] must be a valid column name');\n    }\n\n    this._sortBy = column;\n  }\n  get sortByColumn(): ITdDataTableColumn {\n    return this._sortBy;\n  }\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n  get sortOrderEnum(): TdDataTableSortingOrder {\n    return this._sortOrder;\n  }\n\n  get hasData(): boolean {\n    return this._data && this._data.length > 0;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                                      new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  /**\n   * rowSelect?: function\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectEvent] implemented object.\n   */\n  @Output('rowSelect') onRowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\n\n  /**\n   * rowClick?: function\n   * Event emitted when a row is clicked.\n   * Emits an [ITdDataTableRowClickEvent] implemented object.\n   */\n  @Output('rowClick') onRowClick: EventEmitter<ITdDataTableRowClickEvent> = new EventEmitter<ITdDataTableRowClickEvent>();\n\n  /**\n   * selectAll?: function\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\n   */\n  @Output('selectAll') onSelectAll: EventEmitter<ITdDataTableSelectAllEvent> =\n                                    new EventEmitter<ITdDataTableSelectAllEvent>();\n\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\n              private _elementRef: ElementRef,\n              private _domSanitizer: DomSanitizer,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * compareWith?: function(row, model): boolean\n   * Allows custom comparison between row and model to see if row is selected or not\n   * Default comparation is by reference\n   */\n  @Input('compareWith') compareWith: (row: any, model: any) => boolean = (row: any, model: any) => {\n    return row === model;\n  }\n\n  /**\n   * Initialize observable for resize and scroll events\n   */\n  ngOnInit(): void {\n    // initialize observable for resize calculations\n    this._resizeSubs = this._onResize.asObservable().subscribe(() => {\n      if (this._rows) {\n        this._rows.toArray().forEach((row: TdDataTableRowComponent, index: number) => {\n          this._rowHeightCache[this.fromRow + index] = row.height + 1;\n        });\n      }\n      this._calculateWidths();\n      this._calculateVirtualRows();\n    });\n\n    // initialize observable for column resize calculations\n    this._columnResizeSubs = this._onColumnResize.asObservable().pipe(\n      debounceTime(0),\n    ).subscribe((clientX: number) => {\n      this._columnClientX = clientX;\n      this._calculateWidths();\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for scroll column header reposition\n    this._horizontalScrollSubs = this._onHorizontalScroll.asObservable()\n      .subscribe((horizontalScroll: number) => {\n      this._scrollHorizontalOffset = horizontalScroll;\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for virtual scroll rendering\n    this._verticalScrollSubs = this._onVerticalScroll.asObservable()\n      .subscribe((verticalScroll: number) => {\n      this._scrollVerticalOffset = verticalScroll;\n      this._calculateVirtualRows();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._valueChangesSubs = this.valueChanges.subscribe((value: any) => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Loads templates and sets them in a map for faster access.\n   */\n  ngAfterContentInit(): void {\n    for (let i: number = 0; i < this._templates.toArray().length; i++) {\n      this._templateMap.set(\n        this._templates.toArray()[i].tdDataTableTemplate,\n        this._templates.toArray()[i].templateRef,\n      );\n    }\n  }\n\n  /**\n   * Checks hosts native elements widths to see if it has changed (resize check)\n   */\n  ngAfterContentChecked(): void {\n    // check if the scroll has been reset when element is hidden\n    if (this._scrollVerticalOffset - this._scrollableDiv.nativeElement.scrollTop > 5) {\n      // scroll back to the top if element has been reset\n      this._onVerticalScroll.next(0);\n    }\n    if (this._elementRef.nativeElement) {\n      let newHostWidth: number = this._elementRef.nativeElement.getBoundingClientRect().width;\n      // if the width has changed then we throw a resize event.\n      if (this._hostWidth !== newHostWidth) {\n        setTimeout(() => {\n          this._hostWidth = newHostWidth;\n          this._onResize.next();\n        }, 0);\n      }\n    }\n    if (this._scrollableDiv.nativeElement) {\n      let newHostHeight: number = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\n      // if the height of the viewport has changed, then we mark for check\n      if (this._hostHeight !== newHostHeight) {\n        this._hostHeight = newHostHeight;\n        this._calculateVirtualRows();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Registers to an observable that checks if all rows have been rendered\n   * so we can start calculating the widths\n   */\n  ngAfterViewInit(): void {\n    this._rowsChangedSubs = this._rows.changes.pipe(\n      debounceTime(0),\n    ).subscribe(() => {\n      this._onResize.next();\n    });\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Unsubscribes observables when data table is destroyed\n   */\n  ngOnDestroy(): void {\n    if (this._resizeSubs) {\n      this._resizeSubs.unsubscribe();\n    }\n    if (this._columnResizeSubs) {\n      this._columnResizeSubs.unsubscribe();\n    }\n    if (this._horizontalScrollSubs) {\n      this._horizontalScrollSubs.unsubscribe();\n    }\n    if (this._verticalScrollSubs) {\n      this._verticalScrollSubs.unsubscribe();\n    }\n    if (this._rowsChangedSubs) {\n      this._rowsChangedSubs.unsubscribe();\n    }\n    if (this._valueChangesSubs) {\n      this._valueChangesSubs.unsubscribe();\n    }\n  }\n\n  /**\n   * Method that gets executed every time there is a scroll event\n   * Calls the scroll observable\n   */\n  handleScroll(event: Event): void {\n    let element: HTMLElement = (<HTMLElement>event.target);\n    if (element) {\n      let horizontalScroll: number = element.scrollLeft;\n      if (this._scrollHorizontalOffset !== horizontalScroll) {\n        this._onHorizontalScroll.next(horizontalScroll);\n      }\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._onVerticalScroll.next(verticalScroll);\n      }\n    }\n  }\n\n  /**\n   * Returns the width needed for the columns via index\n   */\n  getColumnWidth(index: number): number {\n    if (this._widths[index]) {\n      return this._widths[index].value;\n    }\n    return undefined;\n  }\n\n  getCellValue(column: ITdDataTableColumn, value: any): string {\n    if (column.nested === undefined || column.nested) {\n      return this._getNestedValue(column.name, value);\n    }\n    return value[column.name];\n  }\n\n  /**\n   * Getter method for template references\n   */\n   getTemplateRef(name: string): TemplateRef<any> {\n     return this._templateMap.get(name);\n   }\n\n  /**\n   * Clears model (ngModel) of component by removing all values in array.\n   */\n  clearModel(): void {\n    this.value.splice(0, this.value.length);\n  }\n\n  /**\n   * Refreshes data table and rerenders [data] and [columns]\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n    this._calculateWidths();\n    this._calculateCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Selects or clears all rows depending on 'checked' value.\n   */\n  selectAll(checked: boolean): void {\n    let toggledRows: any[] = [];\n    if (checked) {\n      this._data.forEach((row: any) => {\n        // skiping already selected rows\n        if (!this.isRowSelected(row)) {\n          this.value.push(row);\n          // checking which ones are being toggled\n          toggledRows.push(row);\n        }\n      });\n      this._allSelected = true;\n      this._indeterminate = true;\n    } else {\n      this._data.forEach((row: any) => {\n        // checking which ones are being toggled\n        if (this.isRowSelected(row)) {\n          toggledRows.push(row);\n          let modelRow: any = this.value.filter((val: any) => {\n            return this.compareWith(row, val);\n          })[0];\n          let index: number = this.value.indexOf(modelRow);\n          if (index > -1) {\n            this.value.splice(index, 1);\n          }\n        }\n      });\n      this._allSelected = false;\n      this._indeterminate = false;\n    }\n    this.onSelectAll.emit({rows: toggledRows, selected: checked});\n    this.onChange(this.value);\n  }\n\n  /**\n   * Checks if row is selected\n   */\n  isRowSelected(row: any): boolean {\n    // compare items by [compareWith] function\n    return this.value ? this.value.filter((val: any) => {\n      return this.compareWith(row, val);\n    }).length > 0 : false;\n  }\n\n  /**\n   * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n   * handles cntrl clicks and shift clicks for multi-select\n   */\n  select(row: any, event: Event, currentSelected: number): void {\n    if (this.selectable) {\n      this.blockEvent(event);\n      // Check to see if Shift key is selected and need to select everything in between\n      let mouseEvent: MouseEvent = event as MouseEvent;\n      if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\n        let firstIndex: number = currentSelected;\n        let lastIndex: number = this._lastSelectedIndex;\n        if (currentSelected > this._lastSelectedIndex) {\n          firstIndex = this._lastSelectedIndex;\n          lastIndex = currentSelected;\n        }\n        // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\n        // else the checkboxes clicked are all after the initial one\n        if ((this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\n           (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)) {\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            if (this._firstSelectedIndex !== i) {\n              this._doSelection(this._data[i], i);\n            }\n          }\n        } else if ((this._firstSelectedIndex > currentSelected) || (this._firstSelectedIndex < currentSelected)) {\n          // change indexes depending on where the next checkbox is selected (before or after)\n          if (this._firstSelectedIndex > currentSelected) {\n            lastIndex--;\n          } else if (this._firstSelectedIndex < currentSelected) {\n            firstIndex++;\n          }\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            let rowSelected: boolean = this.isRowSelected(this._data[i]);\n            // if row is selected and first checkbox was selected\n            // or if row was unselected and first checkbox was unselected\n            // we ignore the toggle\n            if ((this._firstCheckboxValue && !rowSelected) ||\n                (!this._firstCheckboxValue && rowSelected)) {\n              this._doSelection(this._data[i], i);\n            } else if (this._shiftPreviouslyPressed) {\n              // else if the checkbox selected was in the middle of the last selection and the first selection\n              // then we undo the selections\n              if ((currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\n                  (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex)) {\n                this._doSelection(this._data[i], i);\n              }\n            }\n          }\n        }\n        this._shiftPreviouslyPressed = true;\n      // if shift wasnt pressed, then we take the element checked as the first row\n      // incase the next click uses shift\n      } else if (mouseEvent && !mouseEvent.shiftKey) {\n        this._firstCheckboxValue = this._doSelection(row, currentSelected);\n        this._shiftPreviouslyPressed = false;\n        this._firstSelectedIndex = currentSelected;\n      }\n      this._lastSelectedIndex = currentSelected;\n    }\n  }\n\n  /**\n   * Overrides the onselectstart method of the document so other text on the page\n   * doesn't get selected when doing shift selections.\n   */\n  disableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = function(): boolean {\n        return false;\n      };\n    }\n  }\n\n  /**\n   * Resets the original onselectstart method.\n   */\n  enableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = undefined;\n    }\n  }\n\n  /**\n   * emits the onRowClickEvent when a row is clicked\n   * if clickable is true and selectable is false then select the row\n   */\n  handleRowClick(row: any, index: number, event: Event): void {\n    if (this.clickable) {\n      // ignoring linting rules here because attribute it actually null or not there\n      // can't check for undefined\n      const srcElement: any = event.srcElement || event.currentTarget;\n      let element: HTMLElement = event.target as HTMLElement;\n      /* tslint:disable-next-line */\n      if (srcElement.getAttribute('stopRowClick') === null && element.tagName.toLowerCase() !== 'mat-pseudo-checkbox') {\n        this.onRowClick.emit({\n          row: row,\n          index: index,\n        });\n      }\n    }\n  }\n\n  /**\n   * Method handle for sort click event in column headers.\n   */\n  handleSort(column: ITdDataTableColumn): void {\n    if (this._sortBy === column) {\n      this._sortOrder = this._sortOrder === TdDataTableSortingOrder.Ascending ?\n        TdDataTableSortingOrder.Descending : TdDataTableSortingOrder.Ascending;\n    } else {\n      this._sortBy = column;\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\n    }\n    this.onSortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n  }\n\n  /**\n   * Handle all keyup events when focusing a data table row\n   */\n  _rowKeyup(event: KeyboardEvent, row: any, index: number): void {\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        /** if user presses enter or space, the row should be selected */\n        if (this.selectable) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case UP_ARROW:\n        /**\n         * if users presses the up arrow, we focus the prev row\n         * unless its the first row\n         */\n        if (index > 0) {\n          this._rows.toArray()[index - 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case DOWN_ARROW:\n        /**\n         * if users presses the down arrow, we focus the next row\n         * unless its the last row\n         */\n        if (index < (this._rows.toArray().length - 1)) {\n          this._rows.toArray()[index + 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Sets column index of the dragged column and initial clientX of column\n   */\n  _handleStartColumnDrag(index: number, event: MouseEvent): void {\n    this._columnClientX = event.clientX;\n    this._resizingColumn = index;\n  }\n\n  /**\n   * Calculates new width depending on new clientX of dragger column\n   */\n  _handleColumnDrag(event: MouseEvent | DragEvent): void {\n    // check if there was been a separator clicked for resize\n    if (this._resizingColumn !== undefined && event.clientX > 0) {\n      let xPosition: number = event.clientX;\n      // checks if the separator is being moved to try and resize the column, else dont do anything\n      if (xPosition > 0 && this._columnClientX > 0 && (xPosition - this._columnClientX) !== 0) {\n        // calculate the new width depending if making the column bigger or smaller\n        let proposedManualWidth: number = this._widths[this._resizingColumn].value + (xPosition - this._columnClientX);\n        // if the proposed new width is less than the projected min width of the column, use projected min width\n        if (proposedManualWidth < this._colElements.toArray()[this._resizingColumn].projectedWidth) {\n          proposedManualWidth = this._colElements.toArray()[this._resizingColumn].projectedWidth;\n        }\n        this.columns[this._resizingColumn].width = proposedManualWidth;\n        // update new x position for the resized column\n        this._onColumnResize.next(xPosition);\n      }\n    }\n  }\n\n  /**\n   * Ends dragged flags\n   */\n  _handleEndColumnDrag(): void {\n    this._columnClientX = undefined;\n    this._resizingColumn = undefined;\n  }\n\n  /**\n   * Method to prevent the default events\n   */\n  blockEvent(event: Event): void {\n    event.preventDefault();\n  }\n\n  private _getNestedValue(name: string, value: any): string {\n    if (!(value instanceof Object) || !name) {\n      return value;\n    }\n    if (name.indexOf('.') > -1) {\n      let splitName: string[] = name.split(/\\.(.+)/, 2);\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\n    } else {\n      return value[name];\n    }\n  }\n\n  /**\n   * Does the actual Row Selection\n   */\n  private _doSelection(row: any, rowIndex: number): boolean {\n    let wasSelected: boolean = this.isRowSelected(row);\n    if (!wasSelected) {\n      if (!this._multiple) {\n        this.clearModel();\n      }\n      this.value.push(row);\n    } else {\n      // compare items by [compareWith] function\n      row = this.value.filter((val: any) => {\n        return this.compareWith(row, val);\n      })[0];\n      let index: number = this.value.indexOf(row);\n      if (index > -1) {\n        this.value.splice(index, 1);\n      }\n    }\n    this._calculateCheckboxState();\n    this.onRowSelect.emit({row: row, index: rowIndex, selected: !wasSelected});\n    this.onChange(this.value);\n    return !wasSelected;\n  }\n\n  /**\n   * Calculate all the state of all checkboxes\n   */\n  private _calculateCheckboxState(): void {\n    if (this._data) {\n      this._allSelected = typeof this._data.find((d: any) => !this.isRowSelected(d)) === 'undefined';\n      this._indeterminate = false;\n      for (let row of this._data) {\n        if (!this.isRowSelected(row)) {\n          continue;\n        }\n        this._indeterminate = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Calculates the widths for columns and cells depending on content\n   */\n  private _calculateWidths(): void {\n    if (this._colElements && this._colElements.length) {\n      this._widths = [];\n      this._colElements.forEach((col: TdDataTableColumnComponent, index: number) => {\n        this._adjustColumnWidth(index, this._calculateWidth());\n      });\n      this._adjustColumnWidhts();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Adjusts columns after calculation to see if they need to be recalculated.\n   */\n  private _adjustColumnWidhts(): void {\n    let fixedTotalWidth: number = 0;\n    // get the number of total columns that have flexible widths (not fixed or hidden)\n    let flexibleWidths: number = this._widths.filter((width: IInternalColumnWidth, index: number) => {\n      if (this.columns[index].hidden) {\n        return false;\n      }\n      if (width.limit || width.max || width.min) {\n        fixedTotalWidth += width.value;\n      }\n      return !width.limit && !width.max && !width.min;\n    }).length;\n    // calculate how much pixes are left that could be spread across\n    // the flexible columns\n    let recalculateHostWidth: number = 0;\n    if (fixedTotalWidth < this.hostWidth) {\n      recalculateHostWidth = this.hostWidth - fixedTotalWidth;\n    }\n    // if we have flexible columns and pixels to spare on them\n    // we try and spread the pixels across them\n    if (flexibleWidths && recalculateHostWidth) {\n      let newValue: number = Math.floor(recalculateHostWidth / flexibleWidths);\n      let adjustedNumber: number = 0;\n      // adjust the column widths with the spread pixels\n      this._widths.forEach((colWidth: IInternalColumnWidth) => {\n        if (this._widths[colWidth.index].max && this._widths[colWidth.index].value > newValue ||\n            this._widths[colWidth.index].min && this._widths[colWidth.index].value < newValue ||\n            !this._widths[colWidth.index].limit) {\n          this._adjustColumnWidth(colWidth.index, newValue);\n          adjustedNumber++;\n        }\n      });\n      // if there are still columns that need to be recalculated, we start over\n      let newFlexibleWidths: number = this._widths.filter((width: IInternalColumnWidth) => {\n        return !width.limit && !width.max;\n      }).length;\n      if (newFlexibleWidths !== adjustedNumber && newFlexibleWidths !== flexibleWidths) {\n        this._adjustColumnWidhts();\n      }\n    }\n  }\n\n  /**\n   * Adjusts a single column to see if it can be recalculated\n   */\n  private _adjustColumnWidth(index: number, value: number): void {\n    this._widths[index] = {\n      value: value,\n      index: index,\n      limit: false,\n      min: false,\n      max: false,\n    };\n    // flag to see if we need to skip the min width projection\n    // depending if a width or min width has been provided\n    let skipMinWidthProjection: boolean = false;\n    if (this.columns[index]) {\n      // if the provided width has min/max, then we check to see if we need to set it\n      if (typeof this.columns[index].width === 'object') {\n        let widthOpts: ITdDataTableColumnWidth = <ITdDataTableColumnWidth>this.columns[index].width;\n        // if the column width is less than the configured min, we override it\n        skipMinWidthProjection = (widthOpts && !!widthOpts.min);\n        if (widthOpts && widthOpts.min >= this._widths[index].value) {\n          this._widths[index].value = widthOpts.min;\n          this._widths[index].min = true;\n        // if the column width is more than the configured max, we override it\n        } else if (widthOpts && widthOpts.max <= this._widths[index].value) {\n          this._widths[index].value = widthOpts.max;\n          this._widths[index].max = true;\n        }\n      // if it has a fixed width, then we just set it\n      } else if (typeof this.columns[index].width === 'number') {\n        this._widths[index].value = <number>this.columns[index].width;\n        skipMinWidthProjection = this._widths[index].limit = true;\n      }\n    }\n    // if there wasn't any width or min width provided, we set a min to what the column width min should be\n    if (!skipMinWidthProjection &&\n        this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\n      this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\n      this._widths[index].min = true;\n      this._widths[index].limit = false;\n    }\n  }\n\n  /**\n   * Generic method to calculate column width\n   */\n  private _calculateWidth(): number {\n    let renderedColumns: ITdDataTableColumn[] = this.columns.filter((col: ITdDataTableColumn) => !col.hidden);\n    return Math.floor(this.hostWidth / renderedColumns.length);\n  }\n\n  /**\n   * Method to calculate the rows to be rendered in the viewport\n   */\n  private _calculateVirtualRows(): void {\n    let scrolledRows: number = 0;\n    if (this._data) {\n      this._totalHeight = 0;\n      let rowHeightSum: number = 0;\n      // loop through all rows to see if we have their height cached\n      // and sum them all to calculate the total height\n      this._data.forEach((d: any, i: number) => {\n        // iterate through all rows at first and assume all\n        // rows are the same height as the first one\n        if (!this._rowHeightCache[i]) {\n          this._rowHeightCache[i] = this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\n        }\n        rowHeightSum += this._rowHeightCache[i];\n        // check how many rows have been scrolled\n        if (this._scrollVerticalOffset - rowHeightSum > 0) {\n          scrolledRows++;\n        }\n      });\n      this._totalHeight = rowHeightSum;\n      // set the initial row to be rendered taking into account the row offset\n      let fromRow: number = scrolledRows - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n\n      let hostHeight: number = this._hostHeight;\n      let index: number = 0;\n      // calculate how many rows can fit in the viewport\n      while (hostHeight > 0) {\n        hostHeight -= this._rowHeightCache[this.fromRow + index];\n        index++;\n      }\n      // set the last row to be rendered taking into account the row offset\n      let range: number = (index - 1) + (TD_VIRTUAL_OFFSET * 2);\n      let toRow: number = range + this.fromRow;\n      // if last row is greater than the total length, then we use the total length\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    // calculate the proper offset depending on how many rows have been scrolled\n    if (scrolledRows > TD_VIRTUAL_OFFSET) {\n      for (let index: number = 0; index < this.fromRow; index++) {\n        offset += this._rowHeightCache[index];\n      }\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { Component, Input, Output, EventEmitter, Renderer2, ElementRef, HostBinding, HostListener, ViewChild } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styleUrls: ['./data-table-column.component.scss' ],\n  templateUrl: './data-table-column.component.html',\n})\nexport class TdDataTableColumnComponent {\n\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  @ViewChild('columnContent', {read: ElementRef}) _columnContent: ElementRef;\n\n  get projectedWidth(): number {\n    if (this._columnContent && this._columnContent.nativeElement) {\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\n    }\n    return 100;\n  }\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input('name') name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable') sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input('active') active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                        new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  @HostBinding('class.mat-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n  }\n\n  /**\n   * Listening to click event on host to throw a sort event\n   */\n  @HostListener('click')\n  handleClick(): void {\n    if (this.sortable) {\n      this.onSortChange.emit({name: this.name, order: this._sortOrder});\n    }\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n\n}\n","import { Component, Input, Renderer2, ElementRef, HostBinding } from '@angular/core';\n\nexport type TdDataTableCellAlign = 'start' | 'center' | 'end';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td[td-data-table-cell]',\n  styleUrls: ['./data-table-cell.component.scss' ],\n  templateUrl: './data-table-cell.component.html',\n})\nexport class TdDataTableCellComponent {\n\n  private _align: TdDataTableCellAlign;\n\n  /**\n   * numeric?: boolean\n   * Makes cell follow the numeric data-table specs.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * align?: 'start' | 'center' | 'end'\n   * Makes cell content align on demand\n   * Defaults to 'left', overrides numeric\n   */\n  @Input() \n  set align(align: TdDataTableCellAlign) {\n    this._align = align;\n  }\n  get align(): TdDataTableCellAlign {\n    return this._align;    \n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\n  }\n\n}\n","import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'table[td-data-table]',\n  styleUrls: ['./data-table-table.component.scss' ],\n  templateUrl: './data-table-table.component.html',\n})\nexport class TdDataTableTableComponent {\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\n  }\n\n}\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { TdDataTableSortingOrder, ITdDataTableColumn } from '../data-table.component';\n\n@Injectable()\nexport class TdDataTableService {\n\n  /**\n   * params:\n   * - data: any[]\n   * - searchTerm: string\n   * - ignoreCase: boolean = false\n   * - excludedColumns: string[] = []\n   *\n   * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n   */\n  filterData(data: any[], searchTerm: string, ignoreCase: boolean = false, excludedColumns?: string[]): any[] {\n    let filter: string = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n    if (filter) {\n      data = data.filter((item: any) => {\n        const res: any = Object.keys(item).find((key: string) => {\n          if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\n            const preItemValue: string = ('' + item[key]);\n            const itemValue: string = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n            return itemValue.indexOf(filter) > -1;\n          }\n        });\n        return !(typeof res === 'undefined');\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - sortBy: string\n   * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n   *\n   * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n   */\n  sortData(data: any[], sortBy: string, sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending): any[] {\n    if (sortBy) {\n      data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\n      data.sort((a: any, b: any) => {\n        let compA: any = a[sortBy];\n        let compB: any = b[sortBy];\n        let direction: number = 0;\n        if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n          direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n        } else {\n          if (compA < compB) {\n            direction = -1;\n          } else if (compA > compB) {\n            direction = 1;\n          }\n        }\n        return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - fromRow: number\n   * - toRow: : number\n   *\n   * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n   */\n  pageData(data: any[], fromRow: number, toRow: number): any[] {\n    if (fromRow >= 1) {\n      data = data.slice(fromRow - 1, toRow);\n    }\n    return data;\n  }\n}\n\nexport function DATA_TABLE_PROVIDER_FACTORY(\n    parent: TdDataTableService): TdDataTableService {\n  return parent || new TdDataTableService();\n}\n\nexport const DATA_TABLE_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdDataTableService,\n  deps: [[new Optional(), new SkipSelf(), TdDataTableService]],\n  useFactory: DATA_TABLE_PROVIDER_FACTORY,\n};\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\nimport { TdDataTableComponent } from './data-table.component';\nimport { TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableCellComponent } from './data-table-cell/data-table-cell.component';\nimport { TdDataTableRowComponent, TdDataTableColumnRowComponent } from './data-table-row/data-table-row.component';\nimport { TdDataTableTableComponent } from './data-table-table/data-table-table.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { DATA_TABLE_PROVIDER } from './services/data-table.service';\n\nconst TD_DATA_TABLE: Type<any>[] = [\n  TdDataTableComponent,\n  TdDataTableTemplateDirective,\n\n  TdDataTableColumnComponent,\n  TdDataTableCellComponent,\n  TdDataTableRowComponent,\n  TdDataTableColumnRowComponent,\n  TdDataTableTableComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatPseudoCheckboxModule,\n  ],\n  declarations: [\n    TD_DATA_TABLE,\n  ],\n  exports: [\n    TD_DATA_TABLE,\n  ],\n  providers: [\n    DATA_TABLE_PROVIDER,\n  ],\n})\nexport class CovalentDataTableModule {\n\n}\n","import { Component, Directive, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\n@Directive({selector: 'td-dialog-title'})\nexport class TdDialogTitleDirective {}\n\n@Directive({selector: 'td-dialog-content'})\nexport class TdDialogContentDirective {}\n\n@Directive({selector: 'td-dialog-actions'})\nexport class TdDialogActionsDirective {}\n\n@Component({\n  selector: 'td-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss' ],\n})\nexport class TdDialogComponent implements AfterContentInit {\n\n  @ContentChildren(TdDialogTitleDirective) dialogTitle: QueryList<TdDialogTitleDirective>;\n  @ContentChildren(TdDialogContentDirective) dialogContent: QueryList<TdDialogContentDirective>;\n  @ContentChildren(TdDialogActionsDirective) dialogActions: QueryList<TdDialogActionsDirective>;\n\n  ngAfterContentInit(): void {\n    if (this.dialogTitle.length > 1) {\n      throw new Error('Duplicate td-dialog-title component at in td-dialog.');\n    }\n    if (this.dialogContent.length > 1) {\n      throw new Error('Duplicate td-dialog-content component at in td-dialog.');\n    }\n    if (this.dialogActions.length > 1) {\n      throw new Error('Duplicate td-dialog-actions component at in td-dialog.');\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss' ],\n})\nexport class TdAlertDialogComponent {\n  title: string;\n  message: string;\n  closeButton: string = 'CLOSE';\n\n  constructor(private _dialogRef: MatDialogRef<TdAlertDialogComponent>) {}\n\n  close(): void {\n    this._dialogRef.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss' ],\n})\nexport class TdConfirmDialogComponent {\n  title: string;\n  message: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  constructor(private _dialogRef: MatDialogRef<TdConfirmDialogComponent>) {}\n\n  cancel(): void {\n    this._dialogRef.close(false);\n  }\n\n  accept(): void {\n    this._dialogRef.close(true);\n  }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  styleUrls: ['./prompt-dialog.component.scss' ],\n})\nexport class TdPromptDialogComponent implements AfterViewInit {\n  title: string;\n  message: string;\n  value: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  @ViewChild('input') _input: ElementRef;\n\n  constructor(private _dialogRef: MatDialogRef<TdPromptDialogComponent>) {}\n\n  ngAfterViewInit(): void {\n    // focus input once everything is rendered and good to go\n    Promise.resolve().then(() => {\n      (<HTMLInputElement>this._input.nativeElement).focus();\n    });\n  }\n\n  /**\n   * Method executed when input is focused\n   * Selects all text\n   */\n  handleInputFocus(): void {\n    (<HTMLInputElement>this._input.nativeElement).select();\n  }\n\n  cancel(): void {\n    this._dialogRef.close(undefined);\n  }\n\n  accept(): void {\n    this._dialogRef.close(this.value);\n  }\n}\n","import { Injectable, ViewContainerRef, Provider, SkipSelf, Optional } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\nimport { TdAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from '../prompt-dialog/prompt-dialog.component';\n\nexport interface IDialogConfig extends MatDialogConfig {\n  title?: string;\n  message: string;\n}\n\nexport interface IAlertConfig extends IDialogConfig {\n  closeButton?: string;\n}\n\nexport interface IConfirmConfig extends IDialogConfig {\n  acceptButton?: string;\n  cancelButton?: string;\n}\n\nexport interface IPromptConfig extends IConfirmConfig {\n  value?: string;\n}\n\n@Injectable()\nexport class TdDialogService {\n\n  constructor(private _dialogService: MatDialog) {}\n\n  /**\n   * params:\n   * - component: ComponentType<T>\n   * - config: MatDialogConfig\n   * Wrapper function over the open() method in MatDialog.\n   * Opens a modal dialog containing the given component.\n   */\n  public open<T>(component: ComponentType<T>, config?: MatDialogConfig): MatDialogRef<T> {\n    return this._dialogService.open(component, config);\n  }\n\n  /**\n   * Wrapper function over the closeAll() method in MatDialog.\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    this._dialogService.closeAll();\n  }\n\n  /**\n   * params:\n   * - config: IAlertConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     closeButton?: string;\n   * }\n   *\n   * Opens an alert dialog with the provided config.\n   * Returns an MatDialogRef<TdAlertDialogComponent> object.\n   */\n  public openAlert(config: IAlertConfig): MatDialogRef<TdAlertDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdAlertDialogComponent> =\n      this._dialogService.open(TdAlertDialogComponent, dialogConfig);\n    let alertDialogComponent: TdAlertDialogComponent = dialogRef.componentInstance;\n    alertDialogComponent.title = config.title;\n    alertDialogComponent.message = config.message;\n    if (config.closeButton) {\n      alertDialogComponent.closeButton = config.closeButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IConfirmConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a confirm dialog with the provided config.\n   * Returns an MatDialogRef<TdConfirmDialogComponent> object.\n   */\n  public openConfirm(config: IConfirmConfig): MatDialogRef<TdConfirmDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdConfirmDialogComponent> =\n      this._dialogService.open(TdConfirmDialogComponent, dialogConfig);\n    let confirmDialogComponent: TdConfirmDialogComponent = dialogRef.componentInstance;\n    confirmDialogComponent.title = config.title;\n    confirmDialogComponent.message = config.message;\n    if (config.acceptButton) {\n      confirmDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      confirmDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IPromptConfig {\n   *     message: string;\n   *     title?: string;\n   *     value?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a prompt dialog with the provided config.\n   * Returns an MatDialogRef<TdPromptDialogComponent> object.\n   */\n  public openPrompt(config: IPromptConfig): MatDialogRef<TdPromptDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdPromptDialogComponent> =\n      this._dialogService.open(TdPromptDialogComponent, dialogConfig);\n    let promptDialogComponent: TdPromptDialogComponent = dialogRef.componentInstance;\n    promptDialogComponent.title = config.title;\n    promptDialogComponent.message = config.message;\n    promptDialogComponent.value = config.value;\n    if (config.acceptButton) {\n      promptDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      promptDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  private _createConfig(config: IDialogConfig): MatDialogConfig {\n    let dialogConfig: MatDialogConfig = new MatDialogConfig();\n    dialogConfig.width = '400px';\n    Object.assign(dialogConfig, config);\n    return dialogConfig;\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdDialogComponent, TdDialogTitleDirective,\n         TdDialogActionsDirective, TdDialogContentDirective } from './dialog.component';\nimport { TdAlertDialogComponent } from './alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from './prompt-dialog/prompt-dialog.component';\nimport { TdDialogService } from './services/dialog.service';\n\nconst TD_DIALOGS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n];\n\nconst TD_DIALOGS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TD_DIALOGS,\n  ],\n  exports: [\n    TD_DIALOGS,\n  ],\n  providers: [\n    TdDialogService,\n  ],\n  entryComponents: [\n    TD_DIALOGS_ENTRY_COMPONENTS,\n  ],\n})\nexport class CovalentDialogsModule {\n\n}\n","import { Component, Directive, Input, Output, TemplateRef, ViewContainerRef, ContentChild,\n         ElementRef, Renderer2 } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  tdCollapseAnimation,\n  ICanDisable,\n  mixinDisabled,\n  ICanDisableRipple,\n  mixinDisableRipple,\n  tdRotateAnimation,\n} from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-expansion-panel-header]ng-template',\n})\nexport class TdExpansionPanelHeaderDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-label]ng-template',\n})\nexport class TdExpansionPanelLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-sublabel]ng-template',\n})\nexport class TdExpansionPanelSublabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Component({\n  selector: 'td-expansion-summary',\n  template: '<ng-content></ng-content>',\n})\nexport class TdExpansionPanelSummaryComponent {}\n\nexport class TdExpansionPanelBase {}\n\n/* tslint:disable-next-line */\nexport const _TdExpansionPanelMixinBase = mixinDisableRipple(mixinDisabled(TdExpansionPanelBase));\n\n@Component({\n  selector: 'td-expansion-panel',\n  styleUrls: ['./expansion-panel.component.scss' ],\n  templateUrl: './expansion-panel.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  animations: [\n    tdCollapseAnimation,\n    tdRotateAnimation,\n  ],\n})\nexport class TdExpansionPanelComponent extends _TdExpansionPanelMixinBase implements ICanDisable, ICanDisableRipple {\n\n  private _expand: boolean = false;\n\n  @ContentChild(TdExpansionPanelHeaderDirective) expansionPanelHeader: TdExpansionPanelHeaderDirective;\n  @ContentChild(TdExpansionPanelLabelDirective) expansionPanelLabel: TdExpansionPanelLabelDirective;\n  @ContentChild(TdExpansionPanelSublabelDirective) expansionPanelSublabel: TdExpansionPanelSublabelDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdExpansionPanelComponent] header.\n   * Defaults to 'Click to expand'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdExpansionPanelComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * expand?: boolean\n   * Toggles [TdExpansionPanelComponent] between expand/collapse.\n   */\n  @Input('expand')\n  set expand(expand: boolean) {\n    this._setExpand(coerceBooleanProperty(expand));\n  }\n  get expand(): boolean {\n    return this._expand;\n  }\n\n  /**\n   * expanded?: function\n   * Event emitted when [TdExpansionPanelComponent] is expanded.\n   */\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * collapsed?: function\n   * Event emitted when [TdExpansionPanelComponent] is collapsed.\n   */\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel');\n  }\n\n  /**\n   * Method executed when [TdExpansionPanelComponent] is clicked.\n   */\n  clickEvent(): void {\n    this._setExpand(!this._expand);\n  }\n\n  /**\n   * Toggle expand state of [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setExpand(!this._expand);\n  }\n\n  /**\n   * Opens [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setExpand(true);\n  }\n\n  /**\n   * Closes [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setExpand(false);\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._expand) {\n      this._expand = false;\n      this._onCollapsed();\n    }\n  }\n\n  /**\n   * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   */\n  private _setExpand(newExpand: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._expand !== newExpand) {\n      this._expand = newExpand;\n      if (newExpand) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onExpanded();\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onCollapsed();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onExpanded(): void {\n    this.expanded.emit(undefined);\n  }\n\n  private _onCollapsed(): void {\n    this.collapsed.emit(undefined);\n  }\n}\n","import {\n  Component,\n  Renderer2,\n  ElementRef,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { TdExpansionPanelComponent } from './expansion-panel.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'td-expansion-panel-group',\n  styleUrls: ['./expansion-panel-group.component.scss'],\n  templateUrl: './expansion-panel-group.component.html',\n})\nexport class TdExpansionPanelGroupComponent\n  implements AfterContentInit, OnDestroy {\n  private _multi: boolean = false;\n\n  private _lastOpenedPanels: TdExpansionPanelComponent[] = [];\n\n  private _destroyed: Subject<boolean> = new Subject<boolean>();\n  private _stopWatchingPanels: Subject<boolean> = new Subject<boolean>();\n\n  /**\n   * multi?: boolean\n   * Sets whether multiple panels can be opened at a given time.\n   * Set to false for accordion mode.\n   * Defaults to false.\n   */\n  @Input('multi')\n  set multi(multi: boolean) {\n    this._multi = coerceBooleanProperty(multi);\n    if (this._multi === false && this._lastOpenedPanels.length > 0) {\n      this._closeAllExcept(\n        this._lastOpenedPanels[this._lastOpenedPanels.length - 1],\n      );\n    }\n  }\n\n  @ContentChildren(TdExpansionPanelComponent) expansionPanels: QueryList<\n    TdExpansionPanelComponent\n  >;\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(\n      this._elementRef.nativeElement,\n      'td-expansion-panel-group',\n    );\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next(true);\n    this._destroyed.unsubscribe();\n    this._stopWatchingPanels.next(true);\n    this._stopWatchingPanels.unsubscribe();\n  }\n\n  public ngAfterContentInit(): void {\n    if (!this._multi) {\n      const openedPanels: TdExpansionPanelComponent[] = this.expansionPanels.filter(\n        (expansionPanel: TdExpansionPanelComponent) => expansionPanel.expand,\n      );\n      const numOpenedPanels: number = openedPanels.length;\n      if (numOpenedPanels > 1) {\n        this._closeAllExcept(openedPanels[numOpenedPanels - 1]);\n      }\n    }\n\n    this._attachListeners(this.expansionPanels);\n\n    this.expansionPanels.changes\n      .pipe(takeUntil(this._destroyed))\n      .subscribe((expansionPanels: QueryList<TdExpansionPanelComponent>) => {\n        this._stopWatchingPanels.next(true);\n        this._stopWatchingPanels.unsubscribe();\n        this._stopWatchingPanels = new Subject<boolean>();\n        this._attachListeners(expansionPanels);\n      });\n  }\n\n  /**\n   * Opens all expansion panels, only if multi set set to true.\n   */\n  public openAll(): void {\n    if (this._multi) {\n      this.expansionPanels.forEach(\n        (expansionPanel: TdExpansionPanelComponent) => {\n          expansionPanel.open();\n        },\n      );\n    }\n  }\n\n  /**\n   * Closes all expansion panels\n   */\n  public closeAll(): void {\n    this.expansionPanels.forEach(\n      (expansionPanel: TdExpansionPanelComponent) => {\n        expansionPanel.close();\n      },\n    );\n  }\n\n  private _attachListeners(\n    expansionPanels: QueryList<TdExpansionPanelComponent>,\n  ): void {\n    this._lastOpenedPanels = [];\n    expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.expanded\n        .pipe(takeUntil(this._stopWatchingPanels))\n        .subscribe(() => {\n          const indexOfPanel: number = this._lastOpenedPanels.indexOf(\n            expansionPanel,\n          );\n          if (indexOfPanel !== -1) {\n            this._lastOpenedPanels.splice(indexOfPanel, 1);\n          }\n          this._lastOpenedPanels.push(expansionPanel);\n\n          if (!this._multi) {\n            this._closeAllExcept(expansionPanel);\n          }\n        });\n\n      expansionPanel.collapsed\n        .pipe(takeUntil(this._stopWatchingPanels))\n        .subscribe(() => {\n          const indexOfPanel: number = this._lastOpenedPanels.indexOf(\n            expansionPanel,\n          );\n          if (indexOfPanel !== -1) {\n            this._lastOpenedPanels.splice(indexOfPanel, 1);\n          }\n        });\n    });\n  }\n\n  private _closeAllExcept(expansionPanel: TdExpansionPanelComponent): void {\n    this.expansionPanels.forEach((panel: TdExpansionPanelComponent) => {\n      if (panel !== expansionPanel) {\n        panel.close();\n      }\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdExpansionPanelComponent, TdExpansionPanelHeaderDirective, TdExpansionPanelLabelDirective,\n         TdExpansionPanelSublabelDirective, TdExpansionPanelSummaryComponent } from './expansion-panel.component';\nimport { TdExpansionPanelGroupComponent } from './expansion-panel-group.component';\n\nconst TD_EXPANSION_PANEL: Type<any>[] = [\n  TdExpansionPanelGroupComponent,\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    MatIconModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_EXPANSION_PANEL,\n  ],\n  exports: [\n    TD_EXPANSION_PANEL,\n  ],\n})\nexport class CovalentExpansionPanelModule {\n\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {\n  }\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'onFileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);\n      let files: FileList = fileInputEl.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);\n      }\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      let files: FileList = transfer.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.onFileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (this.disabled || (!this._multiple &&\n      ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (types) {\n      if (((<any>types).contains && (<any>types).contains('Files'))\n      || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {\n        dropEffect = 'copy';\n      }\n    }\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild,\n         ElementRef, Renderer2, TemplateRef, ViewContainerRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileInputComponent),\n    multi: true,\n  }],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-input.component.scss'],\n  templateUrl: './file-input.component.html',\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput') _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: string\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input('color') color: string;\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.onSelect.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n  /**\n   * Sets disable to the component. Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChild, ChangeDetectorRef,\n  forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileUploadComponent),\n    multi: true,\n  }],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.onUpload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.onSelect.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.value = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscriber } from 'rxjs';\n\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: {[key: string]: string};\n  formData?: FormData;\n}\n\n@Injectable()\nexport class TdFileService {\n\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  constructor() {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * Will be depricated when Angular fixes [Http] to allow [FormData] as body.\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round(event.loaded / event.total * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (let key in options.headers) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\nimport { TdFileService } from './services/file.service';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_FILE,\n  ],\n  exports: [\n    TD_FILE,\n  ],\n  providers: [\n    TdFileService,\n  ],\n})\nexport class CovalentFileModule {\n\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styleUrls: ['./json-formatter.component.scss' ],\n  templateUrl: './json-formatter.component.html',\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdJsonFormatterComponent {\n\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    let elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? 'â¦' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Dir) {\n  }\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    let type: string = this.getType(value);\n    if (type === 'undefined' || (type === 'null')) {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return value.toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{â¦}';\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      let date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]') {\n        if (!Number.isNaN(date.getTime())) {\n          return 'date';\n        }\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    let object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n        return 'Object';\n    }\n    let funcNameRegex: RegExp = /function (.{1,})\\(/;\n    let results: RegExpExecArray = (funcNameRegex).exec((object).constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      let previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      let previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    let previewString: string =  previewData.join(', ');\n    let ellipsis: string = previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n                           previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH ? 'â¦' : '';\n    return startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) +\n           ellipsis + endChar;\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (let key in this._data) {\n        this._children.push(key);\n      }\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdJsonFormatterComponent } from './json-formatter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdJsonFormatterComponent,\n  ],\n  exports: [\n    TdJsonFormatterComponent,\n  ],\n})\nexport class CovalentJsonFormatterModule {\n\n}\n","import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss' ],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   * \n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n","import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase { }\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable,\n              private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutToggle') \n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutClose') \n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutOpen') \n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss' ],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss' ],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   * \n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n  \n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListToggle') \n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutNavListClose') \n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListOpen') \n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss' ],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input('cardTitle') cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input('cardSubtitle') cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input('cardWidth') cardWidth: number = 70;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss' ],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   * \n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListToggle') \n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutManageListClose') \n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListOpen') \n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss' ],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: string\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n\n}\n","import { Component, Directive, Input, ContentChildren, OnInit, OnDestroy, forwardRef, Inject,\n         QueryList, SecurityContext, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {\n\n}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {\n\n}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss' ],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [ tdCollapseAnimation ],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective) _drawerMenu: QueryList<TdNavigationDrawerMenuDirective>;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective) _toolbar: QueryList<TdNavigationDrawerToolbarDirective>;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input('sidenavTitle') sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input('color') color: string;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      let sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input('name') name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input('email') email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n              @Optional() private _router: Router,\n              private _sanitize: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective, TdLayoutNavListCloseDirective, TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective, TdLayoutManageListCloseDirective, TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent, TdNavigationDrawerMenuDirective, TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollDispatchModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [\n    TD_LAYOUTS,\n  ],\n  exports: [\n    TD_LAYOUTS,\n  ],\n})\nexport class CovalentLayoutModule {\n\n}\n","import { Component, ViewChild, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy, ElementRef, DoCheck } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Observable, Subject } from 'rxjs';\n\nexport enum LoadingType {\n  Circular = 'circular',\n  Linear = 'linear',\n}\n\nexport enum LoadingMode {\n  Determinate = 'determinate',\n  Indeterminate = 'indeterminate',\n}\n\nexport enum LoadingStrategy {\n  Overlay = 'overlay',\n  Replace = 'replace',\n}\n\nexport enum LoadingStyle {\n  FullScreen = 'fullscreen',\n  Overlay = 'overlay',\n  None = 'none',\n}\n\nimport { tdFadeInOutAnimation } from '@covalent/core/common';\n\nexport const TD_CIRCLE_DIAMETER: number = 100;\n\n@Component({\n  selector: 'td-loading',\n  styleUrls: ['./loading.component.scss' ],\n  templateUrl: './loading.component.html',\n  animations: [\n    tdFadeInOutAnimation,\n  ],\n})\nexport class TdLoadingComponent implements DoCheck {\n\n  private _animationIn: Subject<any> = new Subject<any>();\n  private _animationOut: Subject<any> = new Subject<any>();\n  private _mode: LoadingMode = LoadingMode.Indeterminate;\n  private _defaultMode: LoadingMode = LoadingMode.Indeterminate;\n  private _value: number = 0;\n  private _circleDiameter: number = TD_CIRCLE_DIAMETER;\n\n  /**\n   * Flag for animation\n   */\n  animation: boolean = false;\n\n  /**\n   * Content injected into loading component.\n   */\n  content: TemplatePortal<any>;\n\n  /**\n   * Sets mode of [TdLoadingComponent] to LoadingMode.Determinate or LoadingMode.Indeterminate\n   */\n  set mode(mode: LoadingMode) {\n    this._defaultMode = mode;\n  }\n  get mode(): LoadingMode {\n    return this._mode;\n  }\n\n  /**\n   * Sets value of [TdLoadingComponent] if mode is 'LoadingMode.Determinate'\n   */\n  set value(value: number) {\n    this._value = value;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  style: LoadingStyle = LoadingStyle.None;\n\n  /**\n   * height: number\n   * Sets height of [TdLoadingComponent].\n   */\n  height: number;\n\n  /**\n   * type: LoadingType\n   * Sets type of [TdLoadingComponent] rendered.\n   */\n  type: LoadingType = LoadingType.Circular;\n\n  /**\n   * color: primary' | 'accent' | 'warn'\n   * Sets theme color of [TdLoadingComponent] rendered.\n   */\n  color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck(): void {\n    // When overlay is used and the host width has a value greater than 1px\n    // set the circle diameter when possible incase the loading component was rendered in a hidden state\n    if (this.isOverlay() && this._hostHeight() > 1) {\n      if (this.animation) {\n        this._setCircleDiameter();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  getHeight(): string {\n    // Ignore height if style is `overlay` or `fullscreen`.\n    // Add height if child elements have a height and style is `none`, else return default height.\n    if (this.isOverlay() || this.isFullScreen()) {\n      return undefined;\n    } else {\n      return this.height ? `${this.height}px` : '150px';\n    }\n  }\n\n  getCircleDiameter(): number {\n    return this._circleDiameter;\n  }\n\n  getCircleStrokeWidth(): number {\n    // we calculate the stroke width by setting it as 10% of its diameter\n    let strokeWidth: number = this.getCircleDiameter() / 10;\n    return Math.abs(strokeWidth);\n  }\n\n  isCircular(): boolean {\n    return this.type === LoadingType.Circular;\n  }\n\n  isLinear(): boolean {\n    return this.type === LoadingType.Linear;\n  }\n\n  isFullScreen(): boolean {\n    return this.style === LoadingStyle.FullScreen;\n  }\n\n  isOverlay(): boolean {\n    return this.style === LoadingStyle.Overlay;\n  }\n\n  animationComplete(event: AnimationEvent): void {\n    // Check to see if its \"in\" or \"out\" animation to execute the proper callback\n    if (!event.fromState) {\n      this.inAnimationCompleted();\n    } else {\n      this.outAnimationCompleted();\n    }\n  }\n\n  inAnimationCompleted(): void {\n    this._animationIn.next(undefined);\n  }\n\n  outAnimationCompleted(): void {\n   /* little hack to reset the loader value and animation before removing it from DOM\n    * else, the loader will appear with prev value when its registered again\n    * and will do an animation going prev value to 0.\n    */\n    this.value = 0;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    this._animationOut.next(undefined);\n  }\n\n  /**\n   * Starts in animation and returns an observable for completition event.\n   */\n  startInAnimation(): Observable<any> {\n    /* need to switch back to the selected mode, so we have saved it in another variable\n    *  and then recover it. (issue with protractor)\n    */\n    this._mode = this._defaultMode;\n    // Set values before the animations starts\n    this._setCircleDiameter();\n    // Check for changes for `OnPush` change detection\n    this.animation = true;\n    this._changeDetectorRef.markForCheck();\n    return this._animationIn.asObservable();\n  }\n\n  /**\n   * Starts out animation and returns an observable for completition event.\n   */\n  startOutAnimation(): Observable<any> {\n    this.animation = false;\n    /* need to switch back and forth from determinate/indeterminate so the setInterval()\n    * inside mat-progress-spinner stops and protractor doesnt timeout waiting to sync.\n    */\n    this._mode = LoadingMode.Determinate;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    return this._animationOut.asObservable();\n  }\n\n  /**\n   * Calculate the proper diameter for the circle and set it\n   */\n  private _setCircleDiameter(): void {\n    // we set a default diameter of 100 since this is the default in material\n    let diameter: number = TD_CIRCLE_DIAMETER;\n    // if height is provided, then we take that as diameter\n    if (this.height) {\n      diameter = this.height;\n      // else if its not provided, then we take the host height\n    } else if (this.height === undefined) {\n      diameter = this._hostHeight();\n    }\n    // if the diameter is over TD_CIRCLE_DIAMETER, we set TD_CIRCLE_DIAMETER\n    if (!!diameter && diameter <= TD_CIRCLE_DIAMETER) {\n      this._circleDiameter = Math.floor(diameter);\n    } else {\n      this._circleDiameter = TD_CIRCLE_DIAMETER;\n    }\n  }\n\n  /**\n   * Returns the host height of the loading component\n   */\n  private _hostHeight(): number {\n    if (<HTMLElement>this._elementRef.nativeElement) {\n      return (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return 0;\n  }\n}\n","import { Injectable, ComponentFactoryResolver, ChangeDetectorRef, Provider, SkipSelf, Optional, EmbeddedViewRef } from '@angular/core';\nimport { Injector, ComponentRef, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingStyle } from '../loading.component';\nimport { ITdLoadingConfig } from './loading.service';\n\nexport interface IInternalLoadingOptions extends ITdLoadingConfig {\n  height?: number;\n  style?: LoadingStyle;\n}\n\nexport interface ILoadingRef {\n  observable: Observable<any>;\n  componentRef: ComponentRef<any>;\n  subject?: Subject<any>;\n  times?: number;\n}\n\n/**\n * NOTE: @internal usage only.\n */\n@Injectable()\nexport class TdLoadingFactory {\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _overlay: Overlay,\n              private _injector: Injector) {\n  }\n\n  /**\n   * Uses material `Overlay` services to create a DOM element and attach the loading component\n   * into it. Leveraging the state and configuration from it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createFullScreenComponent(options: ITdLoadingConfig): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.FullScreen;\n    let loadingRef: ILoadingRef = this._initializeContext();\n    let loading: boolean = false;\n    let overlayRef: OverlayRef;\n    loadingRef.observable.pipe(\n      distinctUntilChanged(),\n    ).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        overlayRef = this._createOverlay();\n        loadingRef.componentRef = overlayRef.attach(new ComponentPortal(TdLoadingComponent));\n        this._mapOptions(options, loadingRef.componentRef.instance);\n        loadingRef.componentRef.instance.startInAnimation();\n        loadingRef.componentRef.changeDetectorRef.detectChanges();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          loadingRef.componentRef.destroy();\n          overlayRef.detach();\n          overlayRef.dispose();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Leverages TemplatePortals from material to inject the template inside of it so it fits\n   * perfectly when overlaying it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createOverlayComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\n                                templateRef: TemplateRef<Object>): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.Overlay;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    loadingRef.componentRef.instance.content = new TemplatePortal(templateRef, viewContainerRef);\n    viewContainerRef.clear();\n    viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n    loadingRef.observable.pipe(\n      distinctUntilChanged(),\n    ).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        loadingRef.componentRef.instance.startOutAnimation();\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Replaces the template with the loading component depending if it was registered or resolved.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createReplaceComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\n                                templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\n    let nativeElement: HTMLElement = <HTMLElement>templateRef.elementRef.nativeElement;\n    (<IInternalLoadingOptions>options).height = nativeElement.nextElementSibling ?\n      nativeElement.nextElementSibling.scrollHeight : undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.None;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    // passing context so when the template is attached, we can keep the reference of the variables\n    let contentRef: EmbeddedViewRef<Object> = viewContainerRef.createEmbeddedView(templateRef, context);\n    loadingRef.observable.pipe(\n      distinctUntilChanged(),\n    ).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        // detach the content and attach the loader if loader is there\n        let index: number = viewContainerRef.indexOf(loadingRef.componentRef.hostView);\n        if (index < 0) {\n          viewContainerRef.detach(viewContainerRef.indexOf(contentRef));\n          viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n        }\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          // detach loader and attach the content if content is there\n          let index: number = viewContainerRef.indexOf(contentRef);\n          if (index < 0) {\n            viewContainerRef.detach(viewContainerRef.indexOf(loadingRef.componentRef.hostView));\n            viewContainerRef.insert(contentRef, 0);\n          }\n          /**\n           * Need to call \"markForCheck\" and \"detectChanges\" on attached template, so its detected by parent component when attached\n           * with \"OnPush\" change detection\n           */\n          contentRef.detectChanges();\n          contentRef.markForCheck();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a fullscreen overlay for the loading usage.\n   */\n  private _createOverlay(): OverlayRef {\n    let state: OverlayConfig = new OverlayConfig();\n    state.hasBackdrop = false;\n    state.positionStrategy = this._overlay.position().global().centerHorizontally().centerVertically();\n    return this._overlay.create(state);\n  }\n\n  /**\n   * Creates a generic component dynamically waiting to be attached to a viewContainerRef.\n   */\n  private _createComponent(options: IInternalLoadingOptions): ILoadingRef {\n    let compRef: ILoadingRef = this._initializeContext();\n    compRef.componentRef = this._componentFactoryResolver\n    .resolveComponentFactory(TdLoadingComponent).create(this._injector);\n    this._mapOptions(options, compRef.componentRef.instance);\n    return compRef;\n  }\n\n  /**\n   * Initialize context for loading component.\n   */\n  private _initializeContext(): ILoadingRef {\n    let subject: Subject<any> = new Subject<any>();\n    return {\n      observable: subject.asObservable(),\n      subject: subject,\n      componentRef: undefined,\n      times: 0,\n    };\n  }\n\n  /**\n   * Maps configuration to the loading component instance.\n   */\n  private _mapOptions(options: IInternalLoadingOptions, instance: TdLoadingComponent): void {\n    instance.style = options.style;\n    if (options.type !== undefined) {\n      instance.type = options.type;\n    }\n    if (options.height !== undefined) {\n      instance.height = options.height;\n    }\n    if (options.mode !== undefined) {\n      instance.mode = options.mode;\n    }\n    if (options.color !== undefined) {\n      instance.color = options.color;\n    }\n  }\n}\n\nexport function LOADING_FACTORY_PROVIDER_FACTORY(\n    parent: TdLoadingFactory, componentFactoryResolver: ComponentFactoryResolver, overlay: Overlay, injector: Injector): TdLoadingFactory {\n  return parent || new TdLoadingFactory(componentFactoryResolver, overlay, injector);\n}\n\nexport const LOADING_FACTORY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingFactory,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingFactory], ComponentFactoryResolver, Overlay, Injector],\n  useFactory: LOADING_FACTORY_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingMode, LoadingStrategy, LoadingType } from '../loading.component';\nimport { TdLoadingFactory, ILoadingRef } from './loading.factory';\n\nexport interface ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n}\n\nexport class TdLoadingConfig implements ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n\n  constructor(config: ITdLoadingConfig) {\n    this.name = config.name;\n    if (!this.name) {\n      throw Error('Name is required for [TdLoading] configuration.');\n    }\n    this.mode = config.mode ? config.mode : LoadingMode.Indeterminate;\n    this.type = config.type ? config.type : LoadingType.Circular;\n    this.color = config.color ? config.color : 'primary';\n  }\n}\n\nexport interface ITdLoadingDirectiveConfig extends ITdLoadingConfig {\n  strategy?: LoadingStrategy;\n}\n\nexport class TdLoadingDirectiveConfig extends TdLoadingConfig implements ITdLoadingDirectiveConfig {\n  name: string;\n  type: LoadingType;\n  mode: LoadingMode;\n  strategy: LoadingStrategy;\n\n  constructor(config: ITdLoadingDirectiveConfig) {\n    super(config);\n    this.strategy = config.strategy ? config.strategy : LoadingStrategy.Replace;\n  }\n}\n\n@Injectable()\nexport class TdLoadingService {\n\n  private _context: {[key: string]: ILoadingRef} = {};\n  private _timeouts: {[key: string]: any} = {};\n\n  constructor(private _loadingFactory: TdLoadingFactory) {\n    this.create({\n      name: 'td-loading-main',\n    });\n  }\n\n  /**\n   * params:\n   * - config: ILoadingDirectiveConfig\n   * - viewContainerRef: ViewContainerRef\n   * - templateRef: TemplateRef<Object>\n   *\n   * Creates an replace loading mask and attaches it to the viewContainerRef.\n   * Replaces the templateRef with the mask when a request is registered on it.\n   *\n   * NOTE: @internal usage only.\n   */\n  createComponent(config: ITdLoadingDirectiveConfig, viewContainerRef: ViewContainerRef,\n                  templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\n    let directiveConfig: TdLoadingDirectiveConfig = new TdLoadingDirectiveConfig(config);\n    if (this._context[directiveConfig.name]) {\n      throw Error(`Name duplication: [TdLoading] directive has a name conflict with ${directiveConfig.name}.`);\n    }\n    if (directiveConfig.strategy === LoadingStrategy.Overlay) {\n      this._context[directiveConfig.name] = this._loadingFactory.createOverlayComponent(directiveConfig, viewContainerRef, templateRef);\n    } else {\n      this._context[directiveConfig.name] = this._loadingFactory.createReplaceComponent(directiveConfig, viewContainerRef, templateRef, context);\n    }\n    return this._context[directiveConfig.name];\n  }\n\n  /**\n   * params:\n   * - config: ITdLoadingConfig\n   *\n   * Creates a fullscreen loading mask and attaches it to the DOM with the given configuration.\n   * Only displayed when the mask has a request registered on it.\n   */\n  public create(config: ITdLoadingConfig): void {\n    let fullscreenConfig: TdLoadingConfig = new TdLoadingConfig(config);\n    this.removeComponent(fullscreenConfig.name);\n    this._context[fullscreenConfig.name] = this._loadingFactory.createFullScreenComponent(fullscreenConfig);\n  }\n\n  /**\n   * params:\n   * - name: string\n   *\n   * Removes `loading` component from service context.\n   */\n  public removeComponent(name: string): void {\n    if (this._context[name]) {\n      this._context[name].subject.unsubscribe();\n      if (this._context[name].componentRef) {\n        this._context[name].componentRef.destroy();\n      }\n      this._context[name] = undefined;\n      delete this._context[name];\n    }\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - registers?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass registers argument to set a number of register calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.register()\n   */\n  public register(name: string = 'td-loading-main', registers: number = 1): boolean {\n    // try registering into the service if the loading component has been instanciated or if it exists.\n    if (this._context[name]) {\n      registers = registers < 1 ? 1 : registers;\n      this._context[name].times += registers;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    } else {\n      // if it doesnt exist, set a timeout so its registered after change detection happens\n      // this in case \"register\" occured on the `ngOnInit` lifehook cycle.\n      if (!this._timeouts[name]) {\n        this._timeouts[name] = setTimeout(() => {\n          this.register(name, registers);\n        });\n      } else {\n        // if it timeout occured and still doesnt exist, it means the tiemout wasnt needed so we clear it.\n        this._clearTimeout(name);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - resolves?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass resolves argument to set a number of resolve calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolve()\n   */\n  public resolve(name: string = 'td-loading-main', resolves: number = 1): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      resolves = resolves < 1 ? 1 : resolves;\n      if (this._context[name].times > 0) {\n        let times: number = this._context[name].times;\n        times -= resolves;\n        this._context[name].times = times < 0 ? 0 : times;\n      }\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * returns: true if successful\n   *\n   * Resolves all request for the loading mask referenced by the name parameter.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolveAll()\n   */\n  public resolveAll(name: string = 'td-loading-main'): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      this._context[name].times = 0;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - value: number\n   * returns: true if successful\n   *\n   * Set value on a loading mask referenced by the name parameter.\n   * Usage only available if its mode is 'determinate' and if loading is showing.\n   */\n  public setValue(name: string, value: number): boolean {\n    if (this._context[name]) {\n      let instance: TdLoadingComponent = this._context[name].componentRef.instance;\n      if (instance.mode === LoadingMode.Determinate && instance.animation) {\n        instance.value = value;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Clears timeout linked to the name.\n   * @param name Name of the loading component to be cleared\n   */\n  private _clearTimeout(name: string): void {\n    clearTimeout(this._timeouts[name]);\n    delete this._timeouts[name];\n  }\n}\n\nexport function LOADING_PROVIDER_FACTORY(\n    parent: TdLoadingService, loadingFactory: TdLoadingFactory): TdLoadingService {\n  return parent || new TdLoadingService(loadingFactory);\n}\n\nexport const LOADING_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingService,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingService], TdLoadingFactory],\n  useFactory: LOADING_PROVIDER_FACTORY,\n};\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\n\nimport { LoadingType, LoadingMode, LoadingStrategy, TdLoadingComponent } from '../loading.component';\nimport { TdLoadingService } from '../services/loading.service';\nimport { ILoadingRef } from '../services/loading.factory';\n\n/**\n * Context class for variable reference\n */\nexport class TdLoadingContext {\n  public $implicit: any = undefined;\n  public tdLoading: any = undefined;\n}\n\n// Constant for generation of the id for the next component\nlet TD_LOADING_NEXT_ID: number = 0;\n\n@Directive({\n  selector: '[tdLoading]',\n})\nexport class TdLoadingDirective implements OnInit, OnDestroy {\n\n  private _context: TdLoadingContext = new TdLoadingContext();\n  private _type: LoadingType;\n  private _mode: LoadingMode;\n  private _strategy: LoadingStrategy;\n  private _name: string;\n  private _loadingRef: ILoadingRef;\n\n  /**\n   * tdLoading: string\n   * Name reference of the loading mask, used to register/resolve requests to the mask.\n   */\n  @Input('tdLoading')\n  set name(name: string) {\n    if (!this._name) {\n      if (name) {\n        this._name = name;\n      }\n    }\n  }\n\n  /**\n   * tdLoadingUntil?: any\n   * If its null, undefined or false it will be used to register requests to the mask.\n   * Else if its any value that can be resolved as true, it will resolve the mask.\n   * [name] is optional when using [until], but can still be used to register/resolve it manually.\n   */\n  @Input('tdLoadingUntil')\n  set until(until: any) {\n    if (!this._name) {\n      this._name = 'td-loading-until-' + TD_LOADING_NEXT_ID++;\n    }\n    this._context.$implicit = this._context.tdLoading = until;\n    if (!until) {\n      this._loadingService.register(this._name);\n    } else {\n      this._loadingService.resolveAll(this._name);\n    }\n  }\n\n  /**\n   * tdLoadingType?: LoadingType or ['linear' | 'circular']\n   * Sets the type of loading mask depending on value.\n   * Defaults to [LoadingType.Circular | 'circular'].\n   */\n  @Input('tdLoadingType')\n  set type(type: LoadingType) {\n    switch (type) {\n      case LoadingType.Linear:\n        this._type = LoadingType.Linear;\n        break;\n      default:\n        this._type = LoadingType.Circular;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingMode?: LoadingMode or ['determinate' | 'indeterminate']\n   * Sets the mode of loading mask depending on value.\n   * Defaults to [LoadingMode.Indeterminate | 'indeterminate'].\n   */\n  @Input('tdLoadingMode')\n  set mode(mode: LoadingMode) {\n    switch (mode) {\n      case LoadingMode.Determinate:\n        this._mode = LoadingMode.Determinate;\n        break;\n      default:\n        this._mode = LoadingMode.Indeterminate;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingStrategy?: LoadingStrategy or ['replace' | 'overlay']\n   * Sets the strategy of loading mask depending on value.\n   * Defaults to [LoadingMode.Replace | 'replace'].\n   */\n  @Input('tdLoadingStrategy')\n  set strategy(stategy: LoadingStrategy) {\n    switch (stategy) {\n      case LoadingStrategy.Overlay:\n        this._strategy = LoadingStrategy.Overlay;\n        break;\n      default:\n        this._strategy = LoadingStrategy.Replace;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingColor?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the loading component. Defaults to \"primary\"\n   */\n  @Input('tdLoadingColor') color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _viewContainerRef: ViewContainerRef,\n              private _templateRef: TemplateRef<TdLoadingContext>,\n              private _loadingService: TdLoadingService) {}\n\n  /**\n   * Registers component in the DOM, so it will be available when calling resolve/register.\n   */\n  ngOnInit(): void {\n    this._registerComponent();\n  }\n\n  /**\n   * Remove component when directive is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._loadingService.removeComponent(this._name);\n    this._loadingRef = undefined;\n  }\n\n  /**\n   * Creates [TdLoadingComponent] and attaches it to this directive's [ViewContainerRef].\n   * Passes this directive's [TemplateRef] to modify DOM depending on loading `strategy`.\n   */\n  private _registerComponent(): void {\n    if (!this._name) {\n      throw new Error('Name is needed to register loading directive');\n    }\n    // Check if `TdLoadingComponent` has been created before trying to add one again.\n    // There is a weird edge case when using `[routerLinkActive]` that calls the `ngOnInit` twice in a row\n    if (!this._loadingRef) {\n      this._loadingRef = this._loadingService.createComponent({\n        name: this._name,\n        type: this._type,\n        mode: this._mode,\n        color: this.color,\n        strategy: this._strategy,\n      }, this._viewContainerRef, this._templateRef, this._context);\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TdLoadingService, LOADING_PROVIDER } from './services/loading.service';\nimport { TdLoadingFactory, LOADING_FACTORY_PROVIDER } from './services/loading.factory';\nimport { TdLoadingDirective } from './directives/loading.directive';\nimport { TdLoadingComponent } from './loading.component';\n\nconst TD_LOADING: Type<any>[] = [\n  TdLoadingComponent,\n  TdLoadingDirective,\n];\n\nconst TD_LOADING_ENTRY_COMPONENTS: Type<any>[] = [\n  TdLoadingComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    OverlayModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_LOADING,\n  ],\n  exports: [\n    TD_LOADING,\n  ],\n  providers: [\n    LOADING_FACTORY_PROVIDER,\n    LOADING_PROVIDER,\n  ],\n  entryComponents: [\n    TD_LOADING_ENTRY_COMPONENTS,\n  ],\n})\nexport class CovalentLoadingModule {\n\n}\n","import { Injectable, NgZone, SkipSelf, Optional, Provider } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, fromEvent } from 'rxjs';\n\n@Injectable()\nexport class TdMediaService {\n\n  private _resizing: boolean = false;\n  private _globalSubscription: Subscription;\n  private _queryMap: Map<string, string> = new Map<string, string>();\n  private _querySources: { [key: string]: BehaviorSubject<boolean>} = {};\n  private _queryObservables: {[key: string]: Observable<boolean>} = {};\n\n  constructor(private _ngZone: NgZone) {\n    this._queryMap.set('xs', '(max-width: 599px)');\n    this._queryMap.set('gt-xs', '(min-width: 600px)');\n    this._queryMap.set('sm', '(min-width: 600px) and (max-width: 959px)');\n    this._queryMap.set('gt-sm', '(min-width: 960px)');\n    this._queryMap.set('md', '(min-width: 960px) and (max-width: 1279px)');\n    this._queryMap.set('gt-md', '(min-width: 1280px)');\n    this._queryMap.set('lg', '(min-width: 1280px) and (max-width: 1919px)');\n    this._queryMap.set('gt-lg', '(min-width: 1920px)');\n    this._queryMap.set('xl', '(min-width: 1920px)');\n    this._queryMap.set('landscape', '(orientation: landscape)');\n    this._queryMap.set('portrait', '(orientation: portrait)');\n    this._queryMap.set('print', 'print');\n\n    this._resizing = false;\n    // we make sure that the resize checking happend outside of Angular since it happens often\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window, 'resize').subscribe(() => {\n        // way to prevent the resize event from triggering the match media if there is already one event running already.\n        if (!this._resizing) {\n          this._resizing = true;\n          setTimeout(() => {\n            this._onResize();\n            this._resizing = false;\n          }, 100);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deregisters a query so its stops being notified or used.\n   */\n  deregisterQuery(query: string): void {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    this._querySources[query].unsubscribe();\n    delete this._querySources[query];\n    delete this._queryObservables[query];\n  }\n\n  /**\n   * Used to evaluate whether a given media query is true or false given the current device's screen / window size.\n   */\n  public query(query: string): boolean {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    return this._ngZone.run(() => {\n      return matchMedia(query).matches;\n    });\n  }\n\n  /**\n   * Registers a media query and returns an [Observable] that will re-evaluate and\n   * return if the given media query matches on window resize.\n   * Note: don't forget to unsubscribe from [Observable] when finished watching.\n   */\n  public registerQuery(query: string): Observable<boolean> {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    if (!this._querySources[query]) {\n      this._querySources[query] = new BehaviorSubject<boolean>(matchMedia(query).matches);\n      this._queryObservables[query] = this._querySources[query].asObservable();\n    }\n    return this._queryObservables[query];\n  }\n\n  /**\n   * Trigger a match media event on all subscribed observables.\n   */\n  public broadcast(): void {\n    this._onResize();\n  }\n\n  private _onResize(): void {\n    for (let query in this._querySources) {\n      this._ngZone.run(() => {\n        this._matchMediaTrigger(query);\n      });\n    }\n  }\n\n  private _matchMediaTrigger(query: string): void {\n    this._querySources[query].next(matchMedia(query).matches);\n  }\n}\n\nexport function MEDIA_PROVIDER_FACTORY(\n    parent: TdMediaService, ngZone: NgZone): TdMediaService {\n  return parent || new TdMediaService(ngZone);\n}\n\nexport const MEDIA_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdMediaService,\n  deps: [[new Optional(), new SkipSelf(), TdMediaService], NgZone],\n  useFactory: MEDIA_PROVIDER_FACTORY,\n};\n","import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdMediaService } from '../services/media.service';\n\n@Directive({\n  selector: '[tdMediaToggle]',\n})\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n\n  private _query: string;\n  private _matches: boolean = false;\n  private _attributes: {[key: string]: string} = {};\n  private _styles: {[key: string]: string} = {};\n  private _classes: string[] = [];\n\n  /**\n   * tdMediaToggle: string\n   * Media query used to evaluate screen/window size.\n   * Toggles attributes, classes and styles if media query is matched.\n   */\n  @Input('tdMediaToggle')\n  set query(query: string) {\n    if (!query) {\n      throw new Error('Query needed for [tdMediaToggle] directive.');\n    }\n    this._query = query;\n  }\n\n  /**\n   * mediaAttributes: {[key: string]: string}\n   * Attributes to be toggled when media query matches.\n   */\n  @Input('mediaAttributes')\n  set attributes(attributes: any) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * mediaClasses: string[]\n   * CSS Classes to be toggled when media query matches.\n   */\n  @Input('mediaClasses')\n  set classes(classes: string[]) {\n    this._classes = classes;\n  }\n\n  /**\n   * mediaStyles: {[key: string]: string}\n   * CSS Styles to be toggled when media query matches.\n   */\n  @Input('mediaStyles')\n  set styles(styles: any) {\n    this._styles = styles;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _mediaService: TdMediaService) { }\n\n  ngOnInit(): void {\n    this._mediaChange(this._mediaService.query(this._query));\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\n      this._mediaChange(matches);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _mediaChange(matches: boolean): void {\n    this._matches = matches;\n    this._changeAttributes();\n    this._changeClasses();\n    this._changeStyles();\n  }\n\n  private _changeAttributes(): void {\n    for (let attr in this._attributes) {\n      if (this._matches) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, attr, this._attributes[attr]);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, attr);\n      }\n    }\n  }\n\n  private _changeClasses(): void {\n    this._classes.forEach((className: string) => {\n      if (this._matches) {\n        this._renderer.addClass(this._elementRef.nativeElement, className);\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, className);\n      }\n    });\n  }\n\n  private _changeStyles(): void {\n    for (let style in this._styles) {\n      if (this._matches) {\n        this._renderer.setStyle(this._elementRef.nativeElement, style, this._styles[style]);\n      } else {\n        this._renderer.removeStyle(this._elementRef.nativeElement, style);\n      }\n    }\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MEDIA_PROVIDER } from './services/media.service';\nimport { TdMediaToggleDirective } from './directives/media-toggle.directive';\n\nconst TD_MEDIA: Type<any>[] = [\n  TdMediaToggleDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_MEDIA,\n  ],\n  exports: [\n    TD_MEDIA,\n  ],\n  providers: [\n    MEDIA_PROVIDER,\n  ],\n})\nexport class CovalentMediaModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class TdMenuComponent {\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdMenuComponent } from './menu.component';\n\nconst TD_MENU: Type<any>[] = [\n  TdMenuComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    MatDividerModule,\n  ],\n  declarations: [\n    TD_MENU,\n  ],\n  exports: [\n    TD_MENU,\n  ],\n})\nexport class CovalentMenuModule {\n\n}\n","import { Component, ViewChild, OnInit, Input, Output, EventEmitter, Optional,\n         ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Dir } from '@angular/cdk/bidi';\nimport { MatInput } from '@angular/material/input';\n\nimport { debounceTime, skip } from 'rxjs/operators';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) { }\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchInputMixinBase = mixinControlValueAccessor(TdSearchInputBase);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdSearchInputComponent),\n    multi: true,\n  }],\n  selector: 'td-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('searchState', [\n      state('hide-left', style({\n        transform: 'translateX(-150%)',\n        display: 'none',\n      })),\n      state('hide-right', style({\n        transform: 'translateX(150%)',\n        display: 'none',\n      })),\n      state('show',  style({\n        transform: 'translateX(0%)',\n        display: 'block',\n      })),\n      transition('* => show', animate('200ms ease-in')),\n      transition('show => *', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchInputComponent extends _TdSearchInputMixinBase implements IControlValueAccessor, OnInit {\n\n  @ViewChild(MatInput) _input: MatInput;\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output('blur') onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._input.ngControl.valueChanges.pipe(\n      debounceTime(this.debounce),\n      skip(1), // skip first change when value is set to undefined\n    ).subscribe((value: string) => {\n      this._searchTermChanged(value);\n    });\n  }\n\n  /**\n   * Method to focus to underlying input.\n   */\n  focus(): void {\n    this._input.focus();\n  }\n\n  handleBlur(): void {\n    this.onBlur.emit(undefined);\n  }\n\n  stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  handleSearch(event: Event): void {\n    this.stopPropagation(event);\n    this.onSearch.emit(this.value);\n  }\n\n  /**\n   * Method to clear the underlying input.\n   */\n  clearSearch(): void {\n    this.value = '';\n    this._changeDetectorRef.markForCheck();\n    this.onClear.emit(undefined);\n  }\n\n  private _searchTermChanged(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n\n}\n","import { Component, ViewChild, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, state, style, transition, animate, AUTO_STYLE } from '@angular/animations';\n\nimport { TdSearchInputComponent } from '../search-input/search-input.component';\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchBoxBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) { }\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchBoxMixinBase = mixinControlValueAccessor(TdSearchBoxBase);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdSearchBoxComponent),\n    multi: true,\n  }],\n  selector: 'td-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('inputState', [\n      state('0', style({\n        width: '0%',\n        margin: '0px',\n      })),\n      state('1',  style({\n        width: '100%',\n        margin: AUTO_STYLE,\n      })),\n      transition('0 => 1', animate('200ms ease-in')),\n      transition('1 => 0', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchBoxComponent extends _TdSearchBoxMixinBase implements IControlValueAccessor {\n\n  private _searchVisible: boolean = false;\n  @ViewChild(TdSearchInputComponent) _searchInput: TdSearchInputComponent;\n\n  get searchVisible(): boolean {\n    return this._searchVisible;\n  }\n\n  /**\n   * backIcon?: string\n   * The icon used to close the search toggle, only shown when [alwaysVisible] is false.\n   * Defaults to 'search' icon.\n   */\n  @Input('backIcon') backIcon: string = 'search';\n\n  /**\n   * searchIcon?: string\n   * The icon used to open/focus the search toggle.\n   * Defaults to 'search' icon.\n   */\n  @Input('searchIcon') searchIcon: string = 'search';\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * alwaysVisible?: boolean\n   * Sets if the input should always be visible. Defaults to 'false'.\n   */\n  @Input('alwaysVisible') alwaysVisible: boolean = false;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output('blur') onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when the search icon is clicked.\n   */\n  searchClicked(): void {\n    if (!this.alwaysVisible && this._searchVisible) {\n      this.value = '';\n      this.handleClear();\n    } else if (this.alwaysVisible || !this._searchVisible) {\n      this._searchInput.focus();\n    }\n    this.toggleVisibility();\n  }\n\n  toggleVisibility(): void {\n    this._searchVisible = !this._searchVisible;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  handleSearchDebounce(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n\n  handleSearch(value: string): void {\n    this.onSearch.emit(value);\n  }\n\n  handleClear(): void {\n    this.onClear.emit(undefined);\n  }\n\n  handleBlur(): void {\n    this.onBlur.emit(undefined);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdSearchInputComponent } from './search-input/search-input.component';\nimport { TdSearchBoxComponent } from './search-box/search-box.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TdSearchInputComponent,\n    TdSearchBoxComponent,\n  ],\n  exports: [\n    TdSearchInputComponent,\n    TdSearchBoxComponent,\n  ],\n})\nexport class CovalentSearchModule {\n\n}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'mat-button td-breadcrumb',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'\n  separatorIcon: string = 'chevron_right';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    setTimeout(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport {\n  Subscription,\n  Subject,\n  fromEvent,\n  merge,\n} from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n} from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-breadcrumbs',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.\n   */\n  @Input('separatorIcon') separatorIcon: string = 'chevron_right';\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(10),\n      ),\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._calculateVisibility();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n  * Current width of the element container\n  */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    let breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private _calculateVisibility(): void {\n    let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    let crumbWidthSum: number = 0;\n    let hiddenCrumbs: TdBreadcrumbComponent[] = [];\n    // loop through crumbs in reverse order to calculate which ones should be removed\n    for (let i: number = crumbsArray.length - 1; i >= 0; i--) {\n      let breadcrumb: TdBreadcrumbComponent = crumbsArray[i];\n      // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array\n      // and hide it\n      if ((crumbWidthSum + breadcrumb.width) > this.nativeElementWidth) {\n        breadcrumb.displayCrumb = false;\n        hiddenCrumbs.push(breadcrumb);\n      } else {\n        // else we show it\n        breadcrumb.displayCrumb = true;\n      }\n      crumbWidthSum += breadcrumb.width;\n    }\n    this.hiddenBreadcrumbs = hiddenCrumbs;\n    this._changeDetectorRef.markForCheck();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n  exports: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n})\nexport class CovalentBreadcrumbsModule {\n\n}\n","import { Component, Directive, Input, Output, TemplateRef, ViewChild,\n         ViewContainerRef, ContentChild, OnInit } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective, TemplatePortal } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nexport enum StepState {\n  None = 'none',\n  Required = 'required',\n  Complete = 'complete',\n}\n\n@Directive({\n  selector: '[td-step-label]ng-template',\n})\nexport class TdStepLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-actions]ng-template',\n})\nexport class TdStepActionsDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-summary]ng-template',\n})\nexport class TdStepSummaryDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdStepBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepMixinBase = mixinDisableRipple(mixinDisabled(TdStepBase));\n\n@Component({\n  selector: 'td-step',\n  inputs: ['disabled', 'disableRipple'],\n  templateUrl: './step.component.html',\n})\nexport class TdStepComponent extends _TdStepMixinBase implements OnInit, ICanDisable, ICanDisableRipple {\n\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  private _contentPortal: TemplatePortal<any>;\n  get stepContent(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n  @ContentChild(TdStepLabelDirective) stepLabel: TdStepLabelDirective;\n  @ContentChild(TdStepActionsDirective) stepActions: TdStepActionsDirective;\n  @ContentChild(TdStepSummaryDirective) stepSummary: TdStepSummaryDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdStepComponent] header.\n   * Defaults to 'Step #'\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdStepComponent] header.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles [TdStepComponent] between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._setActive(coerceBooleanProperty(active));\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of [TdStepComponent] depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * activated?: function\n   * Event emitted when [TdStepComponent] is activated.\n   */\n  @Output('activated') onActivated: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * deactivated?: function\n   * Event emitted when [TdStepComponent] is deactivated.\n   */\n  @Output('deactivated') onDeactivated: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n  /**\n   * Toggle active state of [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setActive(!this._active);\n  }\n\n  /**\n   * Opens [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setActive(true);\n  }\n\n  /**\n   * Closes [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setActive(false);\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this._state === StepState.Complete;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._active) {\n      this._active = false;\n      this._onDeactivated();\n    }\n  }\n\n  /**\n   * Method to change active state internally and emit the [onActivated] event if 'true' or [onDeactivated]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   * returns true if successfully changed state\n   */\n  private _setActive(newActive: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._active !== newActive) {\n      this._active = newActive;\n      if (newActive) {\n        this._onActivated();\n      } else {\n        this._onDeactivated();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onActivated(): void {\n    this.onActivated.emit(undefined);\n  }\n\n  private _onDeactivated(): void {\n    this.onDeactivated.emit(undefined);\n  }\n}\n","import { Component, Input, Output } from '@angular/core';\nimport { OnDestroy, AfterContentInit } from '@angular/core';\nimport { EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdStepComponent } from './step.component';\n\nexport interface IStepChangeEvent {\n  newStep: TdStepComponent;\n  prevStep: TdStepComponent;\n}\n\nexport enum StepMode {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\n@Component({\n  selector: 'td-steps',\n  styleUrls: ['./steps.component.scss' ],\n  templateUrl: './steps.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps',\n  },\n})\nexport class TdStepsComponent implements OnDestroy, AfterContentInit {\n\n  private _subcriptions: Subscription[];\n  private _mode: StepMode = StepMode.Vertical;\n  private _steps: QueryList<TdStepComponent>;\n\n  @ContentChildren(TdStepComponent)\n  set stepsContent(steps: QueryList<TdStepComponent>) {\n    if (steps) {\n      this._steps = steps;\n      this._registerSteps();\n    }\n  }\n\n  get steps(): TdStepComponent[] {\n    return this._steps.toArray();\n  }\n  prevStep: TdStepComponent;\n\n  /**\n   * mode?: StepMode or [\"vertical\" | \"horizontal\"]\n   * Defines if the mode of the [TdStepsComponent].  Defaults to [StepMode.Vertical | \"vertical\"]\n   */\n  @Input('mode')\n  set mode(mode: StepMode) {\n    switch (mode) {\n      case StepMode.Horizontal:\n        this._mode = StepMode.Horizontal;\n        break;\n      default:\n        this._mode = StepMode.Vertical;\n    }\n  }\n  get mode(): StepMode {\n    return this._mode;\n  }\n\n  /**\n   * stepChange?: function\n   * Method to be executed when [onStepChange] event is emitted.\n   * Emits an [IStepChangeEvent] implemented object.\n   */\n  @Output('stepChange') onStepChange: EventEmitter<IStepChangeEvent> = new EventEmitter<IStepChangeEvent>();\n\n  /**\n   * Executed after content is initialized, loops through any [TdStepComponent] children elements,\n   * assigns them a number and subscribes as an observer to their [onActivated] event.\n   */\n  ngAfterContentInit(): void {\n    this._registerSteps();\n  }\n\n  /**\n   * Unsubscribes from [TdStepComponent] children elements when component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._deregisterSteps();\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Horizontal | 'horizontal'], else 'false'.\n   */\n  isHorizontal(): boolean {\n    return this._mode === StepMode.Horizontal;\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Vertical | 'vertical'], else 'false'.\n   */\n  isVertical(): boolean {\n    return this._mode === StepMode.Vertical;\n  }\n\n  areStepsActive(): boolean {\n    return this._steps.filter((step: TdStepComponent) => {\n      return step.active;\n    }).length > 0;\n  }\n\n  /**\n   * Wraps previous and new [TdStepComponent] numbers in an object that implements [IStepChangeEvent]\n   * and emits [onStepChange] event.\n   */\n  private _onStepSelection(step: TdStepComponent): void {\n    if (this.prevStep !== step) {\n      let prevStep: TdStepComponent = this.prevStep;\n      this.prevStep = step;\n      let event: IStepChangeEvent = {\n        newStep: step,\n        prevStep: prevStep,\n      };\n      this._deactivateAllBut(step);\n      this.onStepChange.emit(event);\n    }\n  }\n\n  /**\n   * Loops through [TdStepComponent] children elements and deactivates them ignoring the one passed as an argument.\n   */\n  private _deactivateAllBut(activeStep: TdStepComponent): void {\n    this._steps.filter((step: TdStepComponent) => step !== activeStep)\n    .forEach((step: TdStepComponent) => {\n      step.active = false;\n    });\n  }\n\n  private _registerSteps(): void {\n    this._subcriptions = [];\n    this._steps.toArray().forEach((step: TdStepComponent) => {\n      let subscription: Subscription = step.onActivated.asObservable().subscribe(() => {\n        this._onStepSelection(step);\n      });\n      this._subcriptions.push(subscription);\n    });\n  }\n\n  private _deregisterSteps(): void {\n    if (this._subcriptions) {\n      this._subcriptions.forEach((subs: Subscription) => {\n        subs.unsubscribe();\n      });\n      this._subcriptions = undefined;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nimport { StepState } from '../step.component';\n\nexport class TdStepHeaderBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepHeaderMixinBase = mixinDisableRipple(mixinDisabled(TdStepHeaderBase));\n\n@Component({\n  selector: 'td-step-header',\n  inputs: ['disabled', 'disableRipple'],\n  styleUrls: ['./step-header.component.scss' ],\n  templateUrl: './step-header.component.html',\n})\nexport class TdStepHeaderComponent extends _TdStepHeaderMixinBase implements ICanDisable, ICanDisableRipple {\n\n  /**\n   * Number assigned to [TdStepHeaderComponent].\n   */\n  @Input('number') number: number;\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on header.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of header.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * tabIndex?: number\n   * tabIndex of the step header for a11y\n   */\n  @Input('tabIndex') tabIndex: number;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Required | 'required'], else 'false'.\n   */\n  isRequired(): boolean {\n    return this.state === StepState.Required;\n  }\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\n\nimport { StepState } from '../step.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  selector: 'td-step-body',\n  styleUrls: ['./step-body.component.scss' ],\n  templateUrl: './step-body.component.html',\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdStepBodyComponent {\n\n  @ViewChild('contentRef', { read: ElementRef }) contentRef: ElementRef;\n\n  get hasContent(): boolean {\n    return this.contentRef &&\n          (this.contentRef.nativeElement.children.length > 0 || !!this.contentRef.nativeElement.textContent.trim());\n  }\n\n  @ViewChild('actionsRef', { read: ElementRef }) actionsRef: ElementRef;\n\n  get hasActions(): boolean {\n    return this.actionsRef &&\n          (this.actionsRef.nativeElement.children.length > 0 || !!this.actionsRef.nativeElement.textContent.trim());\n  }\n\n  @ViewChild('summaryRef', { read: ElementRef }) summaryRef: ElementRef;\n\n  get hasSummary(): boolean {\n    return this.summaryRef &&\n          (this.summaryRef.nativeElement.children.length > 0 || !!this.summaryRef.nativeElement.textContent.trim());\n  }\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on body.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of body.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n}\n","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, ElementRef } from '@angular/core';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, ICanDisableRipple } from '@covalent/core/common';\nimport { _TdStepMixinBase, StepState } from '../../step.component';\n\n@Component({\n  selector: '[td-step-link],[tdStepLink]',\n  styleUrls: ['./nav-step-link.component.scss'],\n  templateUrl: './nav-step-link.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    '[class.td-step-link]': 'true',\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n    '[attr.disabled]': 'disabled || null',\n    '[class.mat-disabled]': 'disabled || null',\n    '(click)': '_handleClick($event)',\n  },\n})\nexport class TdNavStepLinkComponent extends _TdStepMixinBase implements ICanDisable, ICanDisableRipple {\n\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  // Number to display in step header\n  number: number;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of component depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * label?: string\n   * Label to display in step header\n   * Defaults to empty\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   * Sublabel to display in step header\n   * Defaults to empty\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles component between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._active = coerceBooleanProperty(active);\n    this._changeDetectorRef.markForCheck();\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * tabIndex?: number\n   * tabIndex for component\n   */\n  @Input('tabIndex') tabIndex: number;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              public elementRef: ElementRef) {\n    super();\n  }\n\n  _handleClick(click: Event): void {\n    if (this.disabled) {\n      click.preventDefault();\n      click.stopImmediatePropagation();\n    }\n  }\n\n}\n","import { Component, Optional, ContentChildren, ViewChild, QueryList, OnDestroy, ChangeDetectionStrategy, \n         AfterContentInit, AfterContentChecked, ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';\n\nimport { Subject, merge, of } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][horizontal]',\n  styleUrls: ['./nav-steps-horizontal.component.scss'],\n  templateUrl: './nav-steps-horizontal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-horizontal',\n    '[class.td-step-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.td-step-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class TdNavStepsHorizontalComponent implements AfterContentChecked, AfterContentInit, OnDestroy {\n\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  private _widthSubject: Subject<number> = new Subject<number>();\n\n  private _scrollDistance: number = 0;\n  private _scrollDistanceChanged: boolean = false;\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls: boolean = false;\n\n  /** Whether the step list can be scrolled more towards the end. */\n  _disableScrollAfter: boolean = true;\n\n  /** Whether the step list can be scrolled more towards the beginning. */\n  _disableScrollBefore: boolean = true;\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepListContainer') _stepListContainer: ElementRef;\n  @ViewChild('stepList') _stepList: ElementRef;\n\n  /*\n  * Current width of the element container\n  */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);\n\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngAfterContentInit(): void {\n    merge(\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n      this._viewportRuler.change(150),\n      this._dir ? this._dir.change : of(undefined),\n      this._steps.changes,\n    ).pipe(\n      takeUntil(this._destroyed),\n    ).subscribe(() => {\n      this._configureSteps();\n      this.updatePagination();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentChecked(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n    if (this._scrollDistanceChanged) {\n      this._updateStepScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Listen to right and left key events to move the the viewport.\n   */\n  _handleKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._scrollHeader('before');\n        event.preventDefault();\n        break;\n      case RIGHT_ARROW:\n        this._scrollHeader('after');\n        event.preventDefault();\n        break;\n      default:\n        // do something\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   */\n  updatePagination(): void {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateStepScrollPosition();\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n    /** Performs the CSS transformation on the step list that will cause the list to scroll. */\n  _updateStepScrollPosition(): void {\n    const translateX: number = this._getLayoutDirection() === 'ltr' ? -this.scrollDistance : this.scrollDistance;\n    // Move step list the amount of pixels scrolled\n    this._stepList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off.\n    if (this._getLayoutDirection() === 'ltr') {\n      this._stepListContainer.nativeElement.scrollLeft = 0;\n    } else {\n      this._stepListContainer.nativeElement.scrollLeft = this._getMaxScrollDistance();\n    }\n  }\n\n  /** Sets the distance in pixels that the step header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the step list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively).\n   */\n  _scrollHeader(scrollDir: ScrollDirection): void {\n    // Move the scroll distance one-half the length of the step list's viewport.\n    this.scrollDistance += (scrollDir === 'before' ? -1 : 1) * this._stepListContainer.nativeElement.offsetWidth / 2;\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * step list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   */\n  _checkPaginationEnabled(): void {\n    const isEnabled: boolean =\n        this._stepList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   */\n  _checkScrollingControls(): void {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance === 0;\n    this._disableScrollAfter = this.scrollDistance === this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the step list container and step header container.\n   */\n  _getMaxScrollDistance(): number {\n    return (this._stepList.nativeElement.scrollWidth - this._stepListContainer.nativeElement.offsetWidth) || 0;\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    let stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        let separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-horizontal-line');\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n    \n  }\n\n}\n","import { Component, ContentChildren, ViewChild, QueryList, OnDestroy, ChangeDetectionStrategy, \n         AfterContentInit, Renderer2, ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][vertical]',\n  styleUrls: ['./nav-steps-vertical.component.scss'],\n  templateUrl: './nav-steps-vertical.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-vertical',\n  },\n})\nexport class TdNavStepsVerticalComponent implements AfterContentInit, OnDestroy {\n\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepList') _stepList: ElementRef;\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngAfterContentInit(): void {\n    this._steps.changes.pipe(\n      takeUntil(this._destroyed),\n    ).subscribe(() => {\n      this._configureSteps();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    let stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        let separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-vertical-line-wrapper');\n        let separatorChild: any = this._renderer.createElement('div');\n        this._renderer.addClass(separatorChild, 'td-vertical-line');\n        this._renderer.appendChild(separator, separatorChild);\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n    \n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\n\n// Steps\nimport { TdStepsComponent } from './steps.component';\nimport { TdStepHeaderComponent } from './step-header/step-header.component';\nimport { TdStepBodyComponent } from './step-body/step-body.component';\nimport { TdStepComponent, TdStepLabelDirective, TdStepActionsDirective,\n         TdStepSummaryDirective } from './step.component';\n\n// Nav Steps\nimport { TdNavStepsHorizontalComponent } from './nav/nav-steps-horizontal/nav-steps-horizontal.component';\nimport { TdNavStepsVerticalComponent } from './nav/nav-steps-vertical/nav-steps-vertical.component';\nimport { TdNavStepLinkComponent } from './nav/nav-step-link/nav-step-link.component';\n\nconst TD_STEPS: Type<any>[] = [\n  TdStepsComponent,\n  TdStepComponent,\n  TdStepHeaderComponent,\n  TdStepBodyComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n  TdNavStepsHorizontalComponent,\n  TdNavStepsVerticalComponent,\n  TdNavStepLinkComponent,\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatRippleModule,\n    PortalModule,\n    ScrollDispatchModule,\n    CovalentCommonModule,\n  ],\n  declarations: [\n    TD_STEPS,\n  ],\n  exports: [\n    TD_STEPS,\n  ],\n})\nexport class CovalentStepsModule {\n\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { mixinDisabled, ICanDisable } from '@covalent/core/common';\n\nexport class TdTabOptionBase {\n  constructor(public _viewContainerRef: ViewContainerRef,\n              public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabOptionMixinBase = mixinDisabled(TdTabOptionBase);\n\n@Component({\n  selector: 'td-tab-option',\n  templateUrl: './tab-option.component.html',\n  styleUrls: ['./tab-option.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  inputs: ['disabled'],\n})\nexport class TdTabOptionComponent extends _TdTabOptionMixinBase implements ICanDisable, OnInit {\n\n  private _contentPortal: TemplatePortal<any>;\n  get content(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n\n  /**\n   * Value to which the option will be binded to.\n   */\n  @Input('value') value: any;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_viewContainerRef, _changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  AfterContentInit,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable,\n          mixinDisabled,\n          IControlValueAccessor,\n          mixinControlValueAccessor,\n          ICanDisableRipple,\n          mixinDisableRipple,\n} from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdTabOptionComponent } from './tab-option.component';\n\nexport class TdTabSelectBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabSelectMixinBase = mixinControlValueAccessor(mixinDisabled(mixinDisableRipple(TdTabSelectBase)));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdTabSelectComponent),\n    multi: true,\n  }],\n  selector: 'td-tab-select',\n  templateUrl: './tab-select.component.html',\n  styleUrls: ['./tab-select.component.scss'],\n  /* tslint:disable-next-line */\n  inputs: ['value', 'disabled', 'disableRipple'],\n})\nexport class TdTabSelectComponent extends _TdTabSelectMixinBase\n                                  implements IControlValueAccessor, ICanDisable, ICanDisableRipple, OnInit, AfterContentInit, OnDestroy {\n\n  private _subs: Subscription[] = [];\n\n  private _values: any[] = [];\n  private _selectedIndex: number = 0;\n  private _stretchTabs: boolean = false;\n\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  /**\n   * Gets all tab option children\n   */\n  @ContentChildren(TdTabOptionComponent) readonly _tabOptions: QueryList<TdTabOptionComponent>;\n\n  get tabOptions(): TdTabOptionComponent[] {\n    return this._tabOptions ? this._tabOptions.toArray() : undefined;\n  }\n\n  /**\n   * Makes the tabs stretch to fit the parent container.\n   */\n  @Input('stretchTabs')\n  set stretchTabs(stretchTabs: boolean) {\n    this._stretchTabs = coerceBooleanProperty(stretchTabs);\n  }\n  get stretchTabs(): boolean {\n    return this._stretchTabs;\n  }\n\n  /**\n   * Color of the tab group.\n   */\n  @Input('color') color: ThemePalette;\n\n  /**\n   * Background color of the tab group.\n   */\n  @Input('backgroundColor') backgroundColor: ThemePalette;\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    // subscribe to check if value changes and update the selectedIndex internally.\n    this._subs.push(\n      this.valueChanges.subscribe((value: any) => {\n        this._setValue(value);\n      }),\n    );\n  }\n\n  ngAfterContentInit(): void {\n    // subscribe to listen to any tab changes.\n    this._refreshValues();\n    this._subs.push(\n      this._tabOptions.changes.subscribe(() => {\n        this._refreshValues();\n      }),\n    );\n    // initialize value\n    Promise.resolve().then(() => {\n      this._setValue(this.value);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs && this._subs.length) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * Method executed when user selects a different tab\n   * This updates the new selectedIndex and infers what value should be mapped to.\n   */\n  selectedIndexChange(selectedIndex: number): void {\n    this._selectedIndex = selectedIndex;\n    let value: any = this._values[selectedIndex];\n    this.value = value;\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  /**\n   * Refresh the values array whenever the number of tabs gets updated\n   */\n  private _refreshValues(): void {\n    this._values = this.tabOptions.map((tabOption: TdTabOptionComponent) => {\n      return tabOption.value;\n    });\n  }\n\n  /**\n   * Try to set value depending if its part of our options\n   * else set the value of the first tab.\n   */\n  private _setValue(value: any): void {\n    let index: number = this._values.indexOf(value);\n    if (index > -1) {\n      this._selectedIndex = index;\n    } else {\n      this.value = this._values.length ? this._values[0] : undefined;\n      this._selectedIndex = 0;\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TdTabSelectComponent } from './tab-select.component';\nimport { TdTabOptionComponent } from './tab-option.component';\n\n@NgModule({\n  declarations: [\n    TdTabSelectComponent,\n    TdTabOptionComponent,\n  ], // directives, components, and pipes owned by this NgModule\n  imports: [\n    /** Angular Modules */\n    CommonModule,\n    FormsModule,\n    /** Material Modules */\n    PortalModule,\n    MatTabsModule,\n  ], // modules needed to run this module\n  exports: [\n    TdTabSelectComponent,\n    TdTabOptionComponent,\n  ],\n})\nexport class CovalentTabSelectModule {}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisable {\n  disabled: boolean;\n  onDisabledChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disabled(): boolean {\n      return this._disabled;\n    }\n    set disabled(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.onDisabledChange(this._disabled);\n      }\n    }\n\n    onDisabledChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisableRipple {\n  disableRipple: boolean;\n  onDisableRippleChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disableRipple(): boolean {\n      return this._disableRipple;\n    }\n    set disableRipple(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disableRipple !== newValue) {\n        this._disableRipple = newValue;\n        this.onDisableRippleChange(this._disableRipple);\n      }\n    }\n\n    onDisableRippleChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n"]}